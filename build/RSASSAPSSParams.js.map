{"version":3,"sources":["../src/RSASSAPSSParams.js"],"names":["RSASSAPSSParams","constructor","parameters","hashAlgorithm","defaultValues","maskGenAlgorithm","saltLength","trailerField","fromSchema","schema","memberName","AlgorithmIdentifier","algorithmId","algorithmParams","asn1js","Null","toSchema","Error","names","Sequence","name","blockName","value","Constructed","idBlock","tagClass","tagNumber","optional","Integer","asn1","compareSchema","verified","result","valueBlock","valueDec","outputArray","isEqual","push","toJSON","object"],"mappings":"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","sourcesContent":["import * as asn1js from \"asn1js\";\r\nimport { getParametersValue, clearProps } from \"pvutils\";\r\nimport AlgorithmIdentifier from \"./AlgorithmIdentifier.js\";\r\n//**************************************************************************************\r\n/**\r\n * Class from RFC4055\r\n */\r\nexport default class RSASSAPSSParams\r\n{\r\n\t//**********************************************************************************\r\n\t/**\r\n\t * Constructor for RSASSAPSSParams class\r\n\t * @param {Object} [parameters={}]\r\n\t * @param {Object} [parameters.schema] asn1js parsed value to initialize the class from\r\n\t */\r\n\tconstructor(parameters = {})\r\n\t{\r\n\t\t//region Internal properties of the object\r\n\t\t/**\r\n\t\t * @type {AlgorithmIdentifier}\r\n\t\t * @desc Algorithms of hashing (DEFAULT sha1)\r\n\t\t */\r\n\t\tthis.hashAlgorithm = getParametersValue(parameters, \"hashAlgorithm\", RSASSAPSSParams.defaultValues(\"hashAlgorithm\"));\r\n\t\t/**\r\n\t\t * @type {AlgorithmIdentifier}\r\n\t\t * @desc Algorithm of \"mask generaion function (MGF)\" (DEFAULT mgf1SHA1)\r\n\t\t */\r\n\t\tthis.maskGenAlgorithm = getParametersValue(parameters, \"maskGenAlgorithm\", RSASSAPSSParams.defaultValues(\"maskGenAlgorithm\"));\r\n\t\t/**\r\n\t\t * @type {number}\r\n\t\t * @desc Salt length (DEFAULT 20)\r\n\t\t */\r\n\t\tthis.saltLength = getParametersValue(parameters, \"saltLength\", RSASSAPSSParams.defaultValues(\"saltLength\"));\r\n\t\t/**\r\n\t\t * @type {number}\r\n\t\t * @desc (DEFAULT 1)\r\n\t\t */\r\n\t\tthis.trailerField = getParametersValue(parameters, \"trailerField\", RSASSAPSSParams.defaultValues(\"trailerField\"));\r\n\t\t//endregion\r\n\r\n\t\t//region If input argument array contains \"schema\" for this object\r\n\t\tif(\"schema\" in parameters)\r\n\t\t\tthis.fromSchema(parameters.schema);\r\n\t\t//endregion\r\n\t}\r\n\t//**********************************************************************************\r\n\t/**\r\n\t * Return default values for all class members\r\n\t * @param {string} memberName String name for a class member\r\n\t */\r\n\tstatic defaultValues(memberName)\r\n\t{\r\n\t\tswitch(memberName)\r\n\t\t{\r\n\t\t\tcase \"hashAlgorithm\":\r\n\t\t\t\treturn new AlgorithmIdentifier({\r\n\t\t\t\t\talgorithmId: \"1.3.14.3.2.26\", // SHA-1\r\n\t\t\t\t\talgorithmParams: new asn1js.Null()\r\n\t\t\t\t});\r\n\t\t\tcase \"maskGenAlgorithm\":\r\n\t\t\t\treturn new AlgorithmIdentifier({\r\n\t\t\t\t\talgorithmId: \"1.2.840.113549.1.1.8\", // MGF1\r\n\t\t\t\t\talgorithmParams: (new AlgorithmIdentifier({\r\n\t\t\t\t\t\talgorithmId: \"1.3.14.3.2.26\", // SHA-1\r\n\t\t\t\t\t\talgorithmParams: new asn1js.Null()\r\n\t\t\t\t\t})).toSchema()\r\n\t\t\t\t});\r\n\t\t\tcase \"saltLength\":\r\n\t\t\t\treturn 20;\r\n\t\t\tcase \"trailerField\":\r\n\t\t\t\treturn 1;\r\n\t\t\tdefault:\r\n\t\t\t\tthrow new Error(`Invalid member name for RSASSAPSSParams class: ${memberName}`);\r\n\t\t}\r\n\t}\r\n\t//**********************************************************************************\r\n\t/**\r\n\t * Return value of pre-defined ASN.1 schema for current class\r\n\t *\r\n\t * ASN.1 schema:\r\n\t * ```asn1\r\n\t * RSASSA-PSS-params  ::=  Sequence  {\r\n\t *    hashAlgorithm      [0] HashAlgorithm DEFAULT sha1Identifier,\r\n\t *    maskGenAlgorithm   [1] MaskGenAlgorithm DEFAULT mgf1SHA1Identifier,\r\n\t *    saltLength         [2] Integer DEFAULT 20,\r\n\t *    trailerField       [3] Integer DEFAULT 1  }\r\n\t * ```\r\n\t *\r\n\t * @param {Object} parameters Input parameters for the schema\r\n\t * @returns {Object} asn1js schema object\r\n\t */\r\n\tstatic schema(parameters = {})\r\n\t{\r\n\t\t/**\r\n\t\t * @type {Object}\r\n\t\t * @property {string} [blockName]\r\n\t\t * @property {string} [hashAlgorithm]\r\n\t\t * @property {string} [maskGenAlgorithm]\r\n\t\t * @property {string} [saltLength]\r\n\t\t * @property {string} [trailerField]\r\n\t\t */\r\n\t\tconst names = getParametersValue(parameters, \"names\", {});\r\n\r\n\t\treturn (new asn1js.Sequence({\r\n\t\t\tname: (names.blockName || \"\"),\r\n\t\t\tvalue: [\r\n\t\t\t\tnew asn1js.Constructed({\r\n\t\t\t\t\tidBlock: {\r\n\t\t\t\t\t\ttagClass: 3, // CONTEXT-SPECIFIC\r\n\t\t\t\t\t\ttagNumber: 0 // [0]\r\n\t\t\t\t\t},\r\n\t\t\t\t\toptional: true,\r\n\t\t\t\t\tvalue: [AlgorithmIdentifier.schema(names.hashAlgorithm || {})]\r\n\t\t\t\t}),\r\n\t\t\t\tnew asn1js.Constructed({\r\n\t\t\t\t\tidBlock: {\r\n\t\t\t\t\t\ttagClass: 3, // CONTEXT-SPECIFIC\r\n\t\t\t\t\t\ttagNumber: 1 // [1]\r\n\t\t\t\t\t},\r\n\t\t\t\t\toptional: true,\r\n\t\t\t\t\tvalue: [AlgorithmIdentifier.schema(names.maskGenAlgorithm || {})]\r\n\t\t\t\t}),\r\n\t\t\t\tnew asn1js.Constructed({\r\n\t\t\t\t\tidBlock: {\r\n\t\t\t\t\t\ttagClass: 3, // CONTEXT-SPECIFIC\r\n\t\t\t\t\t\ttagNumber: 2 // [2]\r\n\t\t\t\t\t},\r\n\t\t\t\t\toptional: true,\r\n\t\t\t\t\tvalue: [new asn1js.Integer({ name: (names.saltLength || \"\") })]\r\n\t\t\t\t}),\r\n\t\t\t\tnew asn1js.Constructed({\r\n\t\t\t\t\tidBlock: {\r\n\t\t\t\t\t\ttagClass: 3, // CONTEXT-SPECIFIC\r\n\t\t\t\t\t\ttagNumber: 3 // [3]\r\n\t\t\t\t\t},\r\n\t\t\t\t\toptional: true,\r\n\t\t\t\t\tvalue: [new asn1js.Integer({ name: (names.trailerField || \"\") })]\r\n\t\t\t\t})\r\n\t\t\t]\r\n\t\t}));\r\n\t}\r\n\t//**********************************************************************************\r\n\t/**\r\n\t * Convert parsed asn1js object into current class\r\n\t * @param {!Object} schema\r\n\t */\r\n\tfromSchema(schema)\r\n\t{\r\n\t\t//region Clear input data first\r\n\t\tclearProps(schema, [\r\n\t\t\t\"hashAlgorithm\",\r\n\t\t\t\"maskGenAlgorithm\",\r\n\t\t\t\"saltLength\",\r\n\t\t\t\"trailerField\"\r\n\t\t]);\r\n\t\t//endregion\r\n\t\t\r\n\t\t//region Check the schema is valid\r\n\t\tconst asn1 = asn1js.compareSchema(schema,\r\n\t\t\tschema,\r\n\t\t\tRSASSAPSSParams.schema({\r\n\t\t\t\tnames: {\r\n\t\t\t\t\thashAlgorithm: {\r\n\t\t\t\t\t\tnames: {\r\n\t\t\t\t\t\t\tblockName: \"hashAlgorithm\"\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t},\r\n\t\t\t\t\tmaskGenAlgorithm: {\r\n\t\t\t\t\t\tnames: {\r\n\t\t\t\t\t\t\tblockName: \"maskGenAlgorithm\"\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t},\r\n\t\t\t\t\tsaltLength: \"saltLength\",\r\n\t\t\t\t\ttrailerField: \"trailerField\"\r\n\t\t\t\t}\r\n\t\t\t})\r\n\t\t);\r\n\r\n\t\tif(asn1.verified === false)\r\n\t\t\tthrow new Error(\"Object's schema was not verified against input data for RSASSAPSSParams\");\r\n\t\t//endregion\r\n\r\n\t\t//region Get internal properties from parsed schema\r\n\t\tif(\"hashAlgorithm\" in asn1.result)\r\n\t\t\tthis.hashAlgorithm = new AlgorithmIdentifier({ schema: asn1.result.hashAlgorithm });\r\n\r\n\t\tif(\"maskGenAlgorithm\" in asn1.result)\r\n\t\t\tthis.maskGenAlgorithm = new AlgorithmIdentifier({ schema: asn1.result.maskGenAlgorithm });\r\n\r\n\t\tif(\"saltLength\" in asn1.result)\r\n\t\t\tthis.saltLength = asn1.result.saltLength.valueBlock.valueDec;\r\n\r\n\t\tif(\"trailerField\" in asn1.result)\r\n\t\t\tthis.trailerField = asn1.result.trailerField.valueBlock.valueDec;\r\n\t\t//endregion\r\n\t}\r\n\t//**********************************************************************************\r\n\t/**\r\n\t * Convert current object to asn1js object and set correct values\r\n\t * @returns {Object} asn1js object\r\n\t */\r\n\ttoSchema()\r\n\t{\r\n\t\t//region Create array for output sequence\r\n\t\tconst outputArray = [];\r\n\t\t\r\n\t\tif(!this.hashAlgorithm.isEqual(RSASSAPSSParams.defaultValues(\"hashAlgorithm\")))\r\n\t\t{\r\n\t\t\toutputArray.push(new asn1js.Constructed({\r\n\t\t\t\tidBlock: {\r\n\t\t\t\t\ttagClass: 3, // CONTEXT-SPECIFIC\r\n\t\t\t\t\ttagNumber: 0 // [0]\r\n\t\t\t\t},\r\n\t\t\t\tvalue: [this.hashAlgorithm.toSchema()]\r\n\t\t\t}));\r\n\t\t}\r\n\t\t\r\n\t\tif(!this.maskGenAlgorithm.isEqual(RSASSAPSSParams.defaultValues(\"maskGenAlgorithm\")))\r\n\t\t{\r\n\t\t\toutputArray.push(new asn1js.Constructed({\r\n\t\t\t\tidBlock: {\r\n\t\t\t\t\ttagClass: 3, // CONTEXT-SPECIFIC\r\n\t\t\t\t\ttagNumber: 1 // [1]\r\n\t\t\t\t},\r\n\t\t\t\tvalue: [this.maskGenAlgorithm.toSchema()]\r\n\t\t\t}));\r\n\t\t}\r\n\t\t\r\n\t\tif(this.saltLength !== RSASSAPSSParams.defaultValues(\"saltLength\"))\r\n\t\t{\r\n\t\t\toutputArray.push(new asn1js.Constructed({\r\n\t\t\t\tidBlock: {\r\n\t\t\t\t\ttagClass: 3, // CONTEXT-SPECIFIC\r\n\t\t\t\t\ttagNumber: 2 // [2]\r\n\t\t\t\t},\r\n\t\t\t\tvalue: [new asn1js.Integer({ value: this.saltLength })]\r\n\t\t\t}));\r\n\t\t}\r\n\t\t\r\n\t\tif(this.trailerField !== RSASSAPSSParams.defaultValues(\"trailerField\"))\r\n\t\t{\r\n\t\t\toutputArray.push(new asn1js.Constructed({\r\n\t\t\t\tidBlock: {\r\n\t\t\t\t\ttagClass: 3, // CONTEXT-SPECIFIC\r\n\t\t\t\t\ttagNumber: 3 // [3]\r\n\t\t\t\t},\r\n\t\t\t\tvalue: [new asn1js.Integer({ value: this.trailerField })]\r\n\t\t\t}));\r\n\t\t}\r\n\t\t//endregion\r\n\t\t\r\n\t\t//region Construct and return new ASN.1 schema for this object\r\n\t\treturn (new asn1js.Sequence({\r\n\t\t\tvalue: outputArray\r\n\t\t}));\r\n\t\t//endregion\r\n\t}\r\n\t//**********************************************************************************\r\n\t/**\r\n\t * Convertion for the class to JSON object\r\n\t * @returns {Object}\r\n\t */\r\n\ttoJSON()\r\n\t{\r\n\t\tconst object = {};\r\n\r\n\t\tif(!this.hashAlgorithm.isEqual(RSASSAPSSParams.defaultValues(\"hashAlgorithm\")))\r\n\t\t\tobject.hashAlgorithm = this.hashAlgorithm.toJSON();\r\n\r\n\t\tif(!this.maskGenAlgorithm.isEqual(RSASSAPSSParams.defaultValues(\"maskGenAlgorithm\")))\r\n\t\t\tobject.maskGenAlgorithm = this.maskGenAlgorithm.toJSON();\r\n\r\n\t\tif(this.saltLength !== RSASSAPSSParams.defaultValues(\"saltLength\"))\r\n\t\t\tobject.saltLength = this.saltLength;\r\n\r\n\t\tif(this.trailerField !== RSASSAPSSParams.defaultValues(\"trailerField\"))\r\n\t\t\tobject.trailerField = this.trailerField;\r\n\r\n\t\treturn object;\r\n\t}\r\n\t//**********************************************************************************\r\n}\r\n//**************************************************************************************\r\n"],"file":"RSASSAPSSParams.js"}