{"version":3,"sources":["../src/OriginatorPublicKey.js"],"names":["OriginatorPublicKey","constructor","parameters","algorithm","defaultValues","publicKey","fromSchema","schema","memberName","AlgorithmIdentifier","asn1js","BitString","Error","compareWithDefault","memberValue","isEqual","names","Sequence","name","blockName","value","asn1","compareSchema","verified","result","toSchema","toJSON"],"mappings":"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","sourcesContent":["import * as asn1js from \"asn1js\";\r\nimport { getParametersValue, clearProps } from \"pvutils\";\r\nimport AlgorithmIdentifier from \"./AlgorithmIdentifier.js\";\r\n//**************************************************************************************\r\n/**\r\n * Class from RFC5652\r\n */\r\nexport default class OriginatorPublicKey\r\n{\r\n\t//**********************************************************************************\r\n\t/**\r\n\t * Constructor for OriginatorPublicKey class\r\n\t * @param {Object} [parameters={}]\r\n\t * @param {Object} [parameters.schema] asn1js parsed value to initialize the class from\r\n\t */\r\n\tconstructor(parameters = {})\r\n\t{\r\n\t\t//region Internal properties of the object\r\n\t\t/**\r\n\t\t * @type {AlgorithmIdentifier}\r\n\t\t * @desc algorithm\r\n\t\t */\r\n\t\tthis.algorithm = getParametersValue(parameters, \"algorithm\", OriginatorPublicKey.defaultValues(\"algorithm\"));\r\n\t\t/**\r\n\t\t * @type {BitString}\r\n\t\t * @desc publicKey\r\n\t\t */\r\n\t\tthis.publicKey = getParametersValue(parameters, \"publicKey\", OriginatorPublicKey.defaultValues(\"publicKey\"));\r\n\t\t//endregion\r\n\r\n\t\t//region If input argument array contains \"schema\" for this object\r\n\t\tif(\"schema\" in parameters)\r\n\t\t\tthis.fromSchema(parameters.schema);\r\n\t\t//endregion\r\n\t}\r\n\t//**********************************************************************************\r\n\t/**\r\n\t * Return default values for all class members\r\n\t * @param {string} memberName String name for a class member\r\n\t */\r\n\tstatic defaultValues(memberName)\r\n\t{\r\n\t\tswitch(memberName)\r\n\t\t{\r\n\t\t\tcase \"algorithm\":\r\n\t\t\t\treturn new AlgorithmIdentifier();\r\n\t\t\tcase \"publicKey\":\r\n\t\t\t\treturn new asn1js.BitString();\r\n\t\t\tdefault:\r\n\t\t\t\tthrow new Error(`Invalid member name for OriginatorPublicKey class: ${memberName}`);\r\n\t\t}\r\n\t}\r\n\t//**********************************************************************************\r\n\t/**\r\n\t * Compare values with default values for all class members\r\n\t * @param {string} memberName String name for a class member\r\n\t * @param {*} memberValue Value to compare with default value\r\n\t */\r\n\tstatic compareWithDefault(memberName, memberValue)\r\n\t{\r\n\t\tswitch(memberName)\r\n\t\t{\r\n\t\t\tcase \"algorithm\":\r\n\t\t\tcase \"publicKey\":\r\n\t\t\t\treturn (memberValue.isEqual(OriginatorPublicKey.defaultValues(memberName)));\r\n\t\t\tdefault:\r\n\t\t\t\tthrow new Error(`Invalid member name for OriginatorPublicKey class: ${memberName}`);\r\n\t\t}\r\n\t}\r\n\t//**********************************************************************************\r\n\t/**\r\n\t * Return value of pre-defined ASN.1 schema for current class\r\n\t *\r\n\t * ASN.1 schema:\r\n\t * ```asn1\r\n\t * OriginatorPublicKey ::= SEQUENCE {\r\n\t *    algorithm AlgorithmIdentifier,\r\n\t *    publicKey BIT STRING }\r\n\t * ```\r\n\t *\r\n\t * @param {Object} parameters Input parameters for the schema\r\n\t * @returns {Object} asn1js schema object\r\n\t */\r\n\tstatic schema(parameters = {})\r\n\t{\r\n\t\t/**\r\n\t\t * @type {Object}\r\n\t\t * @property {string} [blockName]\r\n\t\t * @property {string} [algorithm]\r\n\t\t * @property {string} [publicKey]\r\n\t\t */\r\n\t\tconst names = getParametersValue(parameters, \"names\", {});\r\n\r\n\t\treturn (new asn1js.Sequence({\r\n\t\t\tname: (names.blockName || \"\"),\r\n\t\t\tvalue: [\r\n\t\t\t\tAlgorithmIdentifier.schema(names.algorithm || {}),\r\n\t\t\t\tnew asn1js.BitString({ name: (names.publicKey || \"\") })\r\n\t\t\t]\r\n\t\t}));\r\n\t}\r\n\t//**********************************************************************************\r\n\t/**\r\n\t * Convert parsed asn1js object into current class\r\n\t * @param {!Object} schema\r\n\t */\r\n\tfromSchema(schema)\r\n\t{\r\n\t\t//region Clear input data first\r\n\t\tclearProps(schema, [\r\n\t\t\t\"algorithm\",\r\n\t\t\t\"publicKey\"\r\n\t\t]);\r\n\t\t//endregion\r\n\t\t\r\n\t\t//region Check the schema is valid\r\n\t\tconst asn1 = asn1js.compareSchema(schema,\r\n\t\t\tschema,\r\n\t\t\tOriginatorPublicKey.schema({\r\n\t\t\t\tnames: {\r\n\t\t\t\t\talgorithm: {\r\n\t\t\t\t\t\tnames: {\r\n\t\t\t\t\t\t\tblockName: \"algorithm\"\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t},\r\n\t\t\t\t\tpublicKey: \"publicKey\"\r\n\t\t\t\t}\r\n\t\t\t})\r\n\t\t);\r\n\r\n\t\tif(asn1.verified === false)\r\n\t\t\tthrow new Error(\"Object's schema was not verified against input data for OriginatorPublicKey\");\r\n\t\t//endregion\r\n\r\n\t\t//region Get internal properties from parsed schema\r\n\t\tthis.algorithm = new AlgorithmIdentifier({ schema: asn1.result.algorithm });\r\n\t\tthis.publicKey = asn1.result.publicKey;\r\n\t\t//endregion\r\n\t}\r\n\t//**********************************************************************************\r\n\t/**\r\n\t * Convert current object to asn1js object and set correct values\r\n\t * @returns {Object} asn1js object\r\n\t */\r\n\ttoSchema()\r\n\t{\r\n\t\t//region Construct and return new ASN.1 schema for this object\r\n\t\treturn (new asn1js.Sequence({\r\n\t\t\tvalue: [\r\n\t\t\t\tthis.algorithm.toSchema(),\r\n\t\t\t\tthis.publicKey\r\n\t\t\t]\r\n\t\t}));\r\n\t\t//endregion\r\n\t}\r\n\t//**********************************************************************************\r\n\t/**\r\n\t * Convertion for the class to JSON object\r\n\t * @returns {Object}\r\n\t */\r\n\ttoJSON()\r\n\t{\r\n\t\treturn {\r\n\t\t\talgorithm: this.algorithm.toJSON(),\r\n\t\t\tpublicKey: this.publicKey.toJSON()\r\n\t\t};\r\n\t}\r\n\t//**********************************************************************************\r\n}\r\n//**************************************************************************************\r\n"],"file":"OriginatorPublicKey.js"}