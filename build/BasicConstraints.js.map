{"version":3,"sources":["../src/BasicConstraints.js"],"names":["BasicConstraints","constructor","parameters","cA","pathLenConstraint","fromSchema","schema","defaultValues","memberName","Error","names","asn1js","Sequence","name","blockName","value","Boolean","optional","Integer","asn1","compareSchema","verified","result","valueBlock","isHexOnly","valueDec","toSchema","outputArray","push","toJSON","object"],"mappings":"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","sourcesContent":["import * as asn1js from \"asn1js\";\r\nimport { getParametersValue, clearProps } from \"pvutils\";\r\n//**************************************************************************************\r\n/**\r\n * Class from RFC5280\r\n */\r\nexport default class BasicConstraints\r\n{\r\n\t//**********************************************************************************\r\n\t/**\r\n\t * Constructor for BasicConstraints class\r\n\t * @param {Object} [parameters={}]\r\n\t * @param {Object} [parameters.schema] asn1js parsed value to initialize the class from\r\n\t * @property {Object} [cA]\r\n\t * @property {Object} [pathLenConstraint]\r\n\t */\r\n\tconstructor(parameters = {})\r\n\t{\r\n\t\t//region Internal properties of the object\r\n\t\t/**\r\n\t\t * @type {boolean}\r\n\t\t * @desc cA\r\n\t\t */\r\n\t\tthis.cA = getParametersValue(parameters, \"cA\", false);\r\n\r\n\t\tif(\"pathLenConstraint\" in parameters)\r\n\t\t\t/**\r\n\t\t\t * @type {number|Integer}\r\n\t\t\t * @desc pathLenConstraint\r\n\t\t\t */\r\n\t\t\tthis.pathLenConstraint = getParametersValue(parameters, \"pathLenConstraint\", 0);\r\n\t\t//endregion\r\n\r\n\t\t//region If input argument array contains \"schema\" for this object\r\n\t\tif(\"schema\" in parameters)\r\n\t\t\tthis.fromSchema(parameters.schema);\r\n\t\t//endregion\r\n\t}\r\n\t//**********************************************************************************\r\n\t/**\r\n\t * Return default values for all class members\r\n\t * @param {string} memberName String name for a class member\r\n\t */\r\n\tstatic defaultValues(memberName)\r\n\t{\r\n\t\tswitch(memberName)\r\n\t\t{\r\n\t\t\tcase \"cA\":\r\n\t\t\t\treturn false;\r\n\t\t\tdefault:\r\n\t\t\t\tthrow new Error(`Invalid member name for BasicConstraints class: ${memberName}`);\r\n\t\t}\r\n\t}\r\n\t//**********************************************************************************\r\n\t/**\r\n\t * Return value of pre-defined ASN.1 schema for current class\r\n\t *\r\n\t * ASN.1 schema:\r\n\t * ```asn1\r\n\t * BasicConstraints ::= SEQUENCE {\r\n\t *    cA                      BOOLEAN DEFAULT FALSE,\r\n\t *    pathLenConstraint       INTEGER (0..MAX) OPTIONAL }\r\n\t * ```\r\n\t *\r\n\t * @param {Object} parameters Input parameters for the schema\r\n\t * @returns {Object} asn1js schema object\r\n\t */\r\n\tstatic schema(parameters = {})\r\n\t{\r\n\t\t/**\r\n\t\t * @type {Object}\r\n\t\t * @property {string} [blockName]\r\n\t\t * @property {string} [cA]\r\n\t\t * @property {string} [pathLenConstraint]\r\n\t\t */\r\n\t\tconst names = getParametersValue(parameters, \"names\", {});\r\n\r\n\t\treturn (new asn1js.Sequence({\r\n\t\t\tname: (names.blockName || \"\"),\r\n\t\t\tvalue: [\r\n\t\t\t\tnew asn1js.Boolean({\r\n\t\t\t\t\toptional: true,\r\n\t\t\t\t\tname: (names.cA || \"\")\r\n\t\t\t\t}),\r\n\t\t\t\tnew asn1js.Integer({\r\n\t\t\t\t\toptional: true,\r\n\t\t\t\t\tname: (names.pathLenConstraint || \"\")\r\n\t\t\t\t})\r\n\t\t\t]\r\n\t\t}));\r\n\t}\r\n\t//**********************************************************************************\r\n\t/**\r\n\t * Convert parsed asn1js object into current class\r\n\t * @param {!Object} schema\r\n\t */\r\n\tfromSchema(schema)\r\n\t{\r\n\t\t//region Clear input data first\r\n\t\tclearProps(schema, [\r\n\t\t\t\"cA\",\r\n\t\t\t\"pathLenConstraint\"\r\n\t\t]);\r\n\t\t//endregion\r\n\t\t\r\n\t\t//region Check the schema is valid\r\n\t\tconst asn1 = asn1js.compareSchema(schema,\r\n\t\t\tschema,\r\n\t\t\tBasicConstraints.schema({\r\n\t\t\t\tnames: {\r\n\t\t\t\t\tcA: \"cA\",\r\n\t\t\t\t\tpathLenConstraint: \"pathLenConstraint\"\r\n\t\t\t\t}\r\n\t\t\t})\r\n\t\t);\r\n\r\n\t\tif(asn1.verified === false)\r\n\t\t\tthrow new Error(\"Object's schema was not verified against input data for BasicConstraints\");\r\n\t\t//endregion\r\n\r\n\t\t//region Get internal properties from parsed schema\r\n\t\tif(\"cA\" in asn1.result)\r\n\t\t\tthis.cA = asn1.result.cA.valueBlock.value;\r\n\r\n\t\tif(\"pathLenConstraint\" in asn1.result)\r\n\t\t{\r\n\t\t\tif(asn1.result.pathLenConstraint.valueBlock.isHexOnly)\r\n\t\t\t\tthis.pathLenConstraint = asn1.result.pathLenConstraint;\r\n\t\t\telse\r\n\t\t\t\tthis.pathLenConstraint = asn1.result.pathLenConstraint.valueBlock.valueDec;\r\n\t\t}\r\n\t\t//endregion\r\n\t}\r\n\t//**********************************************************************************\r\n\t/**\r\n\t * Convert current object to asn1js object and set correct values\r\n\t * @returns {Object} asn1js object\r\n\t */\r\n\ttoSchema()\r\n\t{\r\n\t\t//region Create array for output sequence\r\n\t\tconst outputArray = [];\r\n\t\t\r\n\t\tif(this.cA !== BasicConstraints.defaultValues(\"cA\"))\r\n\t\t\toutputArray.push(new asn1js.Boolean({ value: this.cA }));\r\n\t\t\r\n\t\tif(\"pathLenConstraint\" in this)\r\n\t\t{\r\n\t\t\tif(this.pathLenConstraint instanceof asn1js.Integer)\r\n\t\t\t\toutputArray.push(this.pathLenConstraint);\r\n\t\t\telse\r\n\t\t\t\toutputArray.push(new asn1js.Integer({ value: this.pathLenConstraint }));\r\n\t\t}\r\n\t\t//endregion\r\n\t\t\r\n\t\t//region Construct and return new ASN.1 schema for this object\r\n\t\treturn (new asn1js.Sequence({\r\n\t\t\tvalue: outputArray\r\n\t\t}));\r\n\t\t//endregion\r\n\t}\r\n\t//**********************************************************************************\r\n\t/**\r\n\t * Convertion for the class to JSON object\r\n\t * @returns {Object}\r\n\t */\r\n\ttoJSON()\r\n\t{\r\n\t\tconst object = {};\r\n\r\n\t\tif(this.cA !== BasicConstraints.defaultValues(\"cA\"))\r\n\t\t\tobject.cA = this.cA;\r\n\r\n\t\tif(\"pathLenConstraint\" in this)\r\n\t\t{\r\n\t\t\tif(this.pathLenConstraint instanceof asn1js.Integer)\r\n\t\t\t\tobject.pathLenConstraint = this.pathLenConstraint.toJSON();\r\n\t\t\telse\r\n\t\t\t\tobject.pathLenConstraint = this.pathLenConstraint;\r\n\t\t}\r\n\r\n\t\treturn object;\r\n\t}\r\n\t//**********************************************************************************\r\n}\r\n//**************************************************************************************\r\n"],"file":"BasicConstraints.js"}