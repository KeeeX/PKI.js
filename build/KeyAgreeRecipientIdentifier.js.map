{"version":3,"sources":["../src/KeyAgreeRecipientIdentifier.js"],"names":["KeyAgreeRecipientIdentifier","constructor","parameters","variant","defaultValues","value","fromSchema","schema","memberName","Error","compareWithDefault","memberValue","Object","keys","length","names","asn1js","Choice","IssuerAndSerialNumber","issuerAndSerialNumber","blockName","Constructed","name","idBlock","tagClass","tagNumber","RecipientKeyIdentifier","rKeyId","valueBlock","asn1","compareSchema","verified","result","Sequence","toSchema","Any","toJSON","_object"],"mappings":"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","sourcesContent":["import * as asn1js from \"asn1js\";\r\nimport { getParametersValue, clearProps } from \"pvutils\";\r\nimport IssuerAndSerialNumber from \"./IssuerAndSerialNumber.js\";\r\nimport RecipientKeyIdentifier from \"./RecipientKeyIdentifier.js\";\r\n//**************************************************************************************\r\n/**\r\n * Class from RFC5652\r\n */\r\nexport default class KeyAgreeRecipientIdentifier\r\n{\r\n\t//**********************************************************************************\r\n\t/**\r\n\t * Constructor for KeyAgreeRecipientIdentifier class\r\n\t * @param {Object} [parameters={}]\r\n\t * @param {Object} [parameters.schema] asn1js parsed value to initialize the class from\r\n\t */\r\n\tconstructor(parameters = {})\r\n\t{\r\n\t\t//region Internal properties of the object\r\n\t\t/**\r\n\t\t * @type {number}\r\n\t\t * @desc variant\r\n\t\t */\r\n\t\tthis.variant = getParametersValue(parameters, \"variant\", KeyAgreeRecipientIdentifier.defaultValues(\"variant\"));\r\n\t\t/**\r\n\t\t * @type {*}\r\n\t\t * @desc values\r\n\t\t */\r\n\t\tthis.value = getParametersValue(parameters, \"value\", KeyAgreeRecipientIdentifier.defaultValues(\"value\"));\r\n\t\t//endregion\r\n\r\n\t\t//region If input argument array contains \"schema\" for this object\r\n\t\tif(\"schema\" in parameters)\r\n\t\t\tthis.fromSchema(parameters.schema);\r\n\t\t//endregion\r\n\t}\r\n\t//**********************************************************************************\r\n\t/**\r\n\t * Return default values for all class members\r\n\t * @param {string} memberName String name for a class member\r\n\t */\r\n\tstatic defaultValues(memberName)\r\n\t{\r\n\t\tswitch(memberName)\r\n\t\t{\r\n\t\t\tcase \"variant\":\r\n\t\t\t\treturn (-1);\r\n\t\t\tcase \"value\":\r\n\t\t\t\treturn {};\r\n\t\t\tdefault:\r\n\t\t\t\tthrow new Error(`Invalid member name for KeyAgreeRecipientIdentifier class: ${memberName}`);\r\n\t\t}\r\n\t}\r\n\t//**********************************************************************************\r\n\t/**\r\n\t * Compare values with default values for all class members\r\n\t * @param {string} memberName String name for a class member\r\n\t * @param {*} memberValue Value to compare with default value\r\n\t */\r\n\tstatic compareWithDefault(memberName, memberValue)\r\n\t{\r\n\t\tswitch(memberName)\r\n\t\t{\r\n\t\t\tcase \"variant\":\r\n\t\t\t\treturn (memberValue === (-1));\r\n\t\t\tcase \"value\":\r\n\t\t\t\treturn (Object.keys(memberValue).length === 0);\r\n\t\t\tdefault:\r\n\t\t\t\tthrow new Error(`Invalid member name for KeyAgreeRecipientIdentifier class: ${memberName}`);\r\n\t\t}\r\n\t}\r\n\t//**********************************************************************************\r\n\t/**\r\n\t * Return value of pre-defined ASN.1 schema for current class\r\n\t *\r\n\t * ASN.1 schema:\r\n\t * ```asn1\r\n\t * KeyAgreeRecipientIdentifier ::= CHOICE {\r\n\t *    issuerAndSerialNumber IssuerAndSerialNumber,\r\n\t *    rKeyId [0] IMPLICIT RecipientKeyIdentifier }\r\n\t * ```\r\n\t *\r\n\t * @param {Object} parameters Input parameters for the schema\r\n\t * @returns {Object} asn1js schema object\r\n\t */\r\n\tstatic schema(parameters = {})\r\n\t{\r\n\t\t/**\r\n\t\t * @type {Object}\r\n\t\t * @property {string} [blockName]\r\n\t\t * @property {string} [issuerAndSerialNumber]\r\n\t\t * @property {string} [rKeyId]\r\n\t\t */\r\n\t\tconst names = getParametersValue(parameters, \"names\", {});\r\n\r\n\t\treturn (new asn1js.Choice({\r\n\t\t\tvalue: [\r\n\t\t\t\tIssuerAndSerialNumber.schema(names.issuerAndSerialNumber || {\r\n\t\t\t\t\tnames: {\r\n\t\t\t\t\t\tblockName: (names.blockName || \"\")\r\n\t\t\t\t\t}\r\n\t\t\t\t}),\r\n\t\t\t\tnew asn1js.Constructed({\r\n\t\t\t\t\tname: (names.blockName || \"\"),\r\n\t\t\t\t\tidBlock: {\r\n\t\t\t\t\t\ttagClass: 3, // CONTEXT-SPECIFIC\r\n\t\t\t\t\t\ttagNumber: 0 // [0]\r\n\t\t\t\t\t},\r\n\t\t\t\t\tvalue: RecipientKeyIdentifier.schema(names.rKeyId || {\r\n\t\t\t\t\t\tnames: {\r\n\t\t\t\t\t\t\tblockName: (names.blockName || \"\")\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}).valueBlock.value\r\n\t\t\t\t})\r\n\t\t\t]\r\n\t\t}));\r\n\t}\r\n\t//**********************************************************************************\r\n\t/**\r\n\t * Convert parsed asn1js object into current class\r\n\t * @param {!Object} schema\r\n\t */\r\n\tfromSchema(schema)\r\n\t{\r\n\t\t//region Clear input data first\r\n\t\tclearProps(schema, [\r\n\t\t\t\"blockName\"\r\n\t\t]);\r\n\t\t//endregion\r\n\t\t\r\n\t\t//region Check the schema is valid\r\n\t\tconst asn1 = asn1js.compareSchema(schema,\r\n\t\t\tschema,\r\n\t\t\tKeyAgreeRecipientIdentifier.schema({\r\n\t\t\t\tnames: {\r\n\t\t\t\t\tblockName: \"blockName\"\r\n\t\t\t\t}\r\n\t\t\t})\r\n\t\t);\r\n\r\n\t\tif(asn1.verified === false)\r\n\t\t\tthrow new Error(\"Object's schema was not verified against input data for KeyAgreeRecipientIdentifier\");\r\n\t\t//endregion\r\n\r\n\t\t//region Get internal properties from parsed schema\r\n\t\tif(asn1.result.blockName.idBlock.tagClass === 1)\r\n\t\t{\r\n\t\t\tthis.variant = 1;\r\n\t\t\tthis.value = new IssuerAndSerialNumber({ schema: asn1.result.blockName });\r\n\t\t}\r\n\t\telse\r\n\t\t{\r\n\t\t\tthis.variant = 2;\r\n\r\n\t\t\tthis.value = new RecipientKeyIdentifier({\r\n\t\t\t\tschema: new asn1js.Sequence({\r\n\t\t\t\t\tvalue: asn1.result.blockName.valueBlock.value\r\n\t\t\t\t})\r\n\t\t\t});\r\n\t\t}\r\n\t\t//endregion\r\n\t}\r\n\t//**********************************************************************************\r\n\t/**\r\n\t * Convert current object to asn1js object and set correct values\r\n\t * @returns {Object} asn1js object\r\n\t */\r\n\ttoSchema()\r\n\t{\r\n\t\t//region Construct and return new ASN.1 schema for this object\r\n\t\tswitch(this.variant)\r\n\t\t{\r\n\t\t\tcase 1:\r\n\t\t\t\treturn this.value.toSchema();\r\n\t\t\tcase 2:\r\n\t\t\t\treturn new asn1js.Constructed({\r\n\t\t\t\t\tidBlock: {\r\n\t\t\t\t\t\ttagClass: 3, // CONTEXT-SPECIFIC\r\n\t\t\t\t\t\ttagNumber: 0 // [0]\r\n\t\t\t\t\t},\r\n\t\t\t\t\tvalue: this.value.toSchema().valueBlock.value\r\n\t\t\t\t});\r\n\t\t\tdefault:\r\n\t\t\t\treturn new asn1js.Any();\r\n\t\t}\r\n\t\t//endregion\r\n\t}\r\n\t//**********************************************************************************\r\n\t/**\r\n\t * Convertion for the class to JSON object\r\n\t * @returns {Object}\r\n\t */\r\n\ttoJSON()\r\n\t{\r\n\t\tconst _object = {\r\n\t\t\tvariant: this.variant\r\n\t\t};\r\n\r\n\t\tif((this.variant === 1) || (this.variant === 2))\r\n\t\t\t_object.value = this.value.toJSON();\r\n\r\n\t\treturn _object;\r\n\t}\r\n\t//**********************************************************************************\r\n}\r\n//**************************************************************************************\r\n"],"file":"KeyAgreeRecipientIdentifier.js"}