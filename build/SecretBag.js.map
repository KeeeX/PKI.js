{"version":3,"sources":["../src/SecretBag.js"],"names":["SecretBag","constructor","parameters","secretTypeId","defaultValues","secretValue","fromSchema","schema","memberName","asn1js","Any","Error","compareWithDefault","memberValue","names","Sequence","name","blockName","value","ObjectIdentifier","id","Constructed","idBlock","tagClass","tagNumber","asn1","compareSchema","verified","result","valueBlock","toString","toSchema","toJSON"],"mappings":"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","sourcesContent":["import * as asn1js from \"asn1js\";\r\nimport { getParametersValue, clearProps } from \"pvutils\";\r\n//**************************************************************************************\r\n/**\r\n * Class from RFC7292\r\n */\r\nexport default class SecretBag\r\n{\r\n\t//**********************************************************************************\r\n\t/**\r\n\t * Constructor for SecretBag class\r\n\t * @param {Object} [parameters={}]\r\n\t * @param {Object} [parameters.schema] asn1js parsed value to initialize the class from\r\n\t */\r\n\tconstructor(parameters = {})\r\n\t{\r\n\t\t//region Internal properties of the object\r\n\t\t/**\r\n\t\t * @type {string}\r\n\t\t * @desc secretTypeId\r\n\t\t */\r\n\t\tthis.secretTypeId = getParametersValue(parameters, \"secretTypeId\", SecretBag.defaultValues(\"secretTypeId\"));\r\n\t\t/**\r\n\t\t * @type {*}\r\n\t\t * @desc secretValue\r\n\t\t */\r\n\t\tthis.secretValue = getParametersValue(parameters, \"secretValue\", SecretBag.defaultValues(\"secretValue\"));\r\n\t\t//endregion\r\n\t\t\r\n\t\t//region If input argument array contains \"schema\" for this object\r\n\t\tif(\"schema\" in parameters)\r\n\t\t\tthis.fromSchema(parameters.schema);\r\n\t\t//endregion\r\n\t}\r\n\t//**********************************************************************************\r\n\t/**\r\n\t * Return default values for all class members\r\n\t * @param {string} memberName String name for a class member\r\n\t */\r\n\tstatic defaultValues(memberName)\r\n\t{\r\n\t\tswitch(memberName)\r\n\t\t{\r\n\t\t\tcase \"secretTypeId\":\r\n\t\t\t\treturn \"\";\r\n\t\t\tcase \"secretValue\":\r\n\t\t\t\treturn (new asn1js.Any());\r\n\t\t\tdefault:\r\n\t\t\t\tthrow new Error(`Invalid member name for SecretBag class: ${memberName}`);\r\n\t\t}\r\n\t}\r\n\t//**********************************************************************************\r\n\t/**\r\n\t * Compare values with default values for all class members\r\n\t * @param {string} memberName String name for a class member\r\n\t * @param {*} memberValue Value to compare with default value\r\n\t */\r\n\tstatic compareWithDefault(memberName, memberValue)\r\n\t{\r\n\t\tswitch(memberName)\r\n\t\t{\r\n\t\t\tcase \"secretTypeId\":\r\n\t\t\t\treturn (memberValue === \"\");\r\n\t\t\tcase \"secretValue\":\r\n\t\t\t\treturn (memberValue instanceof asn1js.Any);\r\n\t\t\tdefault:\r\n\t\t\t\tthrow new Error(`Invalid member name for SecretBag class: ${memberName}`);\r\n\t\t}\r\n\t}\r\n\t//**********************************************************************************\r\n\t/**\r\n\t * Return value of pre-defined ASN.1 schema for current class\r\n\t *\r\n\t * ASN.1 schema:\r\n\t * ```asn1\r\n\t * SecretBag ::= SEQUENCE {\r\n\t *    secretTypeId BAG-TYPE.&id ({SecretTypes}),\r\n\t *    secretValue  [0] EXPLICIT BAG-TYPE.&Type ({SecretTypes}{@secretTypeId})\r\n\t * }\r\n\t * ```\r\n\t *\r\n\t * @param {Object} parameters Input parameters for the schema\r\n\t * @returns {Object} asn1js schema object\r\n\t */\r\n\tstatic schema(parameters = {})\r\n\t{\r\n\t\t/**\r\n\t\t * @type {Object}\r\n\t\t * @property {string} [blockName]\r\n\t\t * @property {string} [id]\r\n\t\t * @property {string} [value]\r\n\t\t */\r\n\t\tconst names = getParametersValue(parameters, \"names\", {});\r\n\t\t\r\n\t\treturn (new asn1js.Sequence({\r\n\t\t\tname: (names.blockName || \"\"),\r\n\t\t\tvalue: [\r\n\t\t\t\tnew asn1js.ObjectIdentifier({ name: (names.id || \"id\") }),\r\n\t\t\t\tnew asn1js.Constructed({\r\n\t\t\t\t\tidBlock: {\r\n\t\t\t\t\t\ttagClass: 3, // CONTEXT-SPECIFIC\r\n\t\t\t\t\t\ttagNumber: 0 // [0]\r\n\t\t\t\t\t},\r\n\t\t\t\t\tvalue: [new asn1js.Any({ name: (names.value || \"value\") })] // EXPLICIT ANY value\r\n\t\t\t\t})\r\n\t\t\t]\r\n\t\t}));\r\n\t}\r\n\t//**********************************************************************************\r\n\t/**\r\n\t * Convert parsed asn1js object into current class\r\n\t * @param {!Object} schema\r\n\t */\r\n\tfromSchema(schema)\r\n\t{\r\n\t\t//region Clear input data first\r\n\t\tclearProps(schema, [\r\n\t\t\t\"secretTypeId\",\r\n\t\t\t\"secretValue\"\r\n\t\t]);\r\n\t\t//endregion\r\n\t\t\r\n\t\t//region Check the schema is valid\r\n\t\tconst asn1 = asn1js.compareSchema(schema,\r\n\t\t\tschema,\r\n\t\t\tSecretBag.schema({\r\n\t\t\t\tnames: {\r\n\t\t\t\t\tid: \"secretTypeId\",\r\n\t\t\t\t\tvalue: \"secretValue\"\r\n\t\t\t\t}\r\n\t\t\t})\r\n\t\t);\r\n\t\t\r\n\t\tif(asn1.verified === false)\r\n\t\t\tthrow new Error(\"Object's schema was not verified against input data for SecretBag\");\r\n\t\t//endregion\r\n\t\t\r\n\t\t//region Get internal properties from parsed schema\r\n\t\tthis.secretTypeId = asn1.result.secretTypeId.valueBlock.toString();\r\n\t\tthis.secretValue = asn1.result.secretValue;\r\n\t\t//endregion\r\n\t}\r\n\t//**********************************************************************************\r\n\t/**\r\n\t * Convert current object to asn1js object and set correct values\r\n\t * @returns {Object} asn1js object\r\n\t */\r\n\ttoSchema()\r\n\t{\r\n\t\t//region Construct and return new ASN.1 schema for this object\r\n\t\treturn (new asn1js.Sequence({\r\n\t\t\tvalue: [\r\n\t\t\t\tnew asn1js.ObjectIdentifier({ value: this.secretTypeId }),\r\n\t\t\t\tnew asn1js.Constructed({\r\n\t\t\t\t\tidBlock: {\r\n\t\t\t\t\t\ttagClass: 3, // CONTEXT-SPECIFIC\r\n\t\t\t\t\t\ttagNumber: 0 // [0]\r\n\t\t\t\t\t},\r\n\t\t\t\t\tvalue: [this.secretValue.toSchema()]\r\n\t\t\t\t})\r\n\t\t\t]\r\n\t\t}));\r\n\t\t//endregion\r\n\t}\r\n\t//**********************************************************************************\r\n\t/**\r\n\t * Convertion for the class to JSON object\r\n\t * @returns {Object}\r\n\t */\r\n\ttoJSON()\r\n\t{\r\n\t\treturn {\r\n\t\t\tsecretTypeId: this.secretTypeId,\r\n\t\t\tsecretValue: this.secretValue.toJSON()\r\n\t\t};\r\n\t}\r\n\t//**********************************************************************************\r\n}\r\n//**************************************************************************************\r\n"],"file":"SecretBag.js"}