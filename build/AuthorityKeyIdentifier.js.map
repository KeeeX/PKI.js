{"version":3,"sources":["../src/AuthorityKeyIdentifier.js"],"names":["AuthorityKeyIdentifier","constructor","parameters","keyIdentifier","defaultValues","authorityCertIssuer","authorityCertSerialNumber","fromSchema","schema","memberName","asn1js","OctetString","Integer","Error","names","Sequence","name","blockName","value","Primitive","optional","idBlock","tagClass","tagNumber","Constructed","Repeated","GeneralName","asn1","compareSchema","verified","result","valueHex","valueBlock","Array","from","element","toSchema","outputArray","push","toJSON","object"],"mappings":"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","sourcesContent":["import * as asn1js from \"asn1js\";\r\nimport { getParametersValue, clearProps } from \"pvutils\";\r\nimport GeneralName from \"./GeneralName.js\";\r\n//**************************************************************************************\r\n/**\r\n * Class from RFC5280\r\n */\r\nexport default class AuthorityKeyIdentifier\r\n{\r\n\t//**********************************************************************************\r\n\t/**\r\n\t * Constructor for AuthorityKeyIdentifier class\r\n\t * @param {Object} [parameters={}]\r\n\t * @param {Object} [parameters.schema] asn1js parsed value to initialize the class from\r\n\t */\r\n\tconstructor(parameters = {})\r\n\t{\r\n\t\t//region Internal properties of the object\r\n\t\tif(\"keyIdentifier\" in parameters)\r\n\t\t\t/**\r\n\t\t\t * @type {OctetString}\r\n\t\t\t * @desc keyIdentifier\r\n\t\t\t */\r\n\t\t\tthis.keyIdentifier = getParametersValue(parameters, \"keyIdentifier\", AuthorityKeyIdentifier.defaultValues(\"keyIdentifier\"));\r\n\r\n\t\tif(\"authorityCertIssuer\" in parameters)\r\n\t\t\t/**\r\n\t\t\t * @type {Array.<GeneralName>}\r\n\t\t\t * @desc authorityCertIssuer\r\n\t\t\t */\r\n\t\t\tthis.authorityCertIssuer = getParametersValue(parameters, \"authorityCertIssuer\", AuthorityKeyIdentifier.defaultValues(\"authorityCertIssuer\"));\r\n\r\n\t\tif(\"authorityCertSerialNumber\" in parameters)\r\n\t\t\t/**\r\n\t\t\t * @type {Integer}\r\n\t\t\t * @desc authorityCertIssuer\r\n\t\t\t */\r\n\t\t\tthis.authorityCertSerialNumber = getParametersValue(parameters, \"authorityCertSerialNumber\", AuthorityKeyIdentifier.defaultValues(\"authorityCertSerialNumber\"));\r\n\t\t//endregion\r\n\r\n\t\t//region If input argument array contains \"schema\" for this object\r\n\t\tif(\"schema\" in parameters)\r\n\t\t\tthis.fromSchema(parameters.schema);\r\n\t\t//endregion\r\n\t}\r\n\t//**********************************************************************************\r\n\t/**\r\n\t * Return default values for all class members\r\n\t * @param {string} memberName String name for a class member\r\n\t */\r\n\tstatic defaultValues(memberName)\r\n\t{\r\n\t\tswitch(memberName)\r\n\t\t{\r\n\t\t\tcase \"keyIdentifier\":\r\n\t\t\t\treturn new asn1js.OctetString();\r\n\t\t\tcase \"authorityCertIssuer\":\r\n\t\t\t\treturn [];\r\n\t\t\tcase \"authorityCertSerialNumber\":\r\n\t\t\t\treturn new asn1js.Integer();\r\n\t\t\tdefault:\r\n\t\t\t\tthrow new Error(`Invalid member name for AuthorityKeyIdentifier class: ${memberName}`);\r\n\t\t}\r\n\t}\r\n\t//**********************************************************************************\r\n\t/**\r\n\t * Return value of pre-defined ASN.1 schema for current class\r\n\t *\r\n\t * ASN.1 schema:\r\n\t * ```asn1\r\n\t * AuthorityKeyIdentifier OID ::= 2.5.29.35\r\n\t *\r\n\t * AuthorityKeyIdentifier ::= SEQUENCE {\r\n\t *    keyIdentifier             [0] KeyIdentifier           OPTIONAL,\r\n\t *    authorityCertIssuer       [1] GeneralNames            OPTIONAL,\r\n\t *    authorityCertSerialNumber [2] CertificateSerialNumber OPTIONAL  }\r\n\t *\r\n\t * KeyIdentifier ::= OCTET STRING\r\n\t * ```\r\n\t *\r\n\t * @param {Object} parameters Input parameters for the schema\r\n\t * @returns {Object} asn1js schema object\r\n\t */\r\n\tstatic schema(parameters = {})\r\n\t{\r\n\t\t/**\r\n\t\t * @type {Object}\r\n\t\t * @property {string} [blockName]\r\n\t\t * @property {string} [keyIdentifier]\r\n\t\t * @property {string} [authorityCertIssuer]\r\n\t\t * @property {string} [authorityCertSerialNumber]\r\n\t\t */\r\n\t\tconst names = getParametersValue(parameters, \"names\", {});\r\n\r\n\t\treturn (new asn1js.Sequence({\r\n\t\t\tname: (names.blockName || \"\"),\r\n\t\t\tvalue: [\r\n\t\t\t\tnew asn1js.Primitive({\r\n\t\t\t\t\tname: (names.keyIdentifier || \"\"),\r\n\t\t\t\t\toptional: true,\r\n\t\t\t\t\tidBlock: {\r\n\t\t\t\t\t\ttagClass: 3, // CONTEXT-SPECIFIC\r\n\t\t\t\t\t\ttagNumber: 0 // [0]\r\n\t\t\t\t\t}\r\n\t\t\t\t}),\r\n\t\t\t\tnew asn1js.Constructed({\r\n\t\t\t\t\toptional: true,\r\n\t\t\t\t\tidBlock: {\r\n\t\t\t\t\t\ttagClass: 3, // CONTEXT-SPECIFIC\r\n\t\t\t\t\t\ttagNumber: 1 // [1]\r\n\t\t\t\t\t},\r\n\t\t\t\t\tvalue: [\r\n\t\t\t\t\t\tnew asn1js.Repeated({\r\n\t\t\t\t\t\t\tname: (names.authorityCertIssuer || \"\"),\r\n\t\t\t\t\t\t\tvalue: GeneralName.schema()\r\n\t\t\t\t\t\t})\r\n\t\t\t\t\t]\r\n\t\t\t\t}),\r\n\t\t\t\tnew asn1js.Primitive({\r\n\t\t\t\t\tname: (names.authorityCertSerialNumber || \"\"),\r\n\t\t\t\t\toptional: true,\r\n\t\t\t\t\tidBlock: {\r\n\t\t\t\t\t\ttagClass: 3, // CONTEXT-SPECIFIC\r\n\t\t\t\t\t\ttagNumber: 2 // [2]\r\n\t\t\t\t\t}\r\n\t\t\t\t})\r\n\t\t\t]\r\n\t\t}));\r\n\t}\r\n\t//**********************************************************************************\r\n\t/**\r\n\t * Convert parsed asn1js object into current class\r\n\t * @param {!Object} schema\r\n\t */\r\n\tfromSchema(schema)\r\n\t{\r\n\t\t//region Clear input data first\r\n\t\tclearProps(schema, [\r\n\t\t\t\"keyIdentifier\",\r\n\t\t\t\"authorityCertIssuer\",\r\n\t\t\t\"authorityCertSerialNumber\"\r\n\t\t]);\r\n\t\t//endregion\r\n\t\t\r\n\t\t//region Check the schema is valid\r\n\t\tconst asn1 = asn1js.compareSchema(schema,\r\n\t\t\tschema,\r\n\t\t\tAuthorityKeyIdentifier.schema({\r\n\t\t\t\tnames: {\r\n\t\t\t\t\tkeyIdentifier: \"keyIdentifier\",\r\n\t\t\t\t\tauthorityCertIssuer: \"authorityCertIssuer\",\r\n\t\t\t\t\tauthorityCertSerialNumber: \"authorityCertSerialNumber\"\r\n\t\t\t\t}\r\n\t\t\t})\r\n\t\t);\r\n\r\n\t\tif(asn1.verified === false)\r\n\t\t\tthrow new Error(\"Object's schema was not verified against input data for AuthorityKeyIdentifier\");\r\n\t\t//endregion\r\n\r\n\t\t//region Get internal properties from parsed schema\r\n\t\tif(\"keyIdentifier\" in asn1.result)\r\n\t\t\tthis.keyIdentifier = new asn1js.OctetString({ valueHex: asn1.result.keyIdentifier.valueBlock.valueHex });\r\n\r\n\t\tif(\"authorityCertIssuer\" in asn1.result)\r\n\t\t\tthis.authorityCertIssuer = Array.from(asn1.result.authorityCertIssuer, element => new GeneralName({ schema: element }));\r\n\r\n\t\tif(\"authorityCertSerialNumber\" in asn1.result)\r\n\t\t\tthis.authorityCertSerialNumber = new asn1js.Integer({ valueHex: asn1.result.authorityCertSerialNumber.valueBlock.valueHex });\r\n\t\t//endregion\r\n\t}\r\n\t//**********************************************************************************\r\n\t/**\r\n\t * Convert current object to asn1js object and set correct values\r\n\t * @returns {Object} asn1js object\r\n\t */\r\n\ttoSchema()\r\n\t{\r\n\t\t//region Create array for output sequence\r\n\t\tconst outputArray = [];\r\n\t\t\r\n\t\tif(\"keyIdentifier\" in this)\r\n\t\t{\r\n\t\t\toutputArray.push(new asn1js.Primitive({\r\n\t\t\t\tidBlock: {\r\n\t\t\t\t\ttagClass: 3, // CONTEXT-SPECIFIC\r\n\t\t\t\t\ttagNumber: 0 // [0]\r\n\t\t\t\t},\r\n\t\t\t\tvalueHex: this.keyIdentifier.valueBlock.valueHex\r\n\t\t\t}));\r\n\t\t}\r\n\t\t\r\n\t\tif(\"authorityCertIssuer\" in this)\r\n\t\t{\r\n\t\t\toutputArray.push(new asn1js.Constructed({\r\n\t\t\t\tidBlock: {\r\n\t\t\t\t\ttagClass: 3, // CONTEXT-SPECIFIC\r\n\t\t\t\t\ttagNumber: 1 // [1]\r\n\t\t\t\t},\r\n\t\t\t\tvalue: Array.from(this.authorityCertIssuer, element => element.toSchema())\r\n\t\t\t}));\r\n\t\t}\r\n\t\t\r\n\t\tif(\"authorityCertSerialNumber\" in this)\r\n\t\t{\r\n\t\t\toutputArray.push(new asn1js.Primitive({\r\n\t\t\t\tidBlock: {\r\n\t\t\t\t\ttagClass: 3, // CONTEXT-SPECIFIC\r\n\t\t\t\t\ttagNumber: 2 // [2]\r\n\t\t\t\t},\r\n\t\t\t\tvalueHex: this.authorityCertSerialNumber.valueBlock.valueHex\r\n\t\t\t}));\r\n\t\t}\r\n\t\t//endregion\r\n\t\t\r\n\t\t//region Construct and return new ASN.1 schema for this object\r\n\t\treturn (new asn1js.Sequence({\r\n\t\t\tvalue: outputArray\r\n\t\t}));\r\n\t\t//endregion\r\n\t}\r\n\t//**********************************************************************************\r\n\t/**\r\n\t * Convertion for the class to JSON object\r\n\t * @returns {Object}\r\n\t */\r\n\ttoJSON()\r\n\t{\r\n\t\tconst object = {};\r\n\r\n\t\tif(\"keyIdentifier\" in this)\r\n\t\t\tobject.keyIdentifier = this.keyIdentifier.toJSON();\r\n\r\n\t\tif(\"authorityCertIssuer\" in this)\r\n\t\t\tobject.authorityCertIssuer = Array.from(this.authorityCertIssuer, element => element.toJSON());\r\n\r\n\t\tif(\"authorityCertSerialNumber\" in this)\r\n\t\t\tobject.authorityCertSerialNumber = this.authorityCertSerialNumber.toJSON();\r\n\r\n\t\treturn object;\r\n\t}\r\n\t//**********************************************************************************\r\n}\r\n//**************************************************************************************\r\n"],"file":"AuthorityKeyIdentifier.js"}