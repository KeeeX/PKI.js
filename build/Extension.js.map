{"version":3,"sources":["../src/Extension.js"],"names":["Extension","constructor","parameters","extnID","defaultValues","critical","extnValue","asn1js","OctetString","valueHex","parsedValue","fromSchema","schema","memberName","Error","names","Sequence","name","blockName","value","ObjectIdentifier","Boolean","optional","asn1","compareSchema","verified","result","valueBlock","toString","fromBER","offset","SubjectDirectoryAttributes","ex","parsingError","PrivateKeyUsagePeriod","AltName","BasicConstraints","IssuingDistributionPoint","GeneralNames","NameConstraints","CRLDistributionPoints","CertificatePolicies","PolicyMappings","AuthorityKeyIdentifier","PolicyConstraints","ExtKeyUsage","InfoAccess","SignedCertificateTimestampList","toSchema","outputArray","push","toJSON","object"],"mappings":"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","sourcesContent":["import * as asn1js from \"asn1js\";\r\nimport { getParametersValue, clearProps } from \"pvutils\";\r\nimport SubjectDirectoryAttributes from \"./SubjectDirectoryAttributes.js\";\r\nimport PrivateKeyUsagePeriod from \"./PrivateKeyUsagePeriod.js\";\r\nimport AltName from \"./AltName.js\";\r\nimport BasicConstraints from \"./BasicConstraints.js\";\r\nimport IssuingDistributionPoint from \"./IssuingDistributionPoint.js\";\r\nimport GeneralNames from \"./GeneralNames.js\";\r\nimport NameConstraints from \"./NameConstraints.js\";\r\nimport CRLDistributionPoints from \"./CRLDistributionPoints.js\";\r\nimport CertificatePolicies from \"./CertificatePolicies.js\";\r\nimport PolicyMappings from \"./PolicyMappings.js\";\r\nimport AuthorityKeyIdentifier from \"./AuthorityKeyIdentifier.js\";\r\nimport PolicyConstraints from \"./PolicyConstraints.js\";\r\nimport ExtKeyUsage from \"./ExtKeyUsage.js\";\r\nimport InfoAccess from \"./InfoAccess.js\";\r\nimport SignedCertificateTimestampList from \"./SignedCertificateTimestampList.js\";\r\n//**************************************************************************************\r\n/**\r\n * Class from RFC5280\r\n */\r\nexport default class Extension\r\n{\r\n\t//**********************************************************************************\r\n\t/**\r\n\t * Constructor for Extension class\r\n\t * @param {Object} [parameters={}]\r\n\t * @param {Object} [parameters.schema] asn1js parsed value to initialize the class from\r\n\t */\r\n\tconstructor(parameters = {})\r\n\t{\r\n\t\t//region Internal properties of the object\r\n\t\t/**\r\n\t\t * @type {string}\r\n\t\t * @desc extnID\r\n\t\t */\r\n\t\tthis.extnID = getParametersValue(parameters, \"extnID\", Extension.defaultValues(\"extnID\"));\r\n\t\t/**\r\n\t\t * @type {boolean}\r\n\t\t * @desc critical\r\n\t\t */\r\n\t\tthis.critical = getParametersValue(parameters, \"critical\", Extension.defaultValues(\"critical\"));\r\n\t\t/**\r\n\t\t * @type {OctetString}\r\n\t\t * @desc extnValue\r\n\t\t */\r\n\t\tif(\"extnValue\" in parameters)\r\n\t\t\tthis.extnValue = new asn1js.OctetString({ valueHex: parameters.extnValue });\r\n\t\telse\r\n\t\t\tthis.extnValue = Extension.defaultValues(\"extnValue\");\r\n\r\n\t\tif(\"parsedValue\" in parameters)\r\n\t\t\t/**\r\n\t\t\t * @type {Object}\r\n\t\t\t * @desc parsedValue\r\n\t\t\t */\r\n\t\t\tthis.parsedValue = getParametersValue(parameters, \"parsedValue\", Extension.defaultValues(\"parsedValue\"));\r\n\t\t//endregion\r\n\r\n\t\t//region If input argument array contains \"schema\" for this object\r\n\t\tif(\"schema\" in parameters)\r\n\t\t\tthis.fromSchema(parameters.schema);\r\n\t\t//endregion\r\n\t}\r\n\t//**********************************************************************************\r\n\t/**\r\n\t * Return default values for all class members\r\n\t * @param {string} memberName String name for a class member\r\n\t */\r\n\tstatic defaultValues(memberName)\r\n\t{\r\n\t\tswitch(memberName)\r\n\t\t{\r\n\t\t\tcase \"extnID\":\r\n\t\t\t\treturn \"\";\r\n\t\t\tcase \"critical\":\r\n\t\t\t\treturn false;\r\n\t\t\tcase \"extnValue\":\r\n\t\t\t\treturn new asn1js.OctetString();\r\n\t\t\tcase \"parsedValue\":\r\n\t\t\t\treturn {};\r\n\t\t\tdefault:\r\n\t\t\t\tthrow new Error(`Invalid member name for Extension class: ${memberName}`);\r\n\t\t}\r\n\t}\r\n\t//**********************************************************************************\r\n\t/**\r\n\t * Return value of pre-defined ASN.1 schema for current class\r\n\t *\r\n\t * ASN.1 schema:\r\n\t * ```asn1\r\n\t * Extension  ::=  SEQUENCE  {\r\n\t *    extnID      OBJECT IDENTIFIER,\r\n\t *    critical    BOOLEAN DEFAULT FALSE,\r\n\t *    extnValue   OCTET STRING\r\n\t * }\r\n\t * ```\r\n\t *\r\n\t * @param {Object} parameters Input parameters for the schema\r\n\t * @returns {Object} asn1js schema object\r\n\t */\r\n\tstatic schema(parameters = {})\r\n\t{\r\n\t\t/**\r\n\t\t * @type {Object}\r\n\t\t * @property {string} [blockName]\r\n\t\t * @property {string} [extnID]\r\n\t\t * @property {string} [critical]\r\n\t\t * @property {string} [extnValue]\r\n\t\t */\r\n\t\tconst names = getParametersValue(parameters, \"names\", {});\r\n\r\n\t\treturn (new asn1js.Sequence({\r\n\t\t\tname: (names.blockName || \"\"),\r\n\t\t\tvalue: [\r\n\t\t\t\tnew asn1js.ObjectIdentifier({ name: (names.extnID || \"\") }),\r\n\t\t\t\tnew asn1js.Boolean({\r\n\t\t\t\t\tname: (names.critical || \"\"),\r\n\t\t\t\t\toptional: true\r\n\t\t\t\t}),\r\n\t\t\t\tnew asn1js.OctetString({ name: (names.extnValue || \"\") })\r\n\t\t\t]\r\n\t\t}));\r\n\t}\r\n\t//**********************************************************************************\r\n\t/**\r\n\t * Convert parsed asn1js object into current class\r\n\t * @param {!Object} schema\r\n\t */\r\n\tfromSchema(schema)\r\n\t{\r\n\t\t//region Clear input data first\r\n\t\tclearProps(schema, [\r\n\t\t\t\"extnID\",\r\n\t\t\t\"critical\",\r\n\t\t\t\"extnValue\"\r\n\t\t]);\r\n\t\t//endregion\r\n\t\t\r\n\t\t//region Check the schema is valid\r\n\t\tlet asn1 = asn1js.compareSchema(schema,\r\n\t\t\tschema,\r\n\t\t\tExtension.schema({\r\n\t\t\t\tnames: {\r\n\t\t\t\t\textnID: \"extnID\",\r\n\t\t\t\t\tcritical: \"critical\",\r\n\t\t\t\t\textnValue: \"extnValue\"\r\n\t\t\t\t}\r\n\t\t\t})\r\n\t\t);\r\n\r\n\t\tif(asn1.verified === false)\r\n\t\t\tthrow new Error(\"Object's schema was not verified against input data for Extension\");\r\n\t\t//endregion\r\n\r\n\t\t//region Get internal properties from parsed schema\r\n\t\tthis.extnID = asn1.result.extnID.valueBlock.toString();\r\n\t\tif(\"critical\" in asn1.result)\r\n\t\t\tthis.critical = asn1.result.critical.valueBlock.value;\r\n\t\tthis.extnValue = asn1.result.extnValue;\r\n\r\n\t\t//region Get \"parsedValue\" for well-known extensions\r\n\t\tasn1 = asn1js.fromBER(this.extnValue.valueBlock.valueHex);\r\n\t\tif(asn1.offset === (-1))\r\n\t\t\treturn;\r\n\r\n\t\tswitch(this.extnID)\r\n\t\t{\r\n\t\t\tcase \"2.5.29.9\": // SubjectDirectoryAttributes\r\n\t\t\t\ttry\r\n\t\t\t\t{\r\n\t\t\t\t\tthis.parsedValue = new SubjectDirectoryAttributes({ schema: asn1.result });\r\n\t\t\t\t}\r\n\t\t\t\tcatch(ex)\r\n\t\t\t\t{\r\n\t\t\t\t\tthis.parsedValue = new SubjectDirectoryAttributes();\r\n\t\t\t\t\tthis.parsedValue.parsingError = \"Incorrectly formated SubjectDirectoryAttributes\";\r\n\t\t\t\t}\r\n\t\t\t\tbreak;\r\n\t\t\tcase \"2.5.29.14\": // SubjectKeyIdentifier\r\n\t\t\t\tthis.parsedValue = asn1.result; // Should be just a simple OCTETSTRING\r\n\t\t\t\tbreak;\r\n\t\t\tcase \"2.5.29.15\": // KeyUsage\r\n\t\t\t\tthis.parsedValue = asn1.result; // Should be just a simple BITSTRING\r\n\t\t\t\tbreak;\r\n\t\t\tcase \"2.5.29.16\": // PrivateKeyUsagePeriod\r\n\t\t\t\ttry\r\n\t\t\t\t{\r\n\t\t\t\t\tthis.parsedValue = new PrivateKeyUsagePeriod({ schema: asn1.result });\r\n\t\t\t\t}\r\n\t\t\t\tcatch(ex)\r\n\t\t\t\t{\r\n\t\t\t\t\tthis.parsedValue = new PrivateKeyUsagePeriod();\r\n\t\t\t\t\tthis.parsedValue.parsingError = \"Incorrectly formated PrivateKeyUsagePeriod\";\r\n\t\t\t\t}\r\n\t\t\t\tbreak;\r\n\t\t\tcase \"2.5.29.17\": // SubjectAltName\r\n\t\t\tcase \"2.5.29.18\": // IssuerAltName\r\n\t\t\t\ttry\r\n\t\t\t\t{\r\n\t\t\t\t\tthis.parsedValue = new AltName({ schema: asn1.result });\r\n\t\t\t\t}\r\n\t\t\t\tcatch(ex)\r\n\t\t\t\t{\r\n\t\t\t\t\tthis.parsedValue = new AltName();\r\n\t\t\t\t\tthis.parsedValue.parsingError = \"Incorrectly formated AltName\";\r\n\t\t\t\t}\r\n\t\t\t\tbreak;\r\n\t\t\tcase \"2.5.29.19\": // BasicConstraints\r\n\t\t\t\ttry\r\n\t\t\t\t{\r\n\t\t\t\t\tthis.parsedValue = new BasicConstraints({ schema: asn1.result });\r\n\t\t\t\t}\r\n\t\t\t\tcatch(ex)\r\n\t\t\t\t{\r\n\t\t\t\t\tthis.parsedValue = new BasicConstraints();\r\n\t\t\t\t\tthis.parsedValue.parsingError = \"Incorrectly formated BasicConstraints\";\r\n\t\t\t\t}\r\n\t\t\t\tbreak;\r\n\t\t\tcase \"2.5.29.20\": // CRLNumber\r\n\t\t\tcase \"2.5.29.27\": // BaseCRLNumber (delta CRL indicator)\r\n\t\t\t\tthis.parsedValue = asn1.result; // Should be just a simple INTEGER\r\n\t\t\t\tbreak;\r\n\t\t\tcase \"2.5.29.21\": // CRLReason\r\n\t\t\t\tthis.parsedValue = asn1.result; // Should be just a simple ENUMERATED\r\n\t\t\t\tbreak;\r\n\t\t\tcase \"2.5.29.24\": // InvalidityDate\r\n\t\t\t\tthis.parsedValue = asn1.result; // Should be just a simple GeneralizedTime\r\n\t\t\t\tbreak;\r\n\t\t\tcase \"2.5.29.28\": // IssuingDistributionPoint\r\n\t\t\t\ttry\r\n\t\t\t\t{\r\n\t\t\t\t\tthis.parsedValue = new IssuingDistributionPoint({ schema: asn1.result });\r\n\t\t\t\t}\r\n\t\t\t\tcatch(ex)\r\n\t\t\t\t{\r\n\t\t\t\t\tthis.parsedValue = new IssuingDistributionPoint();\r\n\t\t\t\t\tthis.parsedValue.parsingError = \"Incorrectly formated IssuingDistributionPoint\";\r\n\t\t\t\t}\r\n\t\t\t\tbreak;\r\n\t\t\tcase \"2.5.29.29\": // CertificateIssuer\r\n\t\t\t\ttry\r\n\t\t\t\t{\r\n\t\t\t\t\tthis.parsedValue = new GeneralNames({ schema: asn1.result }); // Should be just a simple\r\n\t\t\t\t}\r\n\t\t\t\tcatch(ex)\r\n\t\t\t\t{\r\n\t\t\t\t\tthis.parsedValue = new GeneralNames();\r\n\t\t\t\t\tthis.parsedValue.parsingError = \"Incorrectly formated GeneralNames\";\r\n\t\t\t\t}\r\n\t\t\t\tbreak;\r\n\t\t\tcase \"2.5.29.30\": // NameConstraints\r\n\t\t\t\ttry\r\n\t\t\t\t{\r\n\t\t\t\t\tthis.parsedValue = new NameConstraints({ schema: asn1.result });\r\n\t\t\t\t}\r\n\t\t\t\tcatch(ex)\r\n\t\t\t\t{\r\n\t\t\t\t\tthis.parsedValue = new NameConstraints();\r\n\t\t\t\t\tthis.parsedValue.parsingError = \"Incorrectly formated NameConstraints\";\r\n\t\t\t\t}\r\n\t\t\t\tbreak;\r\n\t\t\tcase \"2.5.29.31\": // CRLDistributionPoints\r\n\t\t\tcase \"2.5.29.46\": // FreshestCRL\r\n\t\t\t\ttry\r\n\t\t\t\t{\r\n\t\t\t\t\tthis.parsedValue = new CRLDistributionPoints({ schema: asn1.result });\r\n\t\t\t\t}\r\n\t\t\t\tcatch(ex)\r\n\t\t\t\t{\r\n\t\t\t\t\tthis.parsedValue = new CRLDistributionPoints();\r\n\t\t\t\t\tthis.parsedValue.parsingError = \"Incorrectly formated CRLDistributionPoints\";\r\n\t\t\t\t}\r\n\t\t\t\tbreak;\r\n\t\t\tcase \"2.5.29.32\": // CertificatePolicies\r\n\t\t\t\ttry\r\n\t\t\t\t{\r\n\t\t\t\t\tthis.parsedValue = new CertificatePolicies({ schema: asn1.result });\r\n\t\t\t\t}\r\n\t\t\t\tcatch(ex)\r\n\t\t\t\t{\r\n\t\t\t\t\tthis.parsedValue = new CertificatePolicies();\r\n\t\t\t\t\tthis.parsedValue.parsingError = \"Incorrectly formated CertificatePolicies\";\r\n\t\t\t\t}\r\n\t\t\t\tbreak;\r\n\t\t\tcase \"2.5.29.33\": // PolicyMappings\r\n\t\t\t\ttry\r\n\t\t\t\t{\r\n\t\t\t\t\tthis.parsedValue = new PolicyMappings({ schema: asn1.result });\r\n\t\t\t\t}\r\n\t\t\t\tcatch(ex)\r\n\t\t\t\t{\r\n\t\t\t\t\tthis.parsedValue = new PolicyMappings();\r\n\t\t\t\t\tthis.parsedValue.parsingError = \"Incorrectly formated CertificatePolicies\";\r\n\t\t\t\t}\r\n\t\t\t\tbreak;\r\n\t\t\tcase \"2.5.29.35\": // AuthorityKeyIdentifier\r\n\t\t\t\ttry\r\n\t\t\t\t{\r\n\t\t\t\t\tthis.parsedValue = new AuthorityKeyIdentifier({ schema: asn1.result });\r\n\t\t\t\t}\r\n\t\t\t\tcatch(ex)\r\n\t\t\t\t{\r\n\t\t\t\t\tthis.parsedValue = new AuthorityKeyIdentifier();\r\n\t\t\t\t\tthis.parsedValue.parsingError = \"Incorrectly formated AuthorityKeyIdentifier\";\r\n\t\t\t\t}\r\n\t\t\t\tbreak;\r\n\t\t\tcase \"2.5.29.36\": // PolicyConstraints\r\n\t\t\t\ttry\r\n\t\t\t\t{\r\n\t\t\t\t\tthis.parsedValue = new PolicyConstraints({ schema: asn1.result });\r\n\t\t\t\t}\r\n\t\t\t\tcatch(ex)\r\n\t\t\t\t{\r\n\t\t\t\t\tthis.parsedValue = new PolicyConstraints();\r\n\t\t\t\t\tthis.parsedValue.parsingError = \"Incorrectly formated PolicyConstraints\";\r\n\t\t\t\t}\r\n\t\t\t\tbreak;\r\n\t\t\tcase \"2.5.29.37\": // ExtKeyUsage\r\n\t\t\t\ttry\r\n\t\t\t\t{\r\n\t\t\t\t\tthis.parsedValue = new ExtKeyUsage({ schema: asn1.result });\r\n\t\t\t\t}\r\n\t\t\t\tcatch(ex)\r\n\t\t\t\t{\r\n\t\t\t\t\tthis.parsedValue = new ExtKeyUsage();\r\n\t\t\t\t\tthis.parsedValue.parsingError = \"Incorrectly formated ExtKeyUsage\";\r\n\t\t\t\t}\r\n\t\t\t\tbreak;\r\n\t\t\tcase \"2.5.29.54\": // InhibitAnyPolicy\r\n\t\t\t\tthis.parsedValue = asn1.result; // Should be just a simple INTEGER\r\n\t\t\t\tbreak;\r\n\t\t\tcase \"1.3.6.1.5.5.7.1.1\": // AuthorityInfoAccess\r\n\t\t\tcase \"1.3.6.1.5.5.7.1.11\": // SubjectInfoAccess\r\n\t\t\t\ttry\r\n\t\t\t\t{\r\n\t\t\t\t\tthis.parsedValue = new InfoAccess({ schema: asn1.result });\r\n\t\t\t\t}\r\n\t\t\t\tcatch(ex)\r\n\t\t\t\t{\r\n\t\t\t\t\tthis.parsedValue = new InfoAccess();\r\n\t\t\t\t\tthis.parsedValue.parsingError = \"Incorrectly formated InfoAccess\";\r\n\t\t\t\t}\r\n\t\t\t\tbreak;\r\n\t\t\tcase \"1.3.6.1.4.1.11129.2.4.2\": // SignedCertificateTimestampList\r\n\t\t\t\ttry\r\n\t\t\t\t{\r\n\t\t\t\t\tthis.parsedValue = new SignedCertificateTimestampList({ schema: asn1.result });\r\n\t\t\t\t}\r\n\t\t\t\tcatch(ex)\r\n\t\t\t\t{\r\n\t\t\t\t\tthis.parsedValue = new SignedCertificateTimestampList();\r\n\t\t\t\t\tthis.parsedValue.parsingError = \"Incorrectly formated SignedCertificateTimestampList\";\r\n\t\t\t\t}\r\n\t\t\t\tbreak;\r\n\t\t\tdefault:\r\n\t\t}\r\n\t\t//endregion\r\n\t\t//endregion\r\n\t}\r\n\t//**********************************************************************************\r\n\t/**\r\n\t * Convert current object to asn1js object and set correct values\r\n\t * @returns {Object} asn1js object\r\n\t */\r\n\ttoSchema()\r\n\t{\r\n\t\t//region Create array for output sequence\r\n\t\tconst outputArray = [];\r\n\r\n\t\toutputArray.push(new asn1js.ObjectIdentifier({ value: this.extnID }));\r\n\r\n\t\tif(this.critical !== Extension.defaultValues(\"critical\"))\r\n\t\t\toutputArray.push(new asn1js.Boolean({ value: this.critical }));\r\n\r\n\t\toutputArray.push(this.extnValue);\r\n\t\t//endregion\r\n\r\n\t\t//region Construct and return new ASN.1 schema for this object\r\n\t\treturn (new asn1js.Sequence({\r\n\t\t\tvalue: outputArray\r\n\t\t}));\r\n\t\t//endregion\r\n\t}\r\n\t//**********************************************************************************\r\n\t/**\r\n\t * Convertion for the class to JSON object\r\n\t * @returns {Object}\r\n\t */\r\n\ttoJSON()\r\n\t{\r\n\t\tconst object = {\r\n\t\t\textnID: this.extnID,\r\n\t\t\textnValue: this.extnValue.toJSON()\r\n\t\t};\r\n\r\n\t\tif(this.critical !== Extension.defaultValues(\"critical\"))\r\n\t\t\tobject.critical = this.critical;\r\n\r\n\t\tif(\"parsedValue\" in this)\r\n\t\t{\r\n\t\t\tif(\"toJSON\" in this.parsedValue)\r\n\t\t\t\tobject.parsedValue = this.parsedValue.toJSON();\r\n\t\t}\r\n\r\n\t\treturn object;\r\n\t}\r\n\t//**********************************************************************************\r\n}\r\n//**************************************************************************************\r\n"],"file":"Extension.js"}