{"version":3,"sources":["../src/RSAPublicKey.js"],"names":["RSAPublicKey","constructor","parameters","modulus","defaultValues","publicExponent","fromSchema","schema","fromJSON","json","memberName","asn1js","Integer","Error","names","Sequence","name","blockName","value","asn1","compareSchema","verified","result","convertFromDER","toSchema","convertToDER","toJSON","n","valueBlock","valueHex","e","array","slice","Math","pow","byteLength"],"mappings":"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","sourcesContent":["import * as asn1js from \"asn1js\";\r\nimport { getParametersValue, toBase64, arrayBufferToString, stringToArrayBuffer, fromBase64, nearestPowerOf2, clearProps } from \"pvutils\";\r\n//**************************************************************************************\r\n/**\r\n * Class from RFC3447\r\n */\r\nexport default class RSAPublicKey\r\n{\r\n\t//**********************************************************************************\r\n\t/**\r\n\t * Constructor for RSAPublicKey class\r\n\t * @param {Object} [parameters={}]\r\n\t * @param {Object} [parameters.schema] asn1js parsed value to initialize the class from\r\n\t * @property {Integer} [modulus]\r\n\t * @property {Integer} [publicExponent]\r\n\t */\r\n\tconstructor(parameters = {})\r\n\t{\r\n\t\t//region Internal properties of the object\r\n\t\t/**\r\n\t\t * @type {Integer}\r\n\t\t * @desc Modulus part of RSA public key\r\n\t\t */\r\n\t\tthis.modulus = getParametersValue(parameters, \"modulus\", RSAPublicKey.defaultValues(\"modulus\"));\r\n\t\t/**\r\n\t\t * @type {Integer}\r\n\t\t * @desc Public exponent of RSA public key\r\n\t\t */\r\n\t\tthis.publicExponent = getParametersValue(parameters, \"publicExponent\", RSAPublicKey.defaultValues(\"publicExponent\"));\r\n\t\t//endregion\r\n\r\n\t\t//region If input argument array contains \"schema\" for this object\r\n\t\tif(\"schema\" in parameters)\r\n\t\t\tthis.fromSchema(parameters.schema);\r\n\t\t//endregion\r\n\t\t//region If input argument array contains \"json\" for this object\r\n\t\tif(\"json\" in parameters)\r\n\t\t\tthis.fromJSON(parameters.json);\r\n\t\t//endregion\r\n\t}\r\n\t//**********************************************************************************\r\n\t/**\r\n\t * Return default values for all class members\r\n\t * @param {string} memberName String name for a class member\r\n\t */\r\n\tstatic defaultValues(memberName)\r\n\t{\r\n\t\tswitch(memberName)\r\n\t\t{\r\n\t\t\tcase \"modulus\":\r\n\t\t\t\treturn new asn1js.Integer();\r\n\t\t\tcase \"publicExponent\":\r\n\t\t\t\treturn new asn1js.Integer();\r\n\t\t\tdefault:\r\n\t\t\t\tthrow new Error(`Invalid member name for RSAPublicKey class: ${memberName}`);\r\n\t\t}\r\n\t}\r\n\t//**********************************************************************************\r\n\t/**\r\n\t * Return value of pre-defined ASN.1 schema for current class\r\n\t *\r\n\t * ASN.1 schema:\r\n\t * ```asn1\r\n\t * RSAPublicKey ::= Sequence {\r\n\t *    modulus           Integer,  -- n\r\n\t *    publicExponent    Integer   -- e\r\n\t * }\r\n\t * ```\r\n\t *\r\n\t * @param {Object} parameters Input parameters for the schema\r\n\t * @returns {Object} asn1js schema object\r\n\t */\r\n\tstatic schema(parameters = {})\r\n\t{\r\n\t\t/**\r\n\t\t * @type {Object}\r\n\t\t * @property {string} utcTimeName Name for \"utcTimeName\" choice\r\n\t\t * @property {string} generalTimeName Name for \"generalTimeName\" choice\r\n\t\t */\r\n\t\tconst names = getParametersValue(parameters, \"names\", {});\r\n\r\n\t\treturn (new asn1js.Sequence({\r\n\t\t\tname: (names.blockName || \"\"),\r\n\t\t\tvalue: [\r\n\t\t\t\tnew asn1js.Integer({ name: (names.modulus || \"\") }),\r\n\t\t\t\tnew asn1js.Integer({ name: (names.publicExponent || \"\") })\r\n\t\t\t]\r\n\t\t}));\r\n\t}\r\n\t//**********************************************************************************\r\n\t/**\r\n\t * Convert parsed asn1js object into current class\r\n\t * @param {!Object} schema\r\n\t */\r\n\tfromSchema(schema)\r\n\t{\r\n\t\t//region Clear input data first\r\n\t\tclearProps(schema, [\r\n\t\t\t\"modulus\",\r\n\t\t\t\"publicExponent\"\r\n\t\t]);\r\n\t\t//endregion\r\n\t\t\r\n\t\t//region Check the schema is valid\r\n\t\tconst asn1 = asn1js.compareSchema(schema,\r\n\t\t\tschema,\r\n\t\t\tRSAPublicKey.schema({\r\n\t\t\t\tnames: {\r\n\t\t\t\t\tmodulus: \"modulus\",\r\n\t\t\t\t\tpublicExponent: \"publicExponent\"\r\n\t\t\t\t}\r\n\t\t\t})\r\n\t\t);\r\n\r\n\t\tif(asn1.verified === false)\r\n\t\t\tthrow new Error(\"Object's schema was not verified against input data for RSAPublicKey\");\r\n\t\t//endregion\r\n\r\n\t\t//region Get internal properties from parsed schema\r\n\t\tthis.modulus = asn1.result.modulus.convertFromDER(256);\r\n\t\tthis.publicExponent = asn1.result.publicExponent;\r\n\t\t//endregion\r\n\t}\r\n\t//**********************************************************************************\r\n\t/**\r\n\t * Convert current object to asn1js object and set correct values\r\n\t * @returns {Object} asn1js object\r\n\t */\r\n\ttoSchema()\r\n\t{\r\n\t\t//region Construct and return new ASN.1 schema for this object\r\n\t\treturn (new asn1js.Sequence({\r\n\t\t\tvalue: [\r\n\t\t\t\tthis.modulus.convertToDER(),\r\n\t\t\t\tthis.publicExponent\r\n\t\t\t]\r\n\t\t}));\r\n\t\t//endregion\r\n\t}\r\n\t//**********************************************************************************\r\n\t/**\r\n\t * Convertion for the class to JSON object\r\n\t * @returns {Object}\r\n\t */\r\n\ttoJSON()\r\n\t{\r\n\t\treturn {\r\n\t\t\tn: toBase64(arrayBufferToString(this.modulus.valueBlock.valueHex), true, true, true),\r\n\t\t\te: toBase64(arrayBufferToString(this.publicExponent.valueBlock.valueHex), true, true, true)\r\n\t\t};\r\n\t}\r\n\t//**********************************************************************************\r\n\t/**\r\n\t * Convert JSON value into current object\r\n\t * @param {Object} json\r\n\t */\r\n\tfromJSON(json)\r\n\t{\r\n\t\tif(\"n\" in json)\r\n\t\t{\r\n\t\t\tconst array = stringToArrayBuffer(fromBase64(json.n, true));\r\n\t\t\tthis.modulus = new asn1js.Integer({ valueHex: array.slice(0, Math.pow(2, nearestPowerOf2(array.byteLength))) });\r\n\t\t}\r\n\t\telse\r\n\t\t\tthrow new Error(\"Absent mandatory parameter \\\"n\\\"\");\r\n\r\n\t\tif(\"e\" in json)\r\n\t\t\tthis.publicExponent = new asn1js.Integer({ valueHex: stringToArrayBuffer(fromBase64(json.e, true)).slice(0, 3) });\r\n\t\telse\r\n\t\t\tthrow new Error(\"Absent mandatory parameter \\\"e\\\"\");\r\n\t}\r\n\t//**********************************************************************************\r\n}\r\n//**************************************************************************************\r\n"],"file":"RSAPublicKey.js"}