{"version":3,"sources":["../src/ResponseData.js"],"names":["ResponseData","constructor","parameters","tbs","defaultValues","responderID","producedAt","responses","responseExtensions","fromSchema","schema","memberName","ArrayBuffer","Date","Error","compareWithDefault","memberValue","byteLength","Object","keys","length","names","asn1js","Sequence","name","blockName","value","Constructed","optional","idBlock","tagClass","tagNumber","Integer","version","Choice","RelativeDistinguishedNames","ResponseDataByName","OctetString","ResponseDataByKey","GeneralizedTime","Repeated","SingleResponse","response","Extensions","extensions","asn1","compareSchema","verified","result","valueBeforeDecode","valueBlock","valueDec","toDate","Array","from","element","Extension","toSchema","encodeFlag","tbsSchema","fromBER","outputArray","push","valueDate","toJSON","_object"],"mappings":"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","sourcesContent":["import * as asn1js from \"asn1js\";\r\nimport { getParametersValue, clearProps } from \"pvutils\";\r\nimport RelativeDistinguishedNames from \"./RelativeDistinguishedNames.js\";\r\nimport SingleResponse from \"./SingleResponse.js\";\r\nimport Extension from \"./Extension.js\";\r\nimport Extensions from \"./Extensions.js\";\r\n//**************************************************************************************\r\n/**\r\n * Class from RFC6960\r\n */\r\nexport default class ResponseData\r\n{\r\n\t//**********************************************************************************\r\n\t/**\r\n\t * Constructor for ResponseData class\r\n\t * @param {Object} [parameters={}]\r\n\t * @param {Object} [parameters.schema] asn1js parsed value to initialize the class from\r\n\t */\r\n\tconstructor(parameters = {})\r\n\t{\r\n\t\t//region Internal properties of the object\r\n\t\t/**\r\n\t\t * @type {ArrayBuffer}\r\n\t\t * @desc tbs\r\n\t\t */\r\n\t\tthis.tbs = getParametersValue(parameters, \"tbs\", ResponseData.defaultValues(\"tbs\"));\r\n\t\t/**\r\n\t\t * @type {Object}\r\n\t\t * @desc responderID\r\n\t\t */\r\n\t\tthis.responderID = getParametersValue(parameters, \"responderID\", ResponseData.defaultValues(\"responderID\"));\r\n\t\t/**\r\n\t\t * @type {Date}\r\n\t\t * @desc producedAt\r\n\t\t */\r\n\t\tthis.producedAt = getParametersValue(parameters, \"producedAt\", ResponseData.defaultValues(\"producedAt\"));\r\n\t\t/**\r\n\t\t * @type {Array.<SingleResponse>}\r\n\t\t * @desc responses\r\n\t\t */\r\n\t\tthis.responses = getParametersValue(parameters, \"responses\", ResponseData.defaultValues(\"responses\"));\r\n\r\n\t\tif(\"responseExtensions\" in parameters)\r\n\t\t\t/**\r\n\t\t\t * @type {Array.<Extension>}\r\n\t\t\t * @desc responseExtensions\r\n\t\t\t */\r\n\t\t\tthis.responseExtensions = getParametersValue(parameters, \"responseExtensions\", ResponseData.defaultValues(\"responseExtensions\"));\r\n\t\t//endregion\r\n\r\n\t\t//region If input argument array contains \"schema\" for this object\r\n\t\tif(\"schema\" in parameters)\r\n\t\t\tthis.fromSchema(parameters.schema);\r\n\t\t//endregion\r\n\t}\r\n\t//**********************************************************************************\r\n\t/**\r\n\t * Return default values for all class members\r\n\t * @param {string} memberName String name for a class member\r\n\t */\r\n\tstatic defaultValues(memberName)\r\n\t{\r\n\t\tswitch(memberName)\r\n\t\t{\r\n\t\t\tcase \"tbs\":\r\n\t\t\t\treturn new ArrayBuffer(0);\r\n\t\t\tcase \"responderID\":\r\n\t\t\t\treturn {};\r\n\t\t\tcase \"producedAt\":\r\n\t\t\t\treturn new Date(0, 0, 0);\r\n\t\t\tcase \"responses\":\r\n\t\t\tcase \"responseExtensions\":\r\n\t\t\t\treturn [];\r\n\t\t\tdefault:\r\n\t\t\t\tthrow new Error(`Invalid member name for ResponseData class: ${memberName}`);\r\n\t\t}\r\n\t}\r\n\t//**********************************************************************************\r\n\t/**\r\n\t * Compare values with default values for all class members\r\n\t * @param {string} memberName String name for a class member\r\n\t * @param {*} memberValue Value to compare with default value\r\n\t */\r\n\tstatic compareWithDefault(memberName, memberValue)\r\n\t{\r\n\t\tswitch(memberName)\r\n\t\t{\r\n\t\t\tcase \"tbs\":\r\n\t\t\t\treturn (memberValue.byteLength === 0);\r\n\t\t\tcase \"responderID\":\r\n\t\t\t\treturn (Object.keys(memberValue).length === 0);\r\n\t\t\tcase \"producedAt\":\r\n\t\t\t\treturn (memberValue === ResponseData.defaultValues(memberName));\r\n\t\t\tcase \"responses\":\r\n\t\t\tcase \"responseExtensions\":\r\n\t\t\t\treturn (memberValue.length === 0);\r\n\t\t\tdefault:\r\n\t\t\t\tthrow new Error(`Invalid member name for ResponseData class: ${memberName}`);\r\n\t\t}\r\n\t}\r\n\t//**********************************************************************************\r\n\t/**\r\n\t * Return value of pre-defined ASN.1 schema for current class\r\n\t *\r\n\t * ASN.1 schema:\r\n\t * ```asn1\r\n\t * ResponseData ::= SEQUENCE {\r\n\t *    version              [0] EXPLICIT Version DEFAULT v1,\r\n\t *    responderID              ResponderID,\r\n\t *    producedAt               GeneralizedTime,\r\n\t *    responses                SEQUENCE OF SingleResponse,\r\n\t *    responseExtensions   [1] EXPLICIT Extensions OPTIONAL }\r\n\t * ```\r\n\t *\r\n\t * @param {Object} parameters Input parameters for the schema\r\n\t * @returns {Object} asn1js schema object\r\n\t */\r\n\tstatic schema(parameters = {})\r\n\t{\r\n\t\t/**\r\n\t\t * @type {Object}\r\n\t\t * @property {string} [blockName]\r\n\t\t * @property {string} [version]\r\n\t\t * @property {string} [ResponseDataByName]\r\n\t\t * @property {string} [ResponseDataByKey]\r\n\t\t * @property {string} [producedAt]\r\n\t\t * @property {string} [response]\r\n\t\t * @property {string} [extensions]\r\n\t\t */\r\n\t\tconst names = getParametersValue(parameters, \"names\", {});\r\n\r\n\t\treturn (new asn1js.Sequence({\r\n\t\t\tname: (names.blockName || \"ResponseData\"),\r\n\t\t\tvalue: [\r\n\t\t\t\tnew asn1js.Constructed({\r\n\t\t\t\t\toptional: true,\r\n\t\t\t\t\tidBlock: {\r\n\t\t\t\t\t\ttagClass: 3, // CONTEXT-SPECIFIC\r\n\t\t\t\t\t\ttagNumber: 0 // [0]\r\n\t\t\t\t\t},\r\n\t\t\t\t\tvalue: [new asn1js.Integer({ name: (names.version || \"ResponseData.version\") })]\r\n\t\t\t\t}),\r\n\t\t\t\tnew asn1js.Choice({\r\n\t\t\t\t\tvalue: [\r\n\t\t\t\t\t\tnew asn1js.Constructed({\r\n\t\t\t\t\t\t\tname: (names.responderID || \"ResponseData.responderID\"),\r\n\t\t\t\t\t\t\tidBlock: {\r\n\t\t\t\t\t\t\t\ttagClass: 3, // CONTEXT-SPECIFIC\r\n\t\t\t\t\t\t\t\ttagNumber: 1 // [1]\r\n\t\t\t\t\t\t\t},\r\n\t\t\t\t\t\t\tvalue: [RelativeDistinguishedNames.schema(names.ResponseDataByName || {\r\n\t\t\t\t\t\t\t\tnames: {\r\n\t\t\t\t\t\t\t\t\tblockName: \"ResponseData.byName\"\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t})]\r\n\t\t\t\t\t\t}),\r\n\t\t\t\t\t\tnew asn1js.Constructed({\r\n\t\t\t\t\t\t\tname: (names.responderID || \"ResponseData.responderID\"),\r\n\t\t\t\t\t\t\tidBlock: {\r\n\t\t\t\t\t\t\t\ttagClass: 3, // CONTEXT-SPECIFIC\r\n\t\t\t\t\t\t\t\ttagNumber: 2 // [2]\r\n\t\t\t\t\t\t\t},\r\n\t\t\t\t\t\t\tvalue: [new asn1js.OctetString({ name: (names.ResponseDataByKey || \"ResponseData.byKey\") })]\r\n\t\t\t\t\t\t})\r\n\t\t\t\t\t]\r\n\t\t\t\t}),\r\n\t\t\t\tnew asn1js.GeneralizedTime({ name: (names.producedAt || \"ResponseData.producedAt\") }),\r\n\t\t\t\tnew asn1js.Sequence({\r\n\t\t\t\t\tvalue: [\r\n\t\t\t\t\t\tnew asn1js.Repeated({\r\n\t\t\t\t\t\t\tname: \"ResponseData.responses\",\r\n\t\t\t\t\t\t\tvalue: SingleResponse.schema(names.response || {})\r\n\t\t\t\t\t\t})\r\n\t\t\t\t\t]\r\n\t\t\t\t}),\r\n\t\t\t\tnew asn1js.Constructed({\r\n\t\t\t\t\toptional: true,\r\n\t\t\t\t\tidBlock: {\r\n\t\t\t\t\t\ttagClass: 3, // CONTEXT-SPECIFIC\r\n\t\t\t\t\t\ttagNumber: 1 // [1]\r\n\t\t\t\t\t},\r\n\t\t\t\t\tvalue: [Extensions.schema(names.extensions || {\r\n\t\t\t\t\t\tnames: {\r\n\t\t\t\t\t\t\tblockName: \"ResponseData.responseExtensions\"\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t})]\r\n\t\t\t\t}) // EXPLICIT SEQUENCE value\r\n\t\t\t]\r\n\t\t}));\r\n\t}\r\n\t//**********************************************************************************\r\n\t/**\r\n\t * Convert parsed asn1js object into current class\r\n\t * @param {!Object} schema\r\n\t */\r\n\tfromSchema(schema)\r\n\t{\r\n\t\t//region Clear input data first\r\n\t\tclearProps(schema, [\r\n\t\t\t\"ResponseData\",\r\n\t\t\t\"ResponseData.version\",\r\n\t\t\t\"ResponseData.responderID\",\r\n\t\t\t\"ResponseData.producedAt\",\r\n\t\t\t\"ResponseData.responses\",\r\n\t\t\t\"ResponseData.responseExtensions\"\r\n\t\t]);\r\n\t\t//endregion\r\n\t\t\r\n\t\t//region Check the schema is valid\r\n\t\tconst asn1 = asn1js.compareSchema(schema,\r\n\t\t\tschema,\r\n\t\t\tResponseData.schema()\r\n\t\t);\r\n\r\n\t\tif(asn1.verified === false)\r\n\t\t\tthrow new Error(\"Object's schema was not verified against input data for ResponseData\");\r\n\t\t//endregion\r\n\r\n\t\t//region Get internal properties from parsed schema\r\n\t\tthis.tbs = asn1.result.ResponseData.valueBeforeDecode;\r\n\r\n\t\tif(\"ResponseData.version\" in asn1.result)\r\n\t\t\tthis.version = asn1.result[\"ResponseData.version\"].valueBlock.valueDec;\r\n\r\n\t\tif(asn1.result[\"ResponseData.responderID\"].idBlock.tagNumber === 1)\r\n\t\t\tthis.responderID = new RelativeDistinguishedNames({ schema: asn1.result[\"ResponseData.responderID\"].valueBlock.value[0] });\r\n\t\telse\r\n\t\t\tthis.responderID = asn1.result[\"ResponseData.responderID\"].valueBlock.value[0]; // OCTETSTRING\r\n\r\n\t\tthis.producedAt = asn1.result[\"ResponseData.producedAt\"].toDate();\r\n\t\tthis.responses = Array.from(asn1.result[\"ResponseData.responses\"], element => new SingleResponse({ schema: element }));\r\n\r\n\t\tif(\"ResponseData.responseExtensions\" in asn1.result)\r\n\t\t\tthis.responseExtensions = Array.from(asn1.result[\"ResponseData.responseExtensions\"].valueBlock.value, element => new Extension({ schema: element }));\r\n\t\t//endregion\r\n\t}\r\n\t//**********************************************************************************\r\n\t/**\r\n\t * Convert current object to asn1js object and set correct values\r\n\t * @param {boolean} encodeFlag If param equal to false then create TBS schema via decoding stored value. In othe case create TBS schema via assembling from TBS parts.\r\n\t * @returns {Object} asn1js object\r\n\t */\r\n\ttoSchema(encodeFlag = false)\r\n\t{\r\n\t\t//region Decode stored TBS value \r\n\t\tlet tbsSchema;\r\n\t\t\r\n\t\tif(encodeFlag === false)\r\n\t\t{\r\n\t\t\tif(this.tbs.length === 0) // No stored certificate TBS part\r\n\t\t\t\treturn ResponseData.schema();\r\n\t\t\t\r\n\t\t\ttbsSchema = asn1js.fromBER(this.tbs).result;\r\n\t\t}\r\n\t\t//endregion \r\n\t\t//region Create TBS schema via assembling from TBS parts\r\n\t\telse\r\n\t\t{\r\n\t\t\tconst outputArray = [];\r\n\t\t\t\r\n\t\t\tif(\"version\" in this)\r\n\t\t\t{\r\n\t\t\t\toutputArray.push(new asn1js.Constructed({\r\n\t\t\t\t\tidBlock: {\r\n\t\t\t\t\t\ttagClass: 3, // CONTEXT-SPECIFIC\r\n\t\t\t\t\t\ttagNumber: 0 // [0]\r\n\t\t\t\t\t},\r\n\t\t\t\t\tvalue: [new asn1js.Integer({ value: this.version })]\r\n\t\t\t\t}));\r\n\t\t\t}\r\n\t\t\t\r\n\t\t\tif(this.responderID instanceof RelativeDistinguishedNames)\r\n\t\t\t{\r\n\t\t\t\toutputArray.push(new asn1js.Constructed({\r\n\t\t\t\t\tidBlock: {\r\n\t\t\t\t\t\ttagClass: 3, // CONTEXT-SPECIFIC\r\n\t\t\t\t\t\ttagNumber: 1 // [1]\r\n\t\t\t\t\t},\r\n\t\t\t\t\tvalue: [this.responderID.toSchema()]\r\n\t\t\t\t}));\r\n\t\t\t}\r\n\t\t\telse\r\n\t\t\t{\r\n\t\t\t\toutputArray.push(new asn1js.Constructed({\r\n\t\t\t\t\tidBlock: {\r\n\t\t\t\t\t\ttagClass: 3, // CONTEXT-SPECIFIC\r\n\t\t\t\t\t\ttagNumber: 2 // [2]\r\n\t\t\t\t\t},\r\n\t\t\t\t\tvalue: [this.responderID]\r\n\t\t\t\t}));\r\n\t\t\t}\r\n\t\t\t\r\n\t\t\toutputArray.push(new asn1js.GeneralizedTime({ valueDate: this.producedAt }));\r\n\r\n\t\t\toutputArray.push(new asn1js.Sequence({\r\n\t\t\t\tvalue: Array.from(this.responses, element => element.toSchema())\r\n\t\t\t}));\r\n\t\t\t\r\n\t\t\tif(\"responseExtensions\" in this)\r\n\t\t\t{\r\n\t\t\t\toutputArray.push(new asn1js.Constructed({\r\n\t\t\t\t\tidBlock: {\r\n\t\t\t\t\t\ttagClass: 3, // CONTEXT-SPECIFIC\r\n\t\t\t\t\t\ttagNumber: 1 // [1]\r\n\t\t\t\t\t},\r\n\t\t\t\t\tvalue: [new asn1js.Sequence({\r\n\t\t\t\t\t\tvalue: Array.from(this.responseExtensions, element => element.toSchema())\r\n\t\t\t\t\t})]\r\n\t\t\t\t}));\r\n\t\t\t}\r\n\t\t\t\r\n\t\t\ttbsSchema = new asn1js.Sequence({\r\n\t\t\t\tvalue: outputArray\r\n\t\t\t});\r\n\t\t}\r\n\t\t//endregion \r\n\t\t\r\n\t\t//region Construct and return new ASN.1 schema for this object \r\n\t\treturn tbsSchema;\r\n\t\t//endregion \r\n\t}\r\n\t//**********************************************************************************\r\n\t/**\r\n\t * Convertion for the class to JSON object\r\n\t * @returns {Object}\r\n\t */\r\n\ttoJSON()\r\n\t{\r\n\t\tconst _object = {};\r\n\r\n\t\tif(\"version\" in this)\r\n\t\t\t_object.version = this.version;\r\n\r\n\t\tif(\"responderID\" in this)\r\n\t\t\t_object.responderID = this.responderID;\r\n\r\n\t\tif(\"producedAt\" in this)\r\n\t\t\t_object.producedAt = this.producedAt;\r\n\r\n\t\tif(\"responses\" in this)\r\n\t\t\t_object.responses = Array.from(this.responses, element => element.toJSON());\r\n\r\n\t\tif(\"responseExtensions\" in this)\r\n\t\t\t_object.responseExtensions = Array.from(this.responseExtensions, element => element.toJSON());\r\n\r\n\t\treturn _object;\r\n\t}\r\n\t//**********************************************************************************\r\n}\r\n//**************************************************************************************\r\n"],"file":"ResponseData.js"}