{"version":3,"sources":["../src/OriginatorInfo.js"],"names":["OriginatorInfo","constructor","parameters","certs","defaultValues","crls","fromSchema","schema","memberName","CertificateSet","RevocationInfoChoices","Error","compareWithDefault","memberValue","certificates","length","otherRevocationInfos","names","asn1js","Sequence","name","blockName","value","Constructed","optional","idBlock","tagClass","tagNumber","valueBlock","asn1","compareSchema","verified","result","Set","toSchema","sequenceValue","push","toJSON","object"],"mappings":"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","sourcesContent":["import * as asn1js from \"asn1js\";\r\nimport { getParametersValue, clearProps } from \"pvutils\";\r\nimport CertificateSet from \"./CertificateSet.js\";\r\nimport RevocationInfoChoices from \"./RevocationInfoChoices.js\";\r\n//**************************************************************************************\r\n/**\r\n * Class from RFC5652\r\n */\r\nexport default class OriginatorInfo\r\n{\r\n\t//**********************************************************************************\r\n\t/**\r\n\t * Constructor for OriginatorInfo class\r\n\t * @param {Object} [parameters={}]\r\n\t * @param {Object} [parameters.schema] asn1js parsed value to initialize the class from\r\n\t */\r\n\tconstructor(parameters = {})\r\n\t{\r\n\t\t//region Internal properties of the object\r\n\t\tif(\"certs\" in parameters)\r\n\t\t\t/**\r\n\t\t\t * @type {CertificateSet}\r\n\t\t\t * @desc certs\r\n\t\t\t */\r\n\t\t\tthis.certs = getParametersValue(parameters, \"certs\", OriginatorInfo.defaultValues(\"certs\"));\r\n\r\n\t\tif(\"crls\" in parameters)\r\n\t\t\t/**\r\n\t\t\t * @type {RevocationInfoChoices}\r\n\t\t\t * @desc crls\r\n\t\t\t */\r\n\t\t\tthis.crls = getParametersValue(parameters, \"crls\", OriginatorInfo.defaultValues(\"crls\"));\r\n\t\t//endregion\r\n\r\n\t\t//region If input argument array contains \"schema\" for this object\r\n\t\tif(\"schema\" in parameters)\r\n\t\t\tthis.fromSchema(parameters.schema);\r\n\t\t//endregion\r\n\t}\r\n\t//**********************************************************************************\r\n\t/**\r\n\t * Return default values for all class members\r\n\t * @param {string} memberName String name for a class member\r\n\t */\r\n\tstatic defaultValues(memberName)\r\n\t{\r\n\t\tswitch(memberName)\r\n\t\t{\r\n\t\t\tcase \"certs\":\r\n\t\t\t\treturn new CertificateSet();\r\n\t\t\tcase \"crls\":\r\n\t\t\t\treturn new RevocationInfoChoices();\r\n\t\t\tdefault:\r\n\t\t\t\tthrow new Error(`Invalid member name for OriginatorInfo class: ${memberName}`);\r\n\t\t}\r\n\t}\r\n\t//**********************************************************************************\r\n\t/**\r\n\t * Compare values with default values for all class members\r\n\t * @param {string} memberName String name for a class member\r\n\t * @param {*} memberValue Value to compare with default value\r\n\t */\r\n\tstatic compareWithDefault(memberName, memberValue)\r\n\t{\r\n\t\tswitch(memberName)\r\n\t\t{\r\n\t\t\tcase \"certs\":\r\n\t\t\t\treturn (memberValue.certificates.length === 0);\r\n\t\t\tcase \"crls\":\r\n\t\t\t\treturn ((memberValue.crls.length === 0) && (memberValue.otherRevocationInfos.length === 0));\r\n\t\t\tdefault:\r\n\t\t\t\tthrow new Error(`Invalid member name for OriginatorInfo class: ${memberName}`);\r\n\t\t}\r\n\t}\r\n\t//**********************************************************************************\r\n\t/**\r\n\t * Return value of pre-defined ASN.1 schema for current class\r\n\t *\r\n\t * ASN.1 schema:\r\n\t * ```asn1\r\n\t * OriginatorInfo ::= SEQUENCE {\r\n\t *    certs [0] IMPLICIT CertificateSet OPTIONAL,\r\n\t *    crls [1] IMPLICIT RevocationInfoChoices OPTIONAL }\r\n\t * ```\r\n\t *\r\n\t * @param {Object} parameters Input parameters for the schema\r\n\t * @returns {Object} asn1js schema object\r\n\t */\r\n\tstatic schema(parameters = {})\r\n\t{\r\n\t\t/**\r\n\t\t * @type {Object}\r\n\t\t * @property {string} [blockName]\r\n\t\t * @property {string} [certs]\r\n\t\t * @property {string} [crls]\r\n\t\t */\r\n\t\tconst names = getParametersValue(parameters, \"names\", {});\r\n\r\n\t\treturn (new asn1js.Sequence({\r\n\t\t\tname: (names.blockName || \"\"),\r\n\t\t\tvalue: [\r\n\t\t\t\tnew asn1js.Constructed({\r\n\t\t\t\t\tname: (names.certs || \"\"),\r\n\t\t\t\t\toptional: true,\r\n\t\t\t\t\tidBlock: {\r\n\t\t\t\t\t\ttagClass: 3, // CONTEXT-SPECIFIC\r\n\t\t\t\t\t\ttagNumber: 0 // [0]\r\n\t\t\t\t\t},\r\n\t\t\t\t\tvalue: CertificateSet.schema().valueBlock.value\r\n\t\t\t\t}),\r\n\t\t\t\tnew asn1js.Constructed({\r\n\t\t\t\t\tname: (names.crls || \"\"),\r\n\t\t\t\t\toptional: true,\r\n\t\t\t\t\tidBlock: {\r\n\t\t\t\t\t\ttagClass: 3, // CONTEXT-SPECIFIC\r\n\t\t\t\t\t\ttagNumber: 1 // [1]\r\n\t\t\t\t\t},\r\n\t\t\t\t\tvalue: RevocationInfoChoices.schema().valueBlock.value\r\n\t\t\t\t})\r\n\t\t\t]\r\n\t\t}));\r\n\t}\r\n\t//**********************************************************************************\r\n\t/**\r\n\t * Convert parsed asn1js object into current class\r\n\t * @param {!Object} schema\r\n\t */\r\n\tfromSchema(schema)\r\n\t{\r\n\t\t//region Clear input data first\r\n\t\tclearProps(schema, [\r\n\t\t\t\"certs\",\r\n\t\t\t\"crls\"\r\n\t\t]);\r\n\t\t//endregion\r\n\t\t\r\n\t\t//region Check the schema is valid\r\n\t\tconst asn1 = asn1js.compareSchema(schema,\r\n\t\t\tschema,\r\n\t\t\tOriginatorInfo.schema({\r\n\t\t\t\tnames: {\r\n\t\t\t\t\tcerts: \"certs\",\r\n\t\t\t\t\tcrls: \"crls\"\r\n\t\t\t\t}\r\n\t\t\t})\r\n\t\t);\r\n\r\n\t\tif(asn1.verified === false)\r\n\t\t\tthrow new Error(\"Object's schema was not verified against input data for OriginatorInfo\");\r\n\t\t//endregion\r\n\r\n\t\t//region Get internal properties from parsed schema\r\n\t\tif(\"certs\" in asn1.result)\r\n\t\t{\r\n\t\t\tthis.certs = new CertificateSet({\r\n\t\t\t\tschema: new asn1js.Set({\r\n\t\t\t\t\tvalue: asn1.result.certs.valueBlock.value\r\n\t\t\t\t})\r\n\t\t\t});\r\n\t\t}\r\n\r\n\t\tif(\"crls\" in asn1.result)\r\n\t\t{\r\n\t\t\tthis.crls = new RevocationInfoChoices({\r\n\t\t\t\tschema: new asn1js.Set({\r\n\t\t\t\t\tvalue: asn1.result.crls.valueBlock.value\r\n\t\t\t\t})\r\n\t\t\t});\r\n\t\t}\r\n\t\t//endregion\r\n\t}\r\n\t//**********************************************************************************\r\n\t/**\r\n\t * Convert current object to asn1js object and set correct values\r\n\t * @returns {Object} asn1js object\r\n\t */\r\n\ttoSchema()\r\n\t{\r\n\t\tconst sequenceValue = [];\r\n\r\n\t\tif(\"certs\" in this)\r\n\t\t{\r\n\t\t\tsequenceValue.push(new asn1js.Constructed({\r\n\t\t\t\tidBlock: {\r\n\t\t\t\t\ttagClass: 3, // CONTEXT-SPECIFIC\r\n\t\t\t\t\ttagNumber: 0 // [0]\r\n\t\t\t\t},\r\n\t\t\t\tvalue: this.certs.toSchema().valueBlock.value\r\n\t\t\t}));\r\n\t\t}\r\n\r\n\t\tif(\"crls\" in this)\r\n\t\t{\r\n\t\t\tsequenceValue.push(new asn1js.Constructed({\r\n\t\t\t\tidBlock: {\r\n\t\t\t\t\ttagClass: 3, // CONTEXT-SPECIFIC\r\n\t\t\t\t\ttagNumber: 1 // [1]\r\n\t\t\t\t},\r\n\t\t\t\tvalue: this.crls.toSchema().valueBlock.value\r\n\t\t\t}));\r\n\t\t}\r\n\r\n\t\t//region Construct and return new ASN.1 schema for this object\r\n\t\treturn (new asn1js.Sequence({\r\n\t\t\tvalue: sequenceValue\r\n\t\t}));\r\n\t\t//endregion\r\n\t}\r\n\t//**********************************************************************************\r\n\t/**\r\n\t * Convertion for the class to JSON object\r\n\t * @returns {Object}\r\n\t */\r\n\ttoJSON()\r\n\t{\r\n\t\tconst object = {};\r\n\r\n\t\tif(\"certs\" in this)\r\n\t\t\tobject.certs = this.certs.toJSON();\r\n\r\n\t\tif(\"crls\" in this)\r\n\t\t\tobject.crls = this.crls.toJSON();\r\n\r\n\t\treturn object;\r\n\t}\r\n\t//**********************************************************************************\r\n}\r\n//**************************************************************************************\r\n"],"file":"OriginatorInfo.js"}