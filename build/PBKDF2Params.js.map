{"version":3,"sources":["../src/PBKDF2Params.js"],"names":["PBKDF2Params","constructor","parameters","salt","defaultValues","iterationCount","keyLength","prf","fromSchema","schema","memberName","AlgorithmIdentifier","algorithmId","algorithmParams","asn1js","Null","Error","names","Sequence","name","blockName","value","Choice","OctetString","saltPrimitive","saltConstructed","Integer","optional","asn1","compareSchema","verified","result","valueBlock","valueDec","toSchema","outputArray","push","isEqual","toJSON","_object"],"mappings":"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","sourcesContent":["import * as asn1js from \"asn1js\";\r\nimport { getParametersValue, clearProps } from \"pvutils\";\r\nimport AlgorithmIdentifier from \"./AlgorithmIdentifier.js\";\r\n//**************************************************************************************\r\n/**\r\n * Class from RFC2898\r\n */\r\nexport default class PBKDF2Params\r\n{\r\n\t//**********************************************************************************\r\n\t/**\r\n\t * Constructor for PBKDF2Params class\r\n\t * @param {Object} [parameters={}]\r\n\t * @param {Object} [parameters.schema] asn1js parsed value to initialize the class from\r\n\t */\r\n\tconstructor(parameters = {})\r\n\t{\r\n\t\t//region Internal properties of the object\r\n\t\t/**\r\n\t\t * @type {Object}\r\n\t\t * @desc salt\r\n\t\t */\r\n\t\tthis.salt = getParametersValue(parameters, \"salt\", PBKDF2Params.defaultValues(\"salt\"));\r\n\t\t/**\r\n\t\t * @type {number}\r\n\t\t * @desc iterationCount\r\n\t\t */\r\n\t\tthis.iterationCount = getParametersValue(parameters, \"iterationCount\", PBKDF2Params.defaultValues(\"iterationCount\"));\r\n\t\t\r\n\t\tif(\"keyLength\" in parameters)\r\n\t\t\t/**\r\n\t\t\t * @type {number}\r\n\t\t\t * @desc keyLength\r\n\t\t\t */\r\n\t\t\tthis.keyLength = getParametersValue(parameters, \"keyLength\", PBKDF2Params.defaultValues(\"keyLength\"));\r\n\t\t\r\n\t\tif(\"prf\" in parameters)\r\n\t\t\t/**\r\n\t\t\t * @type {AlgorithmIdentifier}\r\n\t\t\t * @desc prf\r\n\t\t\t */\r\n\t\t\tthis.prf = getParametersValue(parameters, \"prf\", PBKDF2Params.defaultValues(\"prf\"));\r\n\t\t//endregion\r\n\r\n\t\t//region If input argument array contains \"schema\" for this object\r\n\t\tif(\"schema\" in parameters)\r\n\t\t\tthis.fromSchema(parameters.schema);\r\n\t\t//endregion\r\n\t}\r\n\t//**********************************************************************************\r\n\t/**\r\n\t * Return default values for all class members\r\n\t * @param {string} memberName String name for a class member\r\n\t */\r\n\tstatic defaultValues(memberName)\r\n\t{\r\n\t\tswitch(memberName)\r\n\t\t{\r\n\t\t\tcase \"salt\":\r\n\t\t\t\treturn {};\r\n\t\t\tcase \"iterationCount\":\r\n\t\t\t\treturn (-1);\r\n\t\t\tcase \"keyLength\":\r\n\t\t\t\treturn 0;\r\n\t\t\tcase \"prf\":\r\n\t\t\t\treturn new AlgorithmIdentifier({\r\n\t\t\t\t\talgorithmId: \"1.3.14.3.2.26\", // SHA-1\r\n\t\t\t\t\talgorithmParams: new asn1js.Null()\r\n\t\t\t\t});\r\n\t\t\tdefault:\r\n\t\t\t\tthrow new Error(`Invalid member name for PBKDF2Params class: ${memberName}`);\r\n\t\t}\r\n\t}\r\n\t//**********************************************************************************\r\n\t/**\r\n\t * Return value of pre-defined ASN.1 schema for current class\r\n\t *\r\n\t * ASN.1 schema:\r\n\t * ```asn1\r\n\t * PBKDF2-params ::= SEQUENCE {\r\n\t *    salt CHOICE {\r\n\t *        specified OCTET STRING,\r\n\t *        otherSource AlgorithmIdentifier },\r\n\t *  iterationCount INTEGER (1..MAX),\r\n\t *  keyLength INTEGER (1..MAX) OPTIONAL,\r\n\t *  prf AlgorithmIdentifier\r\n\t *    DEFAULT { algorithm hMAC-SHA1, parameters NULL } }\r\n\t * ```\r\n\t *\r\n\t * @param {Object} parameters Input parameters for the schema\r\n\t * @returns {Object} asn1js schema object\r\n\t */\r\n\tstatic schema(parameters = {})\r\n\t{\r\n\t\t/**\r\n\t\t * @type {Object}\r\n\t\t * @property {string} [blockName]\r\n\t\t * @property {string} [saltPrimitive]\r\n\t\t * @property {string} [saltConstructed]\r\n\t\t * @property {string} [iterationCount]\r\n\t\t * @property {string} [keyLength]\r\n\t\t * @property {string} [prf]\r\n\t\t */\r\n\t\tconst names = getParametersValue(parameters, \"names\", {});\r\n\r\n\t\treturn (new asn1js.Sequence({\r\n\t\t\tname: (names.blockName || \"\"),\r\n\t\t\tvalue: [\r\n\t\t\t\tnew asn1js.Choice({\r\n\t\t\t\t\tvalue: [\r\n\t\t\t\t\t\tnew asn1js.OctetString({ name: (names.saltPrimitive || \"\") }),\r\n\t\t\t\t\t\tAlgorithmIdentifier.schema(names.saltConstructed || {})\r\n\t\t\t\t\t]\r\n\t\t\t\t}),\r\n\t\t\t\tnew asn1js.Integer({ name: (names.iterationCount || \"\") }),\r\n\t\t\t\tnew asn1js.Integer({\r\n\t\t\t\t\tname: (names.keyLength || \"\"),\r\n\t\t\t\t\toptional: true\r\n\t\t\t\t}),\r\n\t\t\t\tAlgorithmIdentifier.schema(names.prf || {\r\n\t\t\t\t\tnames: {\r\n\t\t\t\t\t\toptional: true\r\n\t\t\t\t\t}\r\n\t\t\t\t})\r\n\t\t\t]\r\n\t\t}));\r\n\t}\r\n\t//**********************************************************************************\r\n\t/**\r\n\t * Convert parsed asn1js object into current class\r\n\t * @param {!Object} schema\r\n\t */\r\n\tfromSchema(schema)\r\n\t{\r\n\t\t//region Clear input data first\r\n\t\tclearProps(schema, [\r\n\t\t\t\"salt\",\r\n\t\t\t\"iterationCount\",\r\n\t\t\t\"keyLength\",\r\n\t\t\t\"prf\"\r\n\t\t]);\r\n\t\t//endregion\r\n\t\t\r\n\t\t//region Check the schema is valid\r\n\t\tconst asn1 = asn1js.compareSchema(schema,\r\n\t\t\tschema,\r\n\t\t\tPBKDF2Params.schema({\r\n\t\t\t\tnames: {\r\n\t\t\t\t\tsaltPrimitive: \"salt\",\r\n\t\t\t\t\tsaltConstructed: {\r\n\t\t\t\t\t\tnames: {\r\n\t\t\t\t\t\t\tblockName: \"salt\"\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t},\r\n\t\t\t\t\titerationCount: \"iterationCount\",\r\n\t\t\t\t\tkeyLength: \"keyLength\",\r\n\t\t\t\t\tprf: {\r\n\t\t\t\t\t\tnames: {\r\n\t\t\t\t\t\t\tblockName: \"prf\",\r\n\t\t\t\t\t\t\toptional: true\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t})\r\n\t\t);\r\n\r\n\t\tif(asn1.verified === false)\r\n\t\t\tthrow new Error(\"Object's schema was not verified against input data for PBKDF2Params\");\r\n\t\t//endregion\r\n\r\n\t\t//region Get internal properties from parsed schema\r\n\t\tthis.salt = asn1.result.salt;\r\n\t\tthis.iterationCount = asn1.result.iterationCount.valueBlock.valueDec;\r\n\r\n\t\tif(\"keyLength\" in asn1.result)\r\n\t\t\tthis.keyLength = asn1.result.keyLength.valueBlock.valueDec;\r\n\r\n\t\tif(\"prf\" in asn1.result)\r\n\t\t\tthis.prf = new AlgorithmIdentifier({ schema: asn1.result.prf });\r\n\t\t//endregion\r\n\t}\r\n\t//**********************************************************************************\r\n\t/**\r\n\t * Convert current object to asn1js object and set correct values\r\n\t * @returns {Object} asn1js object\r\n\t */\r\n\ttoSchema()\r\n\t{\r\n\t\t//region Create array for output sequence \r\n\t\tconst outputArray = [];\r\n\t\t\r\n\t\toutputArray.push(this.salt);\r\n\t\toutputArray.push(new asn1js.Integer({ value: this.iterationCount }));\r\n\t\t\r\n\t\tif(\"keyLength\" in this)\r\n\t\t{\r\n\t\t\tif(PBKDF2Params.defaultValues(\"keyLength\") !== this.keyLength)\r\n\t\t\t\toutputArray.push(new asn1js.Integer({ value: this.keyLength }));\r\n\t\t}\r\n\t\t\r\n\t\tif(\"prf\" in this)\r\n\t\t{\r\n\t\t\tif(PBKDF2Params.defaultValues(\"prf\").isEqual(this.prf) === false)\r\n\t\t\t\toutputArray.push(this.prf.toSchema());\r\n\t\t}\r\n\t\t//endregion \r\n\t\t\r\n\t\t//region Construct and return new ASN.1 schema for this object \r\n\t\treturn (new asn1js.Sequence({\r\n\t\t\tvalue: outputArray\r\n\t\t}));\r\n\t\t//endregion \r\n\t}\r\n\t//**********************************************************************************\r\n\t/**\r\n\t * Convertion for the class to JSON object\r\n\t * @returns {Object}\r\n\t */\r\n\ttoJSON()\r\n\t{\r\n\t\tconst _object = {\r\n\t\t\tsalt: this.salt.toJSON(),\r\n\t\t\titerationCount: this.iterationCount\r\n\t\t};\r\n\t\t\r\n\t\tif(\"keyLength\" in this)\r\n\t\t{\r\n\t\t\tif(PBKDF2Params.defaultValues(\"keyLength\") !== this.keyLength)\r\n\t\t\t\t_object.keyLength = this.keyLength;\r\n\t\t}\r\n\t\t\r\n\t\tif(\"prf\" in this)\r\n\t\t{\r\n\t\t\tif(PBKDF2Params.defaultValues(\"prf\").isEqual(this.prf) === false)\r\n\t\t\t\t_object.prf = this.prf.toJSON();\r\n\t\t}\r\n\r\n\t\treturn _object;\r\n\t}\r\n\t//**********************************************************************************\r\n}\r\n//**************************************************************************************\r\n"],"file":"PBKDF2Params.js"}