{"version":3,"sources":["../src/AuthenticatedSafe.js"],"names":["AuthenticatedSafe","constructor","parameters","safeContents","defaultValues","parsedValue","fromSchema","schema","memberName","Error","compareWithDefault","memberValue","length","Object","keys","names","asn1js","Sequence","name","blockName","value","Repeated","contentInfos","ContentInfo","asn1","compareSchema","verified","Array","from","result","element","toSchema","toJSON","parseInternalValues","Promise","reject","sequence","resolve","entries","index","content","contentType","OctetString","authSafeContent","ArrayBuffer","valueBlock","isConstructed","contentValue","valueHex","fromBER","offset","push","privacyMode","SafeContents","cmsEnveloped","EnvelopedData","recipientCertificate","recipientKey","then","decrypt","recipientPrivateKey","cmsEncrypted","EncryptedData","password","error","makeInternalValues","contentBuffer","toBER","currentParameters","contentToEncrypt","encrypt","encryptionAlgorithm","toLowerCase","addRecipientByCertificate","encryptingCertificate"],"mappings":"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","sourcesContent":["import * as asn1js from \"asn1js\";\r\nimport { getParametersValue, utilConcatBuf, clearProps } from \"pvutils\";\r\nimport ContentInfo from \"./ContentInfo.js\";\r\nimport SafeContents from \"./SafeContents.js\";\r\nimport EnvelopedData from \"./EnvelopedData.js\";\r\nimport EncryptedData from \"./EncryptedData.js\";\r\n//**************************************************************************************\r\n/**\r\n * Class from RFC7292\r\n */\r\nexport default class AuthenticatedSafe\r\n{\r\n\t//**********************************************************************************\r\n\t/**\r\n\t * Constructor for AuthenticatedSafe class\r\n\t * @param {Object} [parameters={}]\r\n\t * @param {Object} [parameters.schema] asn1js parsed value to initialize the class from\r\n\t */\r\n\tconstructor(parameters = {})\r\n\t{\r\n\t\t//region Internal properties of the object\r\n\t\t/**\r\n\t\t * @type {Array.<ContentInfo>}\r\n\t\t * @desc safeContents\r\n\t\t */\r\n\t\tthis.safeContents = getParametersValue(parameters, \"safeContents\", AuthenticatedSafe.defaultValues(\"safeContents\"));\r\n\r\n\t\tif(\"parsedValue\" in parameters)\r\n\t\t\t/**\r\n\t\t\t * @type {*}\r\n\t\t\t * @desc parsedValue\r\n\t\t\t */\r\n\t\t\tthis.parsedValue = getParametersValue(parameters, \"parsedValue\", AuthenticatedSafe.defaultValues(\"parsedValue\"));\r\n\t\t//endregion\r\n\t\t\r\n\t\t//region If input argument array contains \"schema\" for this object\r\n\t\tif(\"schema\" in parameters)\r\n\t\t\tthis.fromSchema(parameters.schema);\r\n\t\t//endregion\r\n\t}\r\n\t//**********************************************************************************\r\n\t/**\r\n\t * Return default values for all class members\r\n\t * @param {string} memberName String name for a class member\r\n\t */\r\n\tstatic defaultValues(memberName)\r\n\t{\r\n\t\tswitch(memberName)\r\n\t\t{\r\n\t\t\tcase \"safeContents\":\r\n\t\t\t\treturn [];\r\n\t\t\tcase \"parsedValue\":\r\n\t\t\t\treturn {};\r\n\t\t\tdefault:\r\n\t\t\t\tthrow new Error(`Invalid member name for AuthenticatedSafe class: ${memberName}`);\r\n\t\t}\r\n\t}\r\n\t//**********************************************************************************\r\n\t/**\r\n\t * Compare values with default values for all class members\r\n\t * @param {string} memberName String name for a class member\r\n\t * @param {*} memberValue Value to compare with default value\r\n\t */\r\n\tstatic compareWithDefault(memberName, memberValue)\r\n\t{\r\n\t\tswitch(memberName)\r\n\t\t{\r\n\t\t\tcase \"safeContents\":\r\n\t\t\t\treturn (memberValue.length === 0);\r\n\t\t\tcase \"parsedValue\":\r\n\t\t\t\treturn ((memberValue instanceof Object) && (Object.keys(memberValue).length === 0));\r\n\t\t\tdefault:\r\n\t\t\t\tthrow new Error(`Invalid member name for AuthenticatedSafe class: ${memberName}`);\r\n\t\t}\r\n\t}\r\n\t//**********************************************************************************\r\n\t/**\r\n\t * Return value of pre-defined ASN.1 schema for current class\r\n\t *\r\n\t * ASN.1 schema:\r\n\t * ```asn1\r\n\t * AuthenticatedSafe ::= SEQUENCE OF ContentInfo\r\n\t * -- Data if unencrypted\r\n\t * -- EncryptedData if password-encrypted\r\n\t * -- EnvelopedData if public key-encrypted\r\n\t * ```\r\n\t *\r\n\t * @param {Object} parameters Input parameters for the schema\r\n\t * @returns {Object} asn1js schema object\r\n\t */\r\n\tstatic schema(parameters = {})\r\n\t{\r\n\t\t/**\r\n\t\t * @type {Object}\r\n\t\t * @property {string} [blockName]\r\n\t\t * @property {string} [contentInfos]\r\n\t\t */\r\n\t\tconst names = getParametersValue(parameters, \"names\", {});\r\n\t\t\r\n\t\treturn (new asn1js.Sequence({\r\n\t\t\tname: (names.blockName || \"\"),\r\n\t\t\tvalue: [\r\n\t\t\t\tnew asn1js.Repeated({\r\n\t\t\t\t\tname: (names.contentInfos || \"\"),\r\n\t\t\t\t\tvalue: ContentInfo.schema()\r\n\t\t\t\t})\r\n\t\t\t]\r\n\t\t}));\r\n\t}\r\n\t//**********************************************************************************\r\n\t/**\r\n\t * Convert parsed asn1js object into current class\r\n\t * @param {!Object} schema\r\n\t */\r\n\tfromSchema(schema)\r\n\t{\r\n\t\t//region Clear input data first\r\n\t\tclearProps(schema, [\r\n\t\t\t\"contentInfos\"\r\n\t\t]);\r\n\t\t//endregion\r\n\t\t\r\n\t\t//region Check the schema is valid\r\n\t\tconst asn1 = asn1js.compareSchema(schema,\r\n\t\t\tschema,\r\n\t\t\tAuthenticatedSafe.schema({\r\n\t\t\t\tnames: {\r\n\t\t\t\t\tcontentInfos: \"contentInfos\"\r\n\t\t\t\t}\r\n\t\t\t})\r\n\t\t);\r\n\t\t\r\n\t\tif(asn1.verified === false)\r\n\t\t\tthrow new Error(\"Object's schema was not verified against input data for AuthenticatedSafe\");\r\n\t\t//endregion\r\n\t\t\r\n\t\t//region Get internal properties from parsed schema\r\n\t\tthis.safeContents = Array.from(asn1.result.contentInfos, element => new ContentInfo({ schema: element }));\r\n\t\t//endregion\r\n\t}\r\n\t//**********************************************************************************\r\n\t/**\r\n\t * Convert current object to asn1js object and set correct values\r\n\t * @returns {Object} asn1js object\r\n\t */\r\n\ttoSchema()\r\n\t{\r\n\t\t//region Construct and return new ASN.1 schema for this object\r\n\t\treturn (new asn1js.Sequence({\r\n\t\t\tvalue: Array.from(this.safeContents, element => element.toSchema())\r\n\t\t}));\r\n\t\t//endregion\r\n\t}\r\n\t//**********************************************************************************\r\n\t/**\r\n\t * Convertion for the class to JSON object\r\n\t * @returns {Object}\r\n\t */\r\n\ttoJSON()\r\n\t{\r\n\t\treturn {\r\n\t\t\tsafeContents: Array.from(this.safeContents, element => element.toJSON())\r\n\t\t};\r\n\t}\r\n\t//**********************************************************************************\r\n\tparseInternalValues(parameters)\r\n\t{\r\n\t\t//region Check input data from \"parameters\" \r\n\t\tif((parameters instanceof Object) === false)\r\n\t\t\treturn Promise.reject(\"The \\\"parameters\\\" must has \\\"Object\\\" type\");\r\n\t\t\r\n\t\tif((\"safeContents\" in parameters) === false)\r\n\t\t\treturn Promise.reject(\"Absent mandatory parameter \\\"safeContents\\\"\");\r\n\t\t\r\n\t\tif((parameters.safeContents instanceof Array) === false)\r\n\t\t\treturn Promise.reject(\"The \\\"parameters.safeContents\\\" must has \\\"Array\\\" type\");\r\n\t\t\r\n\t\tif(parameters.safeContents.length !== this.safeContents.length)\r\n\t\t\treturn Promise.reject(\"Length of \\\"parameters.safeContents\\\" must be equal to \\\"this.safeContents.length\\\"\");\r\n\t\t//endregion \r\n\t\t\r\n\t\t//region Initial variables \r\n\t\tlet sequence = Promise.resolve();\r\n\t\t//endregion\r\n\t\t\r\n\t\t//region Create value for \"this.parsedValue.authenticatedSafe\" \r\n\t\tthis.parsedValue = {\r\n\t\t\tsafeContents: []\r\n\t\t};\r\n\t\t\r\n\t\tfor(const [index, content] of this.safeContents.entries())\r\n\t\t{\r\n\t\t\tswitch(content.contentType)\r\n\t\t\t{\r\n\t\t\t\t//region data \r\n\t\t\t\tcase \"1.2.840.113549.1.7.1\":\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\t//region Check that we do have OCTETSTRING as \"content\"\r\n\t\t\t\t\t\tif((content.content instanceof asn1js.OctetString) === false)\r\n\t\t\t\t\t\t\treturn Promise.reject(\"Wrong type of \\\"this.safeContents[j].content\\\"\");\r\n\t\t\t\t\t\t//endregion\r\n\t\t\t\t\t\t\r\n\t\t\t\t\t\t//region Check we have \"constructive encoding\" for AuthSafe content\r\n\t\t\t\t\t\tlet authSafeContent = new ArrayBuffer(0);\r\n\t\t\t\t\t\t\r\n\t\t\t\t\t\tif(content.content.valueBlock.isConstructed)\r\n\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\tfor(const contentValue of content.content.valueBlock.value)\r\n\t\t\t\t\t\t\t\tauthSafeContent = utilConcatBuf(authSafeContent, contentValue.valueBlock.valueHex);\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\telse\r\n\t\t\t\t\t\t\tauthSafeContent = content.content.valueBlock.valueHex;\r\n\t\t\t\t\t\t//endregion\r\n\t\t\t\t\t\t\r\n\t\t\t\t\t\t//region Parse internal ASN.1 data\r\n\t\t\t\t\t\tconst asn1 = asn1js.fromBER(authSafeContent);\r\n\t\t\t\t\t\tif(asn1.offset === (-1))\r\n\t\t\t\t\t\t\treturn Promise.reject(\"Error during parsing of ASN.1 data inside \\\"content.content\\\"\");\r\n\t\t\t\t\t\t//endregion\r\n\t\t\t\t\t\t\r\n\t\t\t\t\t\t//region Finilly initialize initial values of \"SafeContents\" type\r\n\t\t\t\t\t\tthis.parsedValue.safeContents.push({\r\n\t\t\t\t\t\t\tprivacyMode: 0, // No privacy, clear data\r\n\t\t\t\t\t\t\tvalue: new SafeContents({ schema: asn1.result })\r\n\t\t\t\t\t\t});\r\n\t\t\t\t\t\t//endregion\r\n\t\t\t\t\t}\r\n\t\t\t\t\tbreak;\r\n\t\t\t\t//endregion \r\n\t\t\t\t//region envelopedData \r\n\t\t\t\tcase \"1.2.840.113549.1.7.3\":\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\t//region Initial variables\r\n\t\t\t\t\t\tconst cmsEnveloped = new EnvelopedData({ schema: content.content });\r\n\t\t\t\t\t\t//endregion\r\n\t\t\t\t\t\t\r\n\t\t\t\t\t\t//region Check mandatory parameters\r\n\t\t\t\t\t\tif((\"recipientCertificate\" in parameters.safeContents[index]) === false)\r\n\t\t\t\t\t\t\treturn Promise.reject(\"Absent mandatory parameter \\\"recipientCertificate\\\" in \\\"parameters.safeContents[j]\\\"\");\r\n\t\t\t\t\t\t\r\n\t\t\t\t\t\tconst recipientCertificate = parameters.safeContents[index].recipientCertificate;\r\n\t\t\t\t\t\t\r\n\t\t\t\t\t\tif((\"recipientKey\" in parameters.safeContents[index]) === false)\r\n\t\t\t\t\t\t\treturn Promise.reject(\"Absent mandatory parameter \\\"recipientKey\\\" in \\\"parameters.safeContents[j]\\\"\");\r\n\t\t\t\t\t\t\r\n\t\t\t\t\t\t// noinspection JSUnresolvedVariable\r\n\t\t\t\t\t\tconst recipientKey = parameters.safeContents[index].recipientKey;\r\n\t\t\t\t\t\t//endregion\r\n\t\t\t\t\t\t\r\n\t\t\t\t\t\t//region Decrypt CMS EnvelopedData using first recipient information\r\n\t\t\t\t\t\tsequence = sequence.then(\r\n\t\t\t\t\t\t\t() => cmsEnveloped.decrypt(0, {\r\n\t\t\t\t\t\t\t\trecipientCertificate,\r\n\t\t\t\t\t\t\t\trecipientPrivateKey: recipientKey\r\n\t\t\t\t\t\t\t})\r\n\t\t\t\t\t\t);\r\n\t\t\t\t\t\t\r\n\t\t\t\t\t\tsequence = sequence.then(\r\n\t\t\t\t\t\t\t/**\r\n\t\t\t\t\t\t\t * @param {ArrayBuffer} result\r\n\t\t\t\t\t\t\t */\r\n\t\t\t\t\t\t\tresult =>\r\n\t\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\t\tconst asn1 = asn1js.fromBER(result);\r\n\t\t\t\t\t\t\t\tif(asn1.offset === (-1))\r\n\t\t\t\t\t\t\t\t\treturn Promise.reject(\"Error during parsing of decrypted data\");\r\n\t\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\t\tthis.parsedValue.safeContents.push({\r\n\t\t\t\t\t\t\t\t\tprivacyMode: 2, // Public-key privacy mode\r\n\t\t\t\t\t\t\t\t\tvalue: new SafeContents({ schema: asn1.result })\r\n\t\t\t\t\t\t\t\t});\r\n\t\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\t\treturn Promise.resolve();\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t);\r\n\t\t\t\t\t\t//endregion\r\n\t\t\t\t\t}\r\n\t\t\t\t\tbreak;\r\n\t\t\t\t//endregion   \r\n\t\t\t\t//region encryptedData \r\n\t\t\t\tcase \"1.2.840.113549.1.7.6\":\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\t//region Initial variables\r\n\t\t\t\t\t\tconst cmsEncrypted = new EncryptedData({ schema: content.content });\r\n\t\t\t\t\t\t//endregion\r\n\t\t\t\t\t\t\r\n\t\t\t\t\t\t//region Check mandatory parameters\r\n\t\t\t\t\t\tif((\"password\" in parameters.safeContents[index]) === false)\r\n\t\t\t\t\t\t\treturn Promise.reject(\"Absent mandatory parameter \\\"password\\\" in \\\"parameters.safeContents[j]\\\"\");\r\n\t\t\t\t\t\t\r\n\t\t\t\t\t\tconst password = parameters.safeContents[index].password;\r\n\t\t\t\t\t\t//endregion\r\n\t\t\t\t\t\t\r\n\t\t\t\t\t\t//region Decrypt CMS EncryptedData using password\r\n\t\t\t\t\t\tsequence = sequence.then(\r\n\t\t\t\t\t\t\t() => cmsEncrypted.decrypt({\r\n\t\t\t\t\t\t\t\tpassword\r\n\t\t\t\t\t\t\t}),\r\n\t\t\t\t\t\t\terror => Promise.reject(error)\r\n\t\t\t\t\t\t);\r\n\t\t\t\t\t\t//endregion\r\n\t\t\t\t\t\t\r\n\t\t\t\t\t\t//region Initialize internal data\r\n\t\t\t\t\t\tsequence = sequence.then(\r\n\t\t\t\t\t\t\t/**\r\n\t\t\t\t\t\t\t * @param {ArrayBuffer} result\r\n\t\t\t\t\t\t\t */\r\n\t\t\t\t\t\t\tresult =>\r\n\t\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\t\tconst asn1 = asn1js.fromBER(result);\r\n\t\t\t\t\t\t\t\tif(asn1.offset === (-1))\r\n\t\t\t\t\t\t\t\t\treturn Promise.reject(\"Error during parsing of decrypted data\");\r\n\t\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\t\tthis.parsedValue.safeContents.push({\r\n\t\t\t\t\t\t\t\t\tprivacyMode: 1, // Password-based privacy mode\r\n\t\t\t\t\t\t\t\t\tvalue: new SafeContents({ schema: asn1.result })\r\n\t\t\t\t\t\t\t\t});\r\n\t\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\t\treturn Promise.resolve();\r\n\t\t\t\t\t\t\t},\r\n\t\t\t\t\t\t\terror => Promise.reject(error)\r\n\t\t\t\t\t\t);\r\n\t\t\t\t\t\t//endregion\r\n\t\t\t\t\t}\r\n\t\t\t\t\tbreak;\r\n\t\t\t\t//endregion   \r\n\t\t\t\t//region default \r\n\t\t\t\tdefault:\r\n\t\t\t\t\tthrow new Error(`Unknown \"contentType\" for AuthenticatedSafe: \" ${content.contentType}`);\r\n\t\t\t\t//endregion \r\n\t\t\t}\r\n\t\t}\r\n\t\t//endregion \r\n\t\t\r\n\t\treturn sequence;\r\n\t}\r\n\t//**********************************************************************************\r\n\tmakeInternalValues(parameters)\r\n\t{\r\n\t\t//region Check data in \"parsedValue\" \r\n\t\tif((\"parsedValue\" in this) === false)\r\n\t\t\treturn Promise.reject(\"Please run \\\"parseValues\\\" first or add \\\"parsedValue\\\" manually\");\r\n\t\t\r\n\t\tif((this.parsedValue instanceof Object) === false)\r\n\t\t\treturn Promise.reject(\"The \\\"this.parsedValue\\\" must has \\\"Object\\\" type\");\r\n\t\t\r\n\t\tif((this.parsedValue.safeContents instanceof Array) === false)\r\n\t\t\treturn Promise.reject(\"The \\\"this.parsedValue.safeContents\\\" must has \\\"Array\\\" type\");\r\n\t\t//endregion \r\n\t\t\r\n\t\t//region Check input data from \"parameters\" \r\n\t\tif((parameters instanceof Object) === false)\r\n\t\t\treturn Promise.reject(\"The \\\"parameters\\\" must has \\\"Object\\\" type\");\r\n\t\t\r\n\t\tif((\"safeContents\" in parameters) === false)\r\n\t\t\treturn Promise.reject(\"Absent mandatory parameter \\\"safeContents\\\"\");\r\n\t\t\r\n\t\tif((parameters.safeContents instanceof Array) === false)\r\n\t\t\treturn Promise.reject(\"The \\\"parameters.safeContents\\\" must has \\\"Array\\\" type\");\r\n\t\t\r\n\t\tif(parameters.safeContents.length !== this.parsedValue.safeContents.length)\r\n\t\t\treturn Promise.reject(\"Length of \\\"parameters.safeContents\\\" must be equal to \\\"this.parsedValue.safeContents\\\"\");\r\n\t\t//endregion \r\n\t\t\r\n\t\t//region Initial variables \r\n\t\tlet sequence = Promise.resolve();\r\n\t\t//endregion\r\n\t\t\r\n\t\t//region Create internal values from already parsed values \r\n\t\tthis.safeContents = [];\r\n\t\t\r\n\t\tfor(const [index, content] of this.parsedValue.safeContents.entries())\r\n\t\t{\r\n\t\t\t//region Check current \"content\" value\r\n\t\t\tif((\"privacyMode\" in content) === false)\r\n\t\t\t\treturn Promise.reject(\"The \\\"privacyMode\\\" is a mandatory parameter for \\\"content\\\"\");\r\n\t\t\t\r\n\t\t\tif((\"value\" in content) === false)\r\n\t\t\t\treturn Promise.reject(\"The \\\"value\\\" is a mandatory parameter for \\\"content\\\"\");\r\n\t\t\t\r\n\t\t\tif((content.value instanceof SafeContents) === false)\r\n\t\t\t\treturn Promise.reject(\"The \\\"content.value\\\" must has \\\"SafeContents\\\" type\");\r\n\t\t\t//endregion \r\n\t\t\t\r\n\t\t\tswitch(content.privacyMode)\r\n\t\t\t{\r\n\t\t\t\t//region No privacy \r\n\t\t\t\tcase 0:\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\tconst contentBuffer = content.value.toSchema().toBER(false);\r\n\t\t\t\t\t\t\r\n\t\t\t\t\t\tsequence = sequence.then(\r\n\t\t\t\t\t\t\t() =>\r\n\t\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\t\tthis.safeContents.push(new ContentInfo({\r\n\t\t\t\t\t\t\t\t\tcontentType: \"1.2.840.113549.1.7.1\",\r\n\t\t\t\t\t\t\t\t\tcontent: new asn1js.OctetString({ valueHex: contentBuffer })\r\n\t\t\t\t\t\t\t\t}));\r\n\t\t\t\t\t\t\t});\r\n\t\t\t\t\t}\r\n\t\t\t\t\tbreak;\r\n\t\t\t\t//endregion \r\n\t\t\t\t//region Privacy with password\r\n\t\t\t\tcase 1:\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\t//region Initial variables\r\n\t\t\t\t\t\tconst cmsEncrypted = new EncryptedData();\r\n\t\t\t\t\t\t\r\n\t\t\t\t\t\tconst currentParameters = parameters.safeContents[index];\r\n\t\t\t\t\t\tcurrentParameters.contentToEncrypt = content.value.toSchema().toBER(false);\r\n\t\t\t\t\t\t//endregion\r\n\t\t\t\t\t\t\r\n\t\t\t\t\t\t//region Encrypt CMS EncryptedData using password\r\n\t\t\t\t\t\tsequence = sequence.then(\r\n\t\t\t\t\t\t\t() => cmsEncrypted.encrypt(currentParameters),\r\n\t\t\t\t\t\t\terror => Promise.reject(error)\r\n\t\t\t\t\t\t);\r\n\t\t\t\t\t\t//endregion\r\n\t\t\t\t\t\t\r\n\t\t\t\t\t\t//region Store result content in CMS_CONTENT_INFO type\r\n\t\t\t\t\t\tsequence = sequence.then(\r\n\t\t\t\t\t\t\t() =>\r\n\t\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\t\tthis.safeContents.push(new ContentInfo({\r\n\t\t\t\t\t\t\t\t\tcontentType: \"1.2.840.113549.1.7.6\",\r\n\t\t\t\t\t\t\t\t\tcontent: cmsEncrypted.toSchema()\r\n\t\t\t\t\t\t\t\t}));\r\n\t\t\t\t\t\t\t},\r\n\t\t\t\t\t\t\terror => Promise.reject(error)\r\n\t\t\t\t\t\t);\r\n\t\t\t\t\t\t//endregion\r\n\t\t\t\t\t}\r\n\t\t\t\t\tbreak;\r\n\t\t\t\t//endregion \r\n\t\t\t\t//region Privacy with public key\r\n\t\t\t\tcase 2:\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\t//region Initial variables\r\n\t\t\t\t\t\tconst cmsEnveloped = new EnvelopedData();\r\n\t\t\t\t\t\tconst contentToEncrypt = content.value.toSchema().toBER(false);\r\n\t\t\t\t\t\t//endregion\r\n\t\t\t\t\t\t\r\n\t\t\t\t\t\t//region Check mandatory parameters\r\n\t\t\t\t\t\tif((\"encryptingCertificate\" in parameters.safeContents[index]) === false)\r\n\t\t\t\t\t\t\treturn Promise.reject(\"Absent mandatory parameter \\\"encryptingCertificate\\\" in \\\"parameters.safeContents[i]\\\"\");\r\n\t\t\t\t\t\t\r\n\t\t\t\t\t\tif((\"encryptionAlgorithm\" in parameters.safeContents[index]) === false)\r\n\t\t\t\t\t\t\treturn Promise.reject(\"Absent mandatory parameter \\\"encryptionAlgorithm\\\" in \\\"parameters.safeContents[i]\\\"\");\r\n\t\t\t\t\t\t\r\n\t\t\t\t\t\tswitch(true)\r\n\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\tcase (parameters.safeContents[index].encryptionAlgorithm.name.toLowerCase() === \"aes-cbc\"):\r\n\t\t\t\t\t\t\tcase (parameters.safeContents[index].encryptionAlgorithm.name.toLowerCase() === \"aes-gcm\"):\r\n\t\t\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t\t\tdefault:\r\n\t\t\t\t\t\t\t\treturn Promise.reject(`Incorrect parameter \"encryptionAlgorithm\" in \"parameters.safeContents[i]\": ${parameters.safeContents[index].encryptionAlgorithm}`);\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\r\n\t\t\t\t\t\tswitch(true)\r\n\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\tcase (parameters.safeContents[index].encryptionAlgorithm.length === 128):\r\n\t\t\t\t\t\t\tcase (parameters.safeContents[index].encryptionAlgorithm.length === 192):\r\n\t\t\t\t\t\t\tcase (parameters.safeContents[index].encryptionAlgorithm.length === 256):\r\n\t\t\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t\t\tdefault:\r\n\t\t\t\t\t\t\t\treturn Promise.reject(`Incorrect parameter \"encryptionAlgorithm.length\" in \"parameters.safeContents[i]\": ${parameters.safeContents[index].encryptionAlgorithm.length}`);\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\t//endregion\r\n\t\t\t\t\t\t\r\n\t\t\t\t\t\t//region Making correct \"encryptionAlgorithm\" variable\r\n\t\t\t\t\t\tconst encryptionAlgorithm = parameters.safeContents[index].encryptionAlgorithm;\r\n\t\t\t\t\t\t//endregion\r\n\t\t\t\t\t\t\r\n\t\t\t\t\t\t//region Append recipient for enveloped data\r\n\t\t\t\t\t\tcmsEnveloped.addRecipientByCertificate(parameters.safeContents[index].encryptingCertificate);\r\n\t\t\t\t\t\t//endregion\r\n\t\t\t\t\t\t\r\n\t\t\t\t\t\t//region Making encryption\r\n\t\t\t\t\t\tsequence = sequence.then(\r\n\t\t\t\t\t\t\t() => cmsEnveloped.encrypt(encryptionAlgorithm, contentToEncrypt)\r\n\t\t\t\t\t\t);\r\n\t\t\t\t\t\t\r\n\t\t\t\t\t\tsequence = sequence.then(\r\n\t\t\t\t\t\t\t() =>\r\n\t\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\t\tthis.safeContents.push(new ContentInfo({\r\n\t\t\t\t\t\t\t\t\tcontentType: \"1.2.840.113549.1.7.3\",\r\n\t\t\t\t\t\t\t\t\tcontent: cmsEnveloped.toSchema()\r\n\t\t\t\t\t\t\t\t}));\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t);\r\n\t\t\t\t\t\t//endregion\r\n\t\t\t\t\t}\r\n\t\t\t\t\tbreak;\r\n\t\t\t\t//endregion \r\n\t\t\t\t//region default \r\n\t\t\t\tdefault:\r\n\t\t\t\t\treturn Promise.reject(`Incorrect value for \"content.privacyMode\": ${content.privacyMode}`);\r\n\t\t\t\t//endregion \r\n\t\t\t}\r\n\t\t}\r\n\t\t//endregion \r\n\t\t\r\n\t\t//region Return result of the function \r\n\t\treturn sequence.then(\r\n\t\t\t() => this,\r\n\t\t\terror => Promise.reject(`Error during parsing: ${error}`)\r\n\t\t);\r\n\t\t//endregion   \r\n\t}\r\n\t//**********************************************************************************\r\n}\r\n//**************************************************************************************\r\n"],"file":"AuthenticatedSafe.js"}