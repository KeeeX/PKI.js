{"version":3,"sources":["../src/PolicyConstraints.js"],"names":["PolicyConstraints","constructor","parameters","requireExplicitPolicy","defaultValues","inhibitPolicyMapping","fromSchema","schema","memberName","Error","names","asn1js","Sequence","name","blockName","value","Primitive","optional","idBlock","tagClass","tagNumber","asn1","compareSchema","verified","result","field1","ber1","toBER","int1","fromBER","valueBlock","valueDec","field2","ber2","int2","toSchema","outputArray","Integer","push","toJSON","object"],"mappings":"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","sourcesContent":["import * as asn1js from \"asn1js\";\r\nimport { getParametersValue, clearProps } from \"pvutils\";\r\n//**************************************************************************************\r\n/**\r\n * Class from RFC5280\r\n */\r\nexport default class PolicyConstraints\r\n{\r\n\t//**********************************************************************************\r\n\t/**\r\n\t * Constructor for PolicyConstraints class\r\n\t * @param {Object} [parameters={}]\r\n\t * @param {Object} [parameters.schema] asn1js parsed value to initialize the class from\r\n\t */\r\n\tconstructor(parameters = {})\r\n\t{\r\n\t\t//region Internal properties of the object\r\n\t\tif(\"requireExplicitPolicy\" in parameters)\r\n\t\t\t/**\r\n\t\t\t * @type {number}\r\n\t\t\t * @desc requireExplicitPolicy\r\n\t\t\t */\r\n\t\t\tthis.requireExplicitPolicy = getParametersValue(parameters, \"requireExplicitPolicy\", PolicyConstraints.defaultValues(\"requireExplicitPolicy\"));\r\n\r\n\t\tif(\"inhibitPolicyMapping\" in parameters)\r\n\t\t\t/**\r\n\t\t\t * @type {number}\r\n\t\t\t * @desc Value of the TIME class\r\n\t\t\t */\r\n\t\t\tthis.inhibitPolicyMapping = getParametersValue(parameters, \"inhibitPolicyMapping\", PolicyConstraints.defaultValues(\"inhibitPolicyMapping\"));\r\n\t\t//endregion\r\n\r\n\t\t//region If input argument array contains \"schema\" for this object\r\n\t\tif(\"schema\" in parameters)\r\n\t\t\tthis.fromSchema(parameters.schema);\r\n\t\t//endregion\r\n\t}\r\n\t//**********************************************************************************\r\n\t/**\r\n\t * Return default values for all class members\r\n\t * @param {string} memberName String name for a class member\r\n\t */\r\n\tstatic defaultValues(memberName)\r\n\t{\r\n\t\tswitch(memberName)\r\n\t\t{\r\n\t\t\tcase \"requireExplicitPolicy\":\r\n\t\t\t\treturn 0;\r\n\t\t\tcase \"inhibitPolicyMapping\":\r\n\t\t\t\treturn 0;\r\n\t\t\tdefault:\r\n\t\t\t\tthrow new Error(`Invalid member name for PolicyConstraints class: ${memberName}`);\r\n\t\t}\r\n\t}\r\n\t//**********************************************************************************\r\n\t/**\r\n\t * Return value of pre-defined ASN.1 schema for current class\r\n\t *\r\n\t * ASN.1 schema:\r\n\t * ```asn1\r\n\t * PolicyConstraints ::= SEQUENCE {\r\n\t *    requireExplicitPolicy           [0] SkipCerts OPTIONAL,\r\n\t *    inhibitPolicyMapping            [1] SkipCerts OPTIONAL }\r\n\t *\r\n\t * SkipCerts ::= INTEGER (0..MAX)\r\n\t * ```\r\n\t *\r\n\t * @param {Object} parameters Input parameters for the schema\r\n\t * @returns {Object} asn1js schema object\r\n\t */\r\n\tstatic schema(parameters = {})\r\n\t{\r\n\t\t/**\r\n\t\t * @type {Object}\r\n\t\t * @property {string} [blockName]\r\n\t\t * @property {string} [requireExplicitPolicy]\r\n\t\t * @property {string} [inhibitPolicyMapping]\r\n\t\t */\r\n\t\tconst names = getParametersValue(parameters, \"names\", {});\r\n\r\n\t\treturn (new asn1js.Sequence({\r\n\t\t\tname: (names.blockName || \"\"),\r\n\t\t\tvalue: [\r\n\t\t\t\tnew asn1js.Primitive({\r\n\t\t\t\t\tname: (names.requireExplicitPolicy || \"\"),\r\n\t\t\t\t\toptional: true,\r\n\t\t\t\t\tidBlock: {\r\n\t\t\t\t\t\ttagClass: 3, // CONTEXT-SPECIFIC\r\n\t\t\t\t\t\ttagNumber: 0 // [0]\r\n\t\t\t\t\t}\r\n\t\t\t\t}), // IMPLICIT integer value\r\n\t\t\t\tnew asn1js.Primitive({\r\n\t\t\t\t\tname: (names.inhibitPolicyMapping || \"\"),\r\n\t\t\t\t\toptional: true,\r\n\t\t\t\t\tidBlock: {\r\n\t\t\t\t\t\ttagClass: 3, // CONTEXT-SPECIFIC\r\n\t\t\t\t\t\ttagNumber: 1 // [1]\r\n\t\t\t\t\t}\r\n\t\t\t\t}) // IMPLICIT integer value\r\n\t\t\t]\r\n\t\t}));\r\n\t}\r\n\t//**********************************************************************************\r\n\t/**\r\n\t * Convert parsed asn1js object into current class\r\n\t * @param {!Object} schema\r\n\t */\r\n\tfromSchema(schema)\r\n\t{\r\n\t\t//region Clear input data first\r\n\t\tclearProps(schema, [\r\n\t\t\t\"requireExplicitPolicy\",\r\n\t\t\t\"inhibitPolicyMapping\"\r\n\t\t]);\r\n\t\t//endregion\r\n\t\t\r\n\t\t//region Check the schema is valid\r\n\t\tconst asn1 = asn1js.compareSchema(schema,\r\n\t\t\tschema,\r\n\t\t\tPolicyConstraints.schema({\r\n\t\t\t\tnames: {\r\n\t\t\t\t\trequireExplicitPolicy: \"requireExplicitPolicy\",\r\n\t\t\t\t\tinhibitPolicyMapping: \"inhibitPolicyMapping\"\r\n\t\t\t\t}\r\n\t\t\t})\r\n\t\t);\r\n\r\n\t\tif(asn1.verified === false)\r\n\t\t\tthrow new Error(\"Object's schema was not verified against input data for PolicyConstraints\");\r\n\t\t//endregion\r\n\r\n\t\t//region Get internal properties from parsed schema\r\n\t\tif(\"requireExplicitPolicy\" in asn1.result)\r\n\t\t{\r\n\t\t\tconst field1 = asn1.result.requireExplicitPolicy;\r\n\r\n\t\t\tfield1.idBlock.tagClass = 1; // UNIVERSAL\r\n\t\t\tfield1.idBlock.tagNumber = 2; // INTEGER\r\n\r\n\t\t\tconst ber1 = field1.toBER(false);\r\n\t\t\tconst int1 = asn1js.fromBER(ber1);\r\n\r\n\t\t\tthis.requireExplicitPolicy = int1.result.valueBlock.valueDec;\r\n\t\t}\r\n\r\n\t\tif(\"inhibitPolicyMapping\" in asn1.result)\r\n\t\t{\r\n\t\t\tconst field2 = asn1.result.inhibitPolicyMapping;\r\n\r\n\t\t\tfield2.idBlock.tagClass = 1; // UNIVERSAL\r\n\t\t\tfield2.idBlock.tagNumber = 2; // INTEGER\r\n\r\n\t\t\tconst ber2 = field2.toBER(false);\r\n\t\t\tconst int2 = asn1js.fromBER(ber2);\r\n\r\n\t\t\tthis.inhibitPolicyMapping = int2.result.valueBlock.valueDec;\r\n\t\t}\r\n\t\t//endregion\r\n\t}\r\n\t//**********************************************************************************\r\n\t/**\r\n\t * Convert current object to asn1js object and set correct values\r\n\t * @returns {Object} asn1js object\r\n\t */\r\n\ttoSchema()\r\n\t{\r\n\t\t//region Create correct values for output sequence\r\n\t\tconst outputArray = [];\r\n\t\t\r\n\t\tif(\"requireExplicitPolicy\" in this)\r\n\t\t{\r\n\t\t\tconst int1 = new asn1js.Integer({ value: this.requireExplicitPolicy });\r\n\t\t\t\r\n\t\t\tint1.idBlock.tagClass = 3; // CONTEXT-SPECIFIC\r\n\t\t\tint1.idBlock.tagNumber = 0; // [0]\r\n\t\t\t\r\n\t\t\toutputArray.push(int1);\r\n\t\t}\r\n\t\t\r\n\t\tif(\"inhibitPolicyMapping\" in this)\r\n\t\t{\r\n\t\t\tconst int2 = new asn1js.Integer({ value: this.inhibitPolicyMapping });\r\n\t\t\t\r\n\t\t\tint2.idBlock.tagClass = 3; // CONTEXT-SPECIFIC\r\n\t\t\tint2.idBlock.tagNumber = 1; // [1]\r\n\t\t\t\r\n\t\t\toutputArray.push(int2);\r\n\t\t}\r\n\t\t//endregion\r\n\t\t\r\n\t\t//region Construct and return new ASN.1 schema for this object\r\n\t\treturn (new asn1js.Sequence({\r\n\t\t\tvalue: outputArray\r\n\t\t}));\r\n\t\t//endregion\r\n\t}\r\n\t//**********************************************************************************\r\n\t/**\r\n\t * Convertion for the class to JSON object\r\n\t * @returns {Object}\r\n\t */\r\n\ttoJSON()\r\n\t{\r\n\t\tconst object = {};\r\n\r\n\t\tif(\"requireExplicitPolicy\" in this)\r\n\t\t\tobject.requireExplicitPolicy = this.requireExplicitPolicy;\r\n\r\n\t\tif(\"inhibitPolicyMapping\" in this)\r\n\t\t\tobject.inhibitPolicyMapping = this.inhibitPolicyMapping;\r\n\r\n\t\treturn object;\r\n\t}\r\n\t//**********************************************************************************\r\n}\r\n//**************************************************************************************\r\n"],"file":"PolicyConstraints.js"}