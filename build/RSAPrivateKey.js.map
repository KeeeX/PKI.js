{"version":3,"sources":["../src/RSAPrivateKey.js"],"names":["RSAPrivateKey","constructor","parameters","version","defaultValues","modulus","publicExponent","privateExponent","prime1","prime2","exponent1","exponent2","coefficient","otherPrimeInfos","fromSchema","schema","fromJSON","json","memberName","asn1js","Integer","Error","names","Sequence","name","blockName","value","optional","Repeated","otherPrimeInfosName","OtherPrimeInfo","otherPrimeInfo","asn1","compareSchema","verified","result","valueBlock","valueDec","convertFromDER","Array","from","element","toSchema","outputArray","push","convertToDER","toJSON","jwk","n","valueHex","e","d","p","q","dp","dq","qi","oth"],"mappings":"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","sourcesContent":["import * as asn1js from \"asn1js\";\r\nimport { getParametersValue, toBase64, arrayBufferToString, stringToArrayBuffer, fromBase64, clearProps } from \"pvutils\";\r\nimport OtherPrimeInfo from \"./OtherPrimeInfo.js\";\r\n//**************************************************************************************\r\n/**\r\n * Class from RFC3447\r\n */\r\nexport default class RSAPrivateKey\r\n{\r\n\t//**********************************************************************************\r\n\t/**\r\n\t * Constructor for RSAPrivateKey class\r\n\t * @param {Object} [parameters={}]\r\n\t * @param {Object} [parameters.schema] asn1js parsed value to initialize the class from\r\n\t */\r\n\tconstructor(parameters = {})\r\n\t{\r\n\t\t//region Internal properties of the object\r\n\t\t/**\r\n\t\t * @type {number}\r\n\t\t * @desc version\r\n\t\t */\r\n\t\tthis.version = getParametersValue(parameters, \"version\", RSAPrivateKey.defaultValues(\"version\"));\r\n\t\t/**\r\n\t\t * @type {Integer}\r\n\t\t * @desc modulus\r\n\t\t */\r\n\t\tthis.modulus = getParametersValue(parameters, \"modulus\", RSAPrivateKey.defaultValues(\"modulus\"));\r\n\t\t/**\r\n\t\t * @type {Integer}\r\n\t\t * @desc publicExponent\r\n\t\t */\r\n\t\tthis.publicExponent = getParametersValue(parameters, \"publicExponent\", RSAPrivateKey.defaultValues(\"publicExponent\"));\r\n\t\t/**\r\n\t\t * @type {Integer}\r\n\t\t * @desc privateExponent\r\n\t\t */\r\n\t\tthis.privateExponent = getParametersValue(parameters, \"privateExponent\", RSAPrivateKey.defaultValues(\"privateExponent\"));\r\n\t\t/**\r\n\t\t * @type {Integer}\r\n\t\t * @desc prime1\r\n\t\t */\r\n\t\tthis.prime1 = getParametersValue(parameters, \"prime1\", RSAPrivateKey.defaultValues(\"prime1\"));\r\n\t\t/**\r\n\t\t * @type {Integer}\r\n\t\t * @desc prime2\r\n\t\t */\r\n\t\tthis.prime2 = getParametersValue(parameters, \"prime2\", RSAPrivateKey.defaultValues(\"prime2\"));\r\n\t\t/**\r\n\t\t * @type {Integer}\r\n\t\t * @desc exponent1\r\n\t\t */\r\n\t\tthis.exponent1 = getParametersValue(parameters, \"exponent1\", RSAPrivateKey.defaultValues(\"exponent1\"));\r\n\t\t/**\r\n\t\t * @type {Integer}\r\n\t\t * @desc exponent2\r\n\t\t */\r\n\t\tthis.exponent2 = getParametersValue(parameters, \"exponent2\", RSAPrivateKey.defaultValues(\"exponent2\"));\r\n\t\t/**\r\n\t\t * @type {Integer}\r\n\t\t * @desc coefficient\r\n\t\t */\r\n\t\tthis.coefficient = getParametersValue(parameters, \"coefficient\", RSAPrivateKey.defaultValues(\"coefficient\"));\r\n\r\n\t\tif(\"otherPrimeInfos\" in parameters)\r\n\t\t\t/**\r\n\t\t\t * @type {Array.<OtherPrimeInfo>}\r\n\t\t\t * @desc otherPrimeInfos\r\n\t\t\t */\r\n\t\t\tthis.otherPrimeInfos = getParametersValue(parameters, \"otherPrimeInfos\", RSAPrivateKey.defaultValues(\"otherPrimeInfos\"));\r\n\t\t//endregion\r\n\r\n\t\t//region If input argument array contains \"schema\" for this object\r\n\t\tif(\"schema\" in parameters)\r\n\t\t\tthis.fromSchema(parameters.schema);\r\n\t\t//endregion\r\n\t\t//region If input argument array contains \"json\" for this object\r\n\t\tif(\"json\" in parameters)\r\n\t\t\tthis.fromJSON(parameters.json);\r\n\t\t//endregion\r\n\t}\r\n\t//**********************************************************************************\r\n\t/**\r\n\t * Return default values for all class members\r\n\t * @param {string} memberName String name for a class member\r\n\t */\r\n\tstatic defaultValues(memberName)\r\n\t{\r\n\t\tswitch(memberName)\r\n\t\t{\r\n\t\t\tcase \"version\":\r\n\t\t\t\treturn 0;\r\n\t\t\tcase \"modulus\":\r\n\t\t\t\treturn new asn1js.Integer();\r\n\t\t\tcase \"publicExponent\":\r\n\t\t\t\treturn new asn1js.Integer();\r\n\t\t\tcase \"privateExponent\":\r\n\t\t\t\treturn new asn1js.Integer();\r\n\t\t\tcase \"prime1\":\r\n\t\t\t\treturn new asn1js.Integer();\r\n\t\t\tcase \"prime2\":\r\n\t\t\t\treturn new asn1js.Integer();\r\n\t\t\tcase \"exponent1\":\r\n\t\t\t\treturn new asn1js.Integer();\r\n\t\t\tcase \"exponent2\":\r\n\t\t\t\treturn new asn1js.Integer();\r\n\t\t\tcase \"coefficient\":\r\n\t\t\t\treturn new asn1js.Integer();\r\n\t\t\tcase \"otherPrimeInfos\":\r\n\t\t\t\treturn [];\r\n\t\t\tdefault:\r\n\t\t\t\tthrow new Error(`Invalid member name for RSAPrivateKey class: ${memberName}`);\r\n\t\t}\r\n\t}\r\n\t//**********************************************************************************\r\n\t/**\r\n\t * Return value of pre-defined ASN.1 schema for current class\r\n\t *\r\n\t * ASN.1 schema:\r\n\t * ```asn1\r\n\t * RSAPrivateKey ::= Sequence {\r\n\t *    version           Version,\r\n\t *    modulus           Integer,  -- n\r\n\t *    publicExponent    Integer,  -- e\r\n\t *    privateExponent   Integer,  -- d\r\n\t *    prime1            Integer,  -- p\r\n\t *    prime2            Integer,  -- q\r\n\t *    exponent1         Integer,  -- d mod (p-1)\r\n\t *    exponent2         Integer,  -- d mod (q-1)\r\n\t *    coefficient       Integer,  -- (inverse of q) mod p\r\n\t *    otherPrimeInfos   OtherPrimeInfos OPTIONAL\r\n\t * }\r\n\t *\r\n\t * OtherPrimeInfos ::= Sequence SIZE(1..MAX) OF OtherPrimeInfo\r\n\t * ```\r\n\t *\r\n\t * @param {Object} parameters Input parameters for the schema\r\n\t * @returns {Object} asn1js schema object\r\n\t */\r\n\tstatic schema(parameters = {})\r\n\t{\r\n\t\t/**\r\n\t\t * @type {Object}\r\n\t\t * @property {string} [blockName]\r\n\t\t * @property {string} [version]\r\n\t\t * @property {string} [modulus]\r\n\t\t * @property {string} [publicExponent]\r\n\t\t * @property {string} [privateExponent]\r\n\t\t * @property {string} [prime1]\r\n\t\t * @property {string} [prime2]\r\n\t\t * @property {string} [exponent1]\r\n\t\t * @property {string} [exponent2]\r\n\t\t * @property {string} [coefficient]\r\n\t\t * @property {string} [otherPrimeInfosName]\r\n\t\t * @property {Object} [otherPrimeInfo]\r\n\t\t */\r\n\t\tconst names = getParametersValue(parameters, \"names\", {});\r\n\r\n\t\treturn (new asn1js.Sequence({\r\n\t\t\tname: (names.blockName || \"\"),\r\n\t\t\tvalue: [\r\n\t\t\t\tnew asn1js.Integer({ name: (names.version || \"\") }),\r\n\t\t\t\tnew asn1js.Integer({ name: (names.modulus || \"\") }),\r\n\t\t\t\tnew asn1js.Integer({ name: (names.publicExponent || \"\") }),\r\n\t\t\t\tnew asn1js.Integer({ name: (names.privateExponent || \"\") }),\r\n\t\t\t\tnew asn1js.Integer({ name: (names.prime1 || \"\") }),\r\n\t\t\t\tnew asn1js.Integer({ name: (names.prime2 || \"\") }),\r\n\t\t\t\tnew asn1js.Integer({ name: (names.exponent1 || \"\") }),\r\n\t\t\t\tnew asn1js.Integer({ name: (names.exponent2 || \"\") }),\r\n\t\t\t\tnew asn1js.Integer({ name: (names.coefficient || \"\") }),\r\n\t\t\t\tnew asn1js.Sequence({\r\n\t\t\t\t\toptional: true,\r\n\t\t\t\t\tvalue: [\r\n\t\t\t\t\t\tnew asn1js.Repeated({\r\n\t\t\t\t\t\t\tname: (names.otherPrimeInfosName || \"\"),\r\n\t\t\t\t\t\t\tvalue: OtherPrimeInfo.schema(names.otherPrimeInfo || {})\r\n\t\t\t\t\t\t})\r\n\t\t\t\t\t]\r\n\t\t\t\t})\r\n\t\t\t]\r\n\t\t}));\r\n\t}\r\n\t//**********************************************************************************\r\n\t/**\r\n\t * Convert parsed asn1js object into current class\r\n\t * @param {!Object} schema\r\n\t */\r\n\tfromSchema(schema)\r\n\t{\r\n\t\t//region Clear input data first\r\n\t\tclearProps(schema, [\r\n\t\t\t\"version\",\r\n\t\t\t\"modulus\",\r\n\t\t\t\"publicExponent\",\r\n\t\t\t\"privateExponent\",\r\n\t\t\t\"prime1\",\r\n\t\t\t\"prime2\",\r\n\t\t\t\"exponent1\",\r\n\t\t\t\"exponent2\",\r\n\t\t\t\"coefficient\",\r\n\t\t\t\"otherPrimeInfos\"\r\n\t\t]);\r\n\t\t//endregion\r\n\t\t\r\n\t\t//region Check the schema is valid\r\n\t\tconst asn1 = asn1js.compareSchema(schema,\r\n\t\t\tschema,\r\n\t\t\tRSAPrivateKey.schema({\r\n\t\t\t\tnames: {\r\n\t\t\t\t\tversion: \"version\",\r\n\t\t\t\t\tmodulus: \"modulus\",\r\n\t\t\t\t\tpublicExponent: \"publicExponent\",\r\n\t\t\t\t\tprivateExponent: \"privateExponent\",\r\n\t\t\t\t\tprime1: \"prime1\",\r\n\t\t\t\t\tprime2: \"prime2\",\r\n\t\t\t\t\texponent1: \"exponent1\",\r\n\t\t\t\t\texponent2: \"exponent2\",\r\n\t\t\t\t\tcoefficient: \"coefficient\",\r\n\t\t\t\t\totherPrimeInfo: {\r\n\t\t\t\t\t\tnames: {\r\n\t\t\t\t\t\t\tblockName: \"otherPrimeInfos\"\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t})\r\n\t\t);\r\n\r\n\t\tif(asn1.verified === false)\r\n\t\t\tthrow new Error(\"Object's schema was not verified against input data for RSAPrivateKey\");\r\n\t\t//endregion\r\n\r\n\t\t//region Get internal properties from parsed schema\r\n\t\tthis.version = asn1.result.version.valueBlock.valueDec;\r\n\t\tthis.modulus = asn1.result.modulus.convertFromDER(256);\r\n\t\tthis.publicExponent = asn1.result.publicExponent;\r\n\t\tthis.privateExponent = asn1.result.privateExponent.convertFromDER(256);\r\n\t\tthis.prime1 = asn1.result.prime1.convertFromDER(128);\r\n\t\tthis.prime2 = asn1.result.prime2.convertFromDER(128);\r\n\t\tthis.exponent1 = asn1.result.exponent1.convertFromDER(128);\r\n\t\tthis.exponent2 = asn1.result.exponent2.convertFromDER(128);\r\n\t\tthis.coefficient = asn1.result.coefficient.convertFromDER(128);\r\n\r\n\t\tif(\"otherPrimeInfos\" in asn1.result)\r\n\t\t\tthis.otherPrimeInfos = Array.from(asn1.result.otherPrimeInfos, element => new OtherPrimeInfo({ schema: element }));\r\n\t\t//endregion\r\n\t}\r\n\t//**********************************************************************************\r\n\t/**\r\n\t * Convert current object to asn1js object and set correct values\r\n\t * @returns {Object} asn1js object\r\n\t */\r\n\ttoSchema()\r\n\t{\r\n\t\t//region Create array for output sequence\r\n\t\tconst outputArray = [];\r\n\t\t\r\n\t\toutputArray.push(new asn1js.Integer({ value: this.version }));\r\n\t\toutputArray.push(this.modulus.convertToDER());\r\n\t\toutputArray.push(this.publicExponent);\r\n\t\toutputArray.push(this.privateExponent.convertToDER());\r\n\t\toutputArray.push(this.prime1.convertToDER());\r\n\t\toutputArray.push(this.prime2.convertToDER());\r\n\t\toutputArray.push(this.exponent1.convertToDER());\r\n\t\toutputArray.push(this.exponent2.convertToDER());\r\n\t\toutputArray.push(this.coefficient.convertToDER());\r\n\t\t\r\n\t\tif(\"otherPrimeInfos\" in this)\r\n\t\t{\r\n\t\t\toutputArray.push(new asn1js.Sequence({\r\n\t\t\t\tvalue: Array.from(this.otherPrimeInfos, element => element.toSchema())\r\n\t\t\t}));\r\n\t\t}\r\n\t\t//endregion\r\n\t\t\r\n\t\t//region Construct and return new ASN.1 schema for this object\r\n\t\treturn (new asn1js.Sequence({\r\n\t\t\tvalue: outputArray\r\n\t\t}));\r\n\t\t//endregion\r\n\t}\r\n\t//**********************************************************************************\r\n\t/**\r\n\t * Convertion for the class to JSON object\r\n\t * @returns {Object}\r\n\t */\r\n\ttoJSON()\r\n\t{\r\n\t\tconst jwk = {\r\n\t\t\tn: toBase64(arrayBufferToString(this.modulus.valueBlock.valueHex), true, true, true),\r\n\t\t\te: toBase64(arrayBufferToString(this.publicExponent.valueBlock.valueHex), true, true, true),\r\n\t\t\td: toBase64(arrayBufferToString(this.privateExponent.valueBlock.valueHex), true, true, true),\r\n\t\t\tp: toBase64(arrayBufferToString(this.prime1.valueBlock.valueHex), true, true, true),\r\n\t\t\tq: toBase64(arrayBufferToString(this.prime2.valueBlock.valueHex), true, true, true),\r\n\t\t\tdp: toBase64(arrayBufferToString(this.exponent1.valueBlock.valueHex), true, true, true),\r\n\t\t\tdq: toBase64(arrayBufferToString(this.exponent2.valueBlock.valueHex), true, true, true),\r\n\t\t\tqi: toBase64(arrayBufferToString(this.coefficient.valueBlock.valueHex), true, true, true)\r\n\t\t};\r\n\r\n\t\tif(\"otherPrimeInfos\" in this)\r\n\t\t\tjwk.oth = Array.from(this.otherPrimeInfos, element => element.toJSON());\r\n\r\n\t\treturn jwk;\r\n\t}\r\n\t//**********************************************************************************\r\n\t/**\r\n\t * Convert JSON value into current object\r\n\t * @param {Object} json\r\n\t */\r\n\tfromJSON(json)\r\n\t{\r\n\t\tif(\"n\" in json)\r\n\t\t\tthis.modulus = new asn1js.Integer({ valueHex: stringToArrayBuffer(fromBase64(json.n, true, true)) });\r\n\t\telse\r\n\t\t\tthrow new Error(\"Absent mandatory parameter \\\"n\\\"\");\r\n\r\n\t\tif(\"e\" in json)\r\n\t\t\tthis.publicExponent = new asn1js.Integer({ valueHex: stringToArrayBuffer(fromBase64(json.e, true, true)) });\r\n\t\telse\r\n\t\t\tthrow new Error(\"Absent mandatory parameter \\\"e\\\"\");\r\n\r\n\t\tif(\"d\" in json)\r\n\t\t\tthis.privateExponent = new asn1js.Integer({ valueHex: stringToArrayBuffer(fromBase64(json.d, true, true)) });\r\n\t\telse\r\n\t\t\tthrow new Error(\"Absent mandatory parameter \\\"d\\\"\");\r\n\r\n\t\tif(\"p\" in json)\r\n\t\t\tthis.prime1 = new asn1js.Integer({ valueHex: stringToArrayBuffer(fromBase64(json.p, true, true)) });\r\n\t\telse\r\n\t\t\tthrow new Error(\"Absent mandatory parameter \\\"p\\\"\");\r\n\r\n\t\tif(\"q\" in json)\r\n\t\t\tthis.prime2 = new asn1js.Integer({ valueHex: stringToArrayBuffer(fromBase64(json.q, true, true)) });\r\n\t\telse\r\n\t\t\tthrow new Error(\"Absent mandatory parameter \\\"q\\\"\");\r\n\r\n\t\tif(\"dp\" in json)\r\n\t\t\tthis.exponent1 = new asn1js.Integer({ valueHex: stringToArrayBuffer(fromBase64(json.dp, true, true)) });\r\n\t\telse\r\n\t\t\tthrow new Error(\"Absent mandatory parameter \\\"dp\\\"\");\r\n\r\n\t\tif(\"dq\" in json)\r\n\t\t\tthis.exponent2 = new asn1js.Integer({ valueHex: stringToArrayBuffer(fromBase64(json.dq, true, true)) });\r\n\t\telse\r\n\t\t\tthrow new Error(\"Absent mandatory parameter \\\"dq\\\"\");\r\n\r\n\t\tif(\"qi\" in json)\r\n\t\t\tthis.coefficient = new asn1js.Integer({ valueHex: stringToArrayBuffer(fromBase64(json.qi, true, true)) });\r\n\t\telse\r\n\t\t\tthrow new Error(\"Absent mandatory parameter \\\"qi\\\"\");\r\n\r\n\t\tif(\"oth\" in json)\r\n\t\t\tthis.otherPrimeInfos = Array.from(json.oth, element => new OtherPrimeInfo({ json: element }));\r\n\t}\r\n\t//**********************************************************************************\r\n}\r\n//**************************************************************************************\r\n"],"file":"RSAPrivateKey.js"}