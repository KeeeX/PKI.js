{"version":3,"sources":["../src/Extension.js"],"names":["Extension","parameters","extnID","defaultValues","critical","extnValue","asn1js","OctetString","valueHex","parsedValue","fromSchema","schema","asn1","compareSchema","names","verified","Error","result","valueBlock","toString","value","fromBER","offset","SubjectDirectoryAttributes","ex","parsingError","PrivateKeyUsagePeriod","AltName","BasicConstraints","IssuingDistributionPoint","GeneralNames","NameConstraints","CRLDistributionPoints","CertificatePolicies","PolicyMappings","AuthorityKeyIdentifier","PolicyConstraints","ExtKeyUsage","InfoAccess","SignedCertificateTimestampList","outputArray","push","ObjectIdentifier","Boolean","Sequence","object","toJSON","memberName","name","blockName","optional"],"mappings":"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","sourcesContent":["import * as asn1js from \"asn1js\";\r\nimport { getParametersValue, clearProps } from \"pvutils\";\r\nimport SubjectDirectoryAttributes from \"./SubjectDirectoryAttributes.js\";\r\nimport PrivateKeyUsagePeriod from \"./PrivateKeyUsagePeriod.js\";\r\nimport AltName from \"./AltName.js\";\r\nimport BasicConstraints from \"./BasicConstraints.js\";\r\nimport IssuingDistributionPoint from \"./IssuingDistributionPoint.js\";\r\nimport GeneralNames from \"./GeneralNames.js\";\r\nimport NameConstraints from \"./NameConstraints.js\";\r\nimport CRLDistributionPoints from \"./CRLDistributionPoints.js\";\r\nimport CertificatePolicies from \"./CertificatePolicies.js\";\r\nimport PolicyMappings from \"./PolicyMappings.js\";\r\nimport AuthorityKeyIdentifier from \"./AuthorityKeyIdentifier.js\";\r\nimport PolicyConstraints from \"./PolicyConstraints.js\";\r\nimport ExtKeyUsage from \"./ExtKeyUsage.js\";\r\nimport InfoAccess from \"./InfoAccess.js\";\r\nimport SignedCertificateTimestampList from \"./SignedCertificateTimestampList.js\";\r\n//**************************************************************************************\r\n/**\r\n * Class from RFC5280\r\n */\r\nexport default class Extension\r\n{\r\n\t//**********************************************************************************\r\n\t/**\r\n\t * Constructor for Extension class\r\n\t * @param {Object} [parameters={}]\r\n\t * @param {Object} [parameters.schema] asn1js parsed value to initialize the class from\r\n\t */\r\n\tconstructor(parameters = {})\r\n\t{\r\n\t\t//region Internal properties of the object\r\n\t\t/**\r\n\t\t * @type {string}\r\n\t\t * @desc extnID\r\n\t\t */\r\n\t\tthis.extnID = getParametersValue(parameters, \"extnID\", Extension.defaultValues(\"extnID\"));\r\n\t\t/**\r\n\t\t * @type {boolean}\r\n\t\t * @desc critical\r\n\t\t */\r\n\t\tthis.critical = getParametersValue(parameters, \"critical\", Extension.defaultValues(\"critical\"));\r\n\t\t/**\r\n\t\t * @type {OctetString}\r\n\t\t * @desc extnValue\r\n\t\t */\r\n\t\tif(\"extnValue\" in parameters)\r\n\t\t\tthis.extnValue = new asn1js.OctetString({ valueHex: parameters.extnValue });\r\n\t\telse\r\n\t\t\tthis.extnValue = Extension.defaultValues(\"extnValue\");\r\n\r\n\t\tif(\"parsedValue\" in parameters)\r\n\t\t\t/**\r\n\t\t\t * @type {Object}\r\n\t\t\t * @desc parsedValue\r\n\t\t\t */\r\n\t\t\tthis.parsedValue = getParametersValue(parameters, \"parsedValue\", Extension.defaultValues(\"parsedValue\"));\r\n\t\t//endregion\r\n\r\n\t\t//region If input argument array contains \"schema\" for this object\r\n\t\tif(\"schema\" in parameters)\r\n\t\t\tthis.fromSchema(parameters.schema);\r\n\t\t//endregion\r\n\t}\r\n\t//**********************************************************************************\r\n\t/**\r\n\t * Return default values for all class members\r\n\t * @param {string} memberName String name for a class member\r\n\t */\r\n\tstatic defaultValues(memberName)\r\n\t{\r\n\t\tswitch(memberName)\r\n\t\t{\r\n\t\t\tcase \"extnID\":\r\n\t\t\t\treturn \"\";\r\n\t\t\tcase \"critical\":\r\n\t\t\t\treturn false;\r\n\t\t\tcase \"extnValue\":\r\n\t\t\t\treturn new asn1js.OctetString();\r\n\t\t\tcase \"parsedValue\":\r\n\t\t\t\treturn {};\r\n\t\t\tdefault:\r\n\t\t\t\tthrow new Error(`Invalid member name for Extension class: ${memberName}`);\r\n\t\t}\r\n\t}\r\n\t//**********************************************************************************\r\n\t/**\r\n\t * Return value of pre-defined ASN.1 schema for current class\r\n\t *\r\n\t * ASN.1 schema:\r\n\t * ```asn1\r\n\t * Extension  ::=  SEQUENCE  {\r\n\t *    extnID      OBJECT IDENTIFIER,\r\n\t *    critical    BOOLEAN DEFAULT FALSE,\r\n\t *    extnValue   OCTET STRING\r\n\t * }\r\n\t * ```\r\n\t *\r\n\t * @param {Object} parameters Input parameters for the schema\r\n\t * @returns {Object} asn1js schema object\r\n\t */\r\n\tstatic schema(parameters = {})\r\n\t{\r\n\t\t/**\r\n\t\t * @type {Object}\r\n\t\t * @property {string} [blockName]\r\n\t\t * @property {string} [extnID]\r\n\t\t * @property {string} [critical]\r\n\t\t * @property {string} [extnValue]\r\n\t\t */\r\n\t\tconst names = getParametersValue(parameters, \"names\", {});\r\n\r\n\t\treturn (new asn1js.Sequence({\r\n\t\t\tname: (names.blockName || \"\"),\r\n\t\t\tvalue: [\r\n\t\t\t\tnew asn1js.ObjectIdentifier({ name: (names.extnID || \"\") }),\r\n\t\t\t\tnew asn1js.Boolean({\r\n\t\t\t\t\tname: (names.critical || \"\"),\r\n\t\t\t\t\toptional: true\r\n\t\t\t\t}),\r\n\t\t\t\tnew asn1js.OctetString({ name: (names.extnValue || \"\") })\r\n\t\t\t]\r\n\t\t}));\r\n\t}\r\n\t//**********************************************************************************\r\n\t/**\r\n\t * Convert parsed asn1js object into current class\r\n\t * @param {!Object} schema\r\n\t */\r\n\tfromSchema(schema)\r\n\t{\r\n\t\t//region Clear input data first\r\n\t\tclearProps(schema, [\r\n\t\t\t\"extnID\",\r\n\t\t\t\"critical\",\r\n\t\t\t\"extnValue\"\r\n\t\t]);\r\n\t\t//endregion\r\n\t\t\r\n\t\t//region Check the schema is valid\r\n\t\tlet asn1 = asn1js.compareSchema(schema,\r\n\t\t\tschema,\r\n\t\t\tExtension.schema({\r\n\t\t\t\tnames: {\r\n\t\t\t\t\textnID: \"extnID\",\r\n\t\t\t\t\tcritical: \"critical\",\r\n\t\t\t\t\textnValue: \"extnValue\"\r\n\t\t\t\t}\r\n\t\t\t})\r\n\t\t);\r\n\r\n\t\tif(asn1.verified === false)\r\n\t\t\tthrow new Error(\"Object's schema was not verified against input data for Extension\");\r\n\t\t//endregion\r\n\r\n\t\t//region Get internal properties from parsed schema\r\n\t\tthis.extnID = asn1.result.extnID.valueBlock.toString();\r\n\t\tif(\"critical\" in asn1.result)\r\n\t\t\tthis.critical = asn1.result.critical.valueBlock.value;\r\n\t\tthis.extnValue = asn1.result.extnValue;\r\n\r\n\t\t//region Get \"parsedValue\" for well-known extensions\r\n\t\tasn1 = asn1js.fromBER(this.extnValue.valueBlock.valueHex);\r\n\t\tif(asn1.offset === (-1))\r\n\t\t\treturn;\r\n\r\n\t\tswitch(this.extnID)\r\n\t\t{\r\n\t\t\tcase \"2.5.29.9\": // SubjectDirectoryAttributes\r\n\t\t\t\ttry\r\n\t\t\t\t{\r\n\t\t\t\t\tthis.parsedValue = new SubjectDirectoryAttributes({ schema: asn1.result });\r\n\t\t\t\t}\r\n\t\t\t\tcatch(ex)\r\n\t\t\t\t{\r\n\t\t\t\t\tthis.parsedValue = new SubjectDirectoryAttributes();\r\n\t\t\t\t\tthis.parsedValue.parsingError = \"Incorrectly formated SubjectDirectoryAttributes\";\r\n\t\t\t\t}\r\n\t\t\t\tbreak;\r\n\t\t\tcase \"2.5.29.14\": // SubjectKeyIdentifier\r\n\t\t\t\tthis.parsedValue = asn1.result; // Should be just a simple OCTETSTRING\r\n\t\t\t\tbreak;\r\n\t\t\tcase \"2.5.29.15\": // KeyUsage\r\n\t\t\t\tthis.parsedValue = asn1.result; // Should be just a simple BITSTRING\r\n\t\t\t\tbreak;\r\n\t\t\tcase \"2.5.29.16\": // PrivateKeyUsagePeriod\r\n\t\t\t\ttry\r\n\t\t\t\t{\r\n\t\t\t\t\tthis.parsedValue = new PrivateKeyUsagePeriod({ schema: asn1.result });\r\n\t\t\t\t}\r\n\t\t\t\tcatch(ex)\r\n\t\t\t\t{\r\n\t\t\t\t\tthis.parsedValue = new PrivateKeyUsagePeriod();\r\n\t\t\t\t\tthis.parsedValue.parsingError = \"Incorrectly formated PrivateKeyUsagePeriod\";\r\n\t\t\t\t}\r\n\t\t\t\tbreak;\r\n\t\t\tcase \"2.5.29.17\": // SubjectAltName\r\n\t\t\tcase \"2.5.29.18\": // IssuerAltName\r\n\t\t\t\ttry\r\n\t\t\t\t{\r\n\t\t\t\t\tthis.parsedValue = new AltName({ schema: asn1.result });\r\n\t\t\t\t}\r\n\t\t\t\tcatch(ex)\r\n\t\t\t\t{\r\n\t\t\t\t\tthis.parsedValue = new AltName();\r\n\t\t\t\t\tthis.parsedValue.parsingError = \"Incorrectly formated AltName\";\r\n\t\t\t\t}\r\n\t\t\t\tbreak;\r\n\t\t\tcase \"2.5.29.19\": // BasicConstraints\r\n\t\t\t\ttry\r\n\t\t\t\t{\r\n\t\t\t\t\tthis.parsedValue = new BasicConstraints({ schema: asn1.result });\r\n\t\t\t\t}\r\n\t\t\t\tcatch(ex)\r\n\t\t\t\t{\r\n\t\t\t\t\tthis.parsedValue = new BasicConstraints();\r\n\t\t\t\t\tthis.parsedValue.parsingError = \"Incorrectly formated BasicConstraints\";\r\n\t\t\t\t}\r\n\t\t\t\tbreak;\r\n\t\t\tcase \"2.5.29.20\": // CRLNumber\r\n\t\t\tcase \"2.5.29.27\": // BaseCRLNumber (delta CRL indicator)\r\n\t\t\t\tthis.parsedValue = asn1.result; // Should be just a simple INTEGER\r\n\t\t\t\tbreak;\r\n\t\t\tcase \"2.5.29.21\": // CRLReason\r\n\t\t\t\tthis.parsedValue = asn1.result; // Should be just a simple ENUMERATED\r\n\t\t\t\tbreak;\r\n\t\t\tcase \"2.5.29.24\": // InvalidityDate\r\n\t\t\t\tthis.parsedValue = asn1.result; // Should be just a simple GeneralizedTime\r\n\t\t\t\tbreak;\r\n\t\t\tcase \"2.5.29.28\": // IssuingDistributionPoint\r\n\t\t\t\ttry\r\n\t\t\t\t{\r\n\t\t\t\t\tthis.parsedValue = new IssuingDistributionPoint({ schema: asn1.result });\r\n\t\t\t\t}\r\n\t\t\t\tcatch(ex)\r\n\t\t\t\t{\r\n\t\t\t\t\tthis.parsedValue = new IssuingDistributionPoint();\r\n\t\t\t\t\tthis.parsedValue.parsingError = \"Incorrectly formated IssuingDistributionPoint\";\r\n\t\t\t\t}\r\n\t\t\t\tbreak;\r\n\t\t\tcase \"2.5.29.29\": // CertificateIssuer\r\n\t\t\t\ttry\r\n\t\t\t\t{\r\n\t\t\t\t\tthis.parsedValue = new GeneralNames({ schema: asn1.result }); // Should be just a simple\r\n\t\t\t\t}\r\n\t\t\t\tcatch(ex)\r\n\t\t\t\t{\r\n\t\t\t\t\tthis.parsedValue = new GeneralNames();\r\n\t\t\t\t\tthis.parsedValue.parsingError = \"Incorrectly formated GeneralNames\";\r\n\t\t\t\t}\r\n\t\t\t\tbreak;\r\n\t\t\tcase \"2.5.29.30\": // NameConstraints\r\n\t\t\t\ttry\r\n\t\t\t\t{\r\n\t\t\t\t\tthis.parsedValue = new NameConstraints({ schema: asn1.result });\r\n\t\t\t\t}\r\n\t\t\t\tcatch(ex)\r\n\t\t\t\t{\r\n\t\t\t\t\tthis.parsedValue = new NameConstraints();\r\n\t\t\t\t\tthis.parsedValue.parsingError = \"Incorrectly formated NameConstraints\";\r\n\t\t\t\t}\r\n\t\t\t\tbreak;\r\n\t\t\tcase \"2.5.29.31\": // CRLDistributionPoints\r\n\t\t\tcase \"2.5.29.46\": // FreshestCRL\r\n\t\t\t\ttry\r\n\t\t\t\t{\r\n\t\t\t\t\tthis.parsedValue = new CRLDistributionPoints({ schema: asn1.result });\r\n\t\t\t\t}\r\n\t\t\t\tcatch(ex)\r\n\t\t\t\t{\r\n\t\t\t\t\tthis.parsedValue = new CRLDistributionPoints();\r\n\t\t\t\t\tthis.parsedValue.parsingError = \"Incorrectly formated CRLDistributionPoints\";\r\n\t\t\t\t}\r\n\t\t\t\tbreak;\r\n\t\t\tcase \"2.5.29.32\": // CertificatePolicies\r\n\t\t\t\ttry\r\n\t\t\t\t{\r\n\t\t\t\t\tthis.parsedValue = new CertificatePolicies({ schema: asn1.result });\r\n\t\t\t\t}\r\n\t\t\t\tcatch(ex)\r\n\t\t\t\t{\r\n\t\t\t\t\tthis.parsedValue = new CertificatePolicies();\r\n\t\t\t\t\tthis.parsedValue.parsingError = \"Incorrectly formated CertificatePolicies\";\r\n\t\t\t\t}\r\n\t\t\t\tbreak;\r\n\t\t\tcase \"2.5.29.33\": // PolicyMappings\r\n\t\t\t\ttry\r\n\t\t\t\t{\r\n\t\t\t\t\tthis.parsedValue = new PolicyMappings({ schema: asn1.result });\r\n\t\t\t\t}\r\n\t\t\t\tcatch(ex)\r\n\t\t\t\t{\r\n\t\t\t\t\tthis.parsedValue = new PolicyMappings();\r\n\t\t\t\t\tthis.parsedValue.parsingError = \"Incorrectly formated CertificatePolicies\";\r\n\t\t\t\t}\r\n\t\t\t\tbreak;\r\n\t\t\tcase \"2.5.29.35\": // AuthorityKeyIdentifier\r\n\t\t\t\ttry\r\n\t\t\t\t{\r\n\t\t\t\t\tthis.parsedValue = new AuthorityKeyIdentifier({ schema: asn1.result });\r\n\t\t\t\t}\r\n\t\t\t\tcatch(ex)\r\n\t\t\t\t{\r\n\t\t\t\t\tthis.parsedValue = new AuthorityKeyIdentifier();\r\n\t\t\t\t\tthis.parsedValue.parsingError = \"Incorrectly formated AuthorityKeyIdentifier\";\r\n\t\t\t\t}\r\n\t\t\t\tbreak;\r\n\t\t\tcase \"2.5.29.36\": // PolicyConstraints\r\n\t\t\t\ttry\r\n\t\t\t\t{\r\n\t\t\t\t\tthis.parsedValue = new PolicyConstraints({ schema: asn1.result });\r\n\t\t\t\t}\r\n\t\t\t\tcatch(ex)\r\n\t\t\t\t{\r\n\t\t\t\t\tthis.parsedValue = new PolicyConstraints();\r\n\t\t\t\t\tthis.parsedValue.parsingError = \"Incorrectly formated PolicyConstraints\";\r\n\t\t\t\t}\r\n\t\t\t\tbreak;\r\n\t\t\tcase \"2.5.29.37\": // ExtKeyUsage\r\n\t\t\t\ttry\r\n\t\t\t\t{\r\n\t\t\t\t\tthis.parsedValue = new ExtKeyUsage({ schema: asn1.result });\r\n\t\t\t\t}\r\n\t\t\t\tcatch(ex)\r\n\t\t\t\t{\r\n\t\t\t\t\tthis.parsedValue = new ExtKeyUsage();\r\n\t\t\t\t\tthis.parsedValue.parsingError = \"Incorrectly formated ExtKeyUsage\";\r\n\t\t\t\t}\r\n\t\t\t\tbreak;\r\n\t\t\tcase \"2.5.29.54\": // InhibitAnyPolicy\r\n\t\t\t\tthis.parsedValue = asn1.result; // Should be just a simple INTEGER\r\n\t\t\t\tbreak;\r\n\t\t\tcase \"1.3.6.1.5.5.7.1.1\": // AuthorityInfoAccess\r\n\t\t\tcase \"1.3.6.1.5.5.7.1.11\": // SubjectInfoAccess\r\n\t\t\t\ttry\r\n\t\t\t\t{\r\n\t\t\t\t\tthis.parsedValue = new InfoAccess({ schema: asn1.result });\r\n\t\t\t\t}\r\n\t\t\t\tcatch(ex)\r\n\t\t\t\t{\r\n\t\t\t\t\tthis.parsedValue = new InfoAccess();\r\n\t\t\t\t\tthis.parsedValue.parsingError = \"Incorrectly formated InfoAccess\";\r\n\t\t\t\t}\r\n\t\t\t\tbreak;\r\n\t\t\tcase \"1.3.6.1.4.1.11129.2.4.2\": // SignedCertificateTimestampList\r\n\t\t\t\ttry\r\n\t\t\t\t{\r\n\t\t\t\t\tthis.parsedValue = new SignedCertificateTimestampList({ schema: asn1.result });\r\n\t\t\t\t}\r\n\t\t\t\tcatch(ex)\r\n\t\t\t\t{\r\n\t\t\t\t\tthis.parsedValue = new SignedCertificateTimestampList();\r\n\t\t\t\t\tthis.parsedValue.parsingError = \"Incorrectly formated SignedCertificateTimestampList\";\r\n\t\t\t\t}\r\n\t\t\t\tbreak;\r\n\t\t\tdefault:\r\n\t\t}\r\n\t\t//endregion\r\n\t\t//endregion\r\n\t}\r\n\t//**********************************************************************************\r\n\t/**\r\n\t * Convert current object to asn1js object and set correct values\r\n\t * @returns {Object} asn1js object\r\n\t */\r\n\ttoSchema()\r\n\t{\r\n\t\t//region Create array for output sequence\r\n\t\tconst outputArray = [];\r\n\r\n\t\toutputArray.push(new asn1js.ObjectIdentifier({ value: this.extnID }));\r\n\r\n\t\tif(this.critical !== Extension.defaultValues(\"critical\"))\r\n\t\t\toutputArray.push(new asn1js.Boolean({ value: this.critical }));\r\n\r\n\t\toutputArray.push(this.extnValue);\r\n\t\t//endregion\r\n\r\n\t\t//region Construct and return new ASN.1 schema for this object\r\n\t\treturn (new asn1js.Sequence({\r\n\t\t\tvalue: outputArray\r\n\t\t}));\r\n\t\t//endregion\r\n\t}\r\n\t//**********************************************************************************\r\n\t/**\r\n\t * Convertion for the class to JSON object\r\n\t * @returns {Object}\r\n\t */\r\n\ttoJSON()\r\n\t{\r\n\t\tconst object = {\r\n\t\t\textnID: this.extnID,\r\n\t\t\textnValue: this.extnValue.toJSON()\r\n\t\t};\r\n\r\n\t\tif(this.critical !== Extension.defaultValues(\"critical\"))\r\n\t\t\tobject.critical = this.critical;\r\n\r\n\t\tif(\"parsedValue\" in this)\r\n\t\t{\r\n\t\t\tif(\"toJSON\" in this.parsedValue)\r\n\t\t\t\tobject.parsedValue = this.parsedValue.toJSON();\r\n\t\t}\r\n\r\n\t\treturn object;\r\n\t}\r\n\t//**********************************************************************************\r\n}\r\n//**************************************************************************************\r\n"],"file":"Extension.js"}