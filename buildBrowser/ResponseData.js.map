{"version":3,"sources":["../src/ResponseData.js"],"names":["ResponseData","parameters","tbs","defaultValues","responderID","producedAt","responses","responseExtensions","fromSchema","schema","asn1","asn1js","compareSchema","verified","Error","result","valueBeforeDecode","version","valueBlock","valueDec","idBlock","tagNumber","RelativeDistinguishedNames","value","toDate","Array","from","element","SingleResponse","Extension","encodeFlag","tbsSchema","length","fromBER","outputArray","push","Constructed","tagClass","Integer","toSchema","GeneralizedTime","valueDate","Sequence","_object","toJSON","memberName","ArrayBuffer","Date","memberValue","byteLength","Object","keys","names","name","blockName","optional","Choice","ResponseDataByName","OctetString","ResponseDataByKey","Repeated","response","Extensions","extensions"],"mappings":"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","sourcesContent":["import * as asn1js from \"asn1js\";\r\nimport { getParametersValue, clearProps } from \"pvutils\";\r\nimport RelativeDistinguishedNames from \"./RelativeDistinguishedNames.js\";\r\nimport SingleResponse from \"./SingleResponse.js\";\r\nimport Extension from \"./Extension.js\";\r\nimport Extensions from \"./Extensions.js\";\r\n//**************************************************************************************\r\n/**\r\n * Class from RFC6960\r\n */\r\nexport default class ResponseData\r\n{\r\n\t//**********************************************************************************\r\n\t/**\r\n\t * Constructor for ResponseData class\r\n\t * @param {Object} [parameters={}]\r\n\t * @param {Object} [parameters.schema] asn1js parsed value to initialize the class from\r\n\t */\r\n\tconstructor(parameters = {})\r\n\t{\r\n\t\t//region Internal properties of the object\r\n\t\t/**\r\n\t\t * @type {ArrayBuffer}\r\n\t\t * @desc tbs\r\n\t\t */\r\n\t\tthis.tbs = getParametersValue(parameters, \"tbs\", ResponseData.defaultValues(\"tbs\"));\r\n\t\t/**\r\n\t\t * @type {Object}\r\n\t\t * @desc responderID\r\n\t\t */\r\n\t\tthis.responderID = getParametersValue(parameters, \"responderID\", ResponseData.defaultValues(\"responderID\"));\r\n\t\t/**\r\n\t\t * @type {Date}\r\n\t\t * @desc producedAt\r\n\t\t */\r\n\t\tthis.producedAt = getParametersValue(parameters, \"producedAt\", ResponseData.defaultValues(\"producedAt\"));\r\n\t\t/**\r\n\t\t * @type {Array.<SingleResponse>}\r\n\t\t * @desc responses\r\n\t\t */\r\n\t\tthis.responses = getParametersValue(parameters, \"responses\", ResponseData.defaultValues(\"responses\"));\r\n\r\n\t\tif(\"responseExtensions\" in parameters)\r\n\t\t\t/**\r\n\t\t\t * @type {Array.<Extension>}\r\n\t\t\t * @desc responseExtensions\r\n\t\t\t */\r\n\t\t\tthis.responseExtensions = getParametersValue(parameters, \"responseExtensions\", ResponseData.defaultValues(\"responseExtensions\"));\r\n\t\t//endregion\r\n\r\n\t\t//region If input argument array contains \"schema\" for this object\r\n\t\tif(\"schema\" in parameters)\r\n\t\t\tthis.fromSchema(parameters.schema);\r\n\t\t//endregion\r\n\t}\r\n\t//**********************************************************************************\r\n\t/**\r\n\t * Return default values for all class members\r\n\t * @param {string} memberName String name for a class member\r\n\t */\r\n\tstatic defaultValues(memberName)\r\n\t{\r\n\t\tswitch(memberName)\r\n\t\t{\r\n\t\t\tcase \"tbs\":\r\n\t\t\t\treturn new ArrayBuffer(0);\r\n\t\t\tcase \"responderID\":\r\n\t\t\t\treturn {};\r\n\t\t\tcase \"producedAt\":\r\n\t\t\t\treturn new Date(0, 0, 0);\r\n\t\t\tcase \"responses\":\r\n\t\t\tcase \"responseExtensions\":\r\n\t\t\t\treturn [];\r\n\t\t\tdefault:\r\n\t\t\t\tthrow new Error(`Invalid member name for ResponseData class: ${memberName}`);\r\n\t\t}\r\n\t}\r\n\t//**********************************************************************************\r\n\t/**\r\n\t * Compare values with default values for all class members\r\n\t * @param {string} memberName String name for a class member\r\n\t * @param {*} memberValue Value to compare with default value\r\n\t */\r\n\tstatic compareWithDefault(memberName, memberValue)\r\n\t{\r\n\t\tswitch(memberName)\r\n\t\t{\r\n\t\t\tcase \"tbs\":\r\n\t\t\t\treturn (memberValue.byteLength === 0);\r\n\t\t\tcase \"responderID\":\r\n\t\t\t\treturn (Object.keys(memberValue).length === 0);\r\n\t\t\tcase \"producedAt\":\r\n\t\t\t\treturn (memberValue === ResponseData.defaultValues(memberName));\r\n\t\t\tcase \"responses\":\r\n\t\t\tcase \"responseExtensions\":\r\n\t\t\t\treturn (memberValue.length === 0);\r\n\t\t\tdefault:\r\n\t\t\t\tthrow new Error(`Invalid member name for ResponseData class: ${memberName}`);\r\n\t\t}\r\n\t}\r\n\t//**********************************************************************************\r\n\t/**\r\n\t * Return value of pre-defined ASN.1 schema for current class\r\n\t *\r\n\t * ASN.1 schema:\r\n\t * ```asn1\r\n\t * ResponseData ::= SEQUENCE {\r\n\t *    version              [0] EXPLICIT Version DEFAULT v1,\r\n\t *    responderID              ResponderID,\r\n\t *    producedAt               GeneralizedTime,\r\n\t *    responses                SEQUENCE OF SingleResponse,\r\n\t *    responseExtensions   [1] EXPLICIT Extensions OPTIONAL }\r\n\t * ```\r\n\t *\r\n\t * @param {Object} parameters Input parameters for the schema\r\n\t * @returns {Object} asn1js schema object\r\n\t */\r\n\tstatic schema(parameters = {})\r\n\t{\r\n\t\t/**\r\n\t\t * @type {Object}\r\n\t\t * @property {string} [blockName]\r\n\t\t * @property {string} [version]\r\n\t\t * @property {string} [ResponseDataByName]\r\n\t\t * @property {string} [ResponseDataByKey]\r\n\t\t * @property {string} [producedAt]\r\n\t\t * @property {string} [response]\r\n\t\t * @property {string} [extensions]\r\n\t\t */\r\n\t\tconst names = getParametersValue(parameters, \"names\", {});\r\n\r\n\t\treturn (new asn1js.Sequence({\r\n\t\t\tname: (names.blockName || \"ResponseData\"),\r\n\t\t\tvalue: [\r\n\t\t\t\tnew asn1js.Constructed({\r\n\t\t\t\t\toptional: true,\r\n\t\t\t\t\tidBlock: {\r\n\t\t\t\t\t\ttagClass: 3, // CONTEXT-SPECIFIC\r\n\t\t\t\t\t\ttagNumber: 0 // [0]\r\n\t\t\t\t\t},\r\n\t\t\t\t\tvalue: [new asn1js.Integer({ name: (names.version || \"ResponseData.version\") })]\r\n\t\t\t\t}),\r\n\t\t\t\tnew asn1js.Choice({\r\n\t\t\t\t\tvalue: [\r\n\t\t\t\t\t\tnew asn1js.Constructed({\r\n\t\t\t\t\t\t\tname: (names.responderID || \"ResponseData.responderID\"),\r\n\t\t\t\t\t\t\tidBlock: {\r\n\t\t\t\t\t\t\t\ttagClass: 3, // CONTEXT-SPECIFIC\r\n\t\t\t\t\t\t\t\ttagNumber: 1 // [1]\r\n\t\t\t\t\t\t\t},\r\n\t\t\t\t\t\t\tvalue: [RelativeDistinguishedNames.schema(names.ResponseDataByName || {\r\n\t\t\t\t\t\t\t\tnames: {\r\n\t\t\t\t\t\t\t\t\tblockName: \"ResponseData.byName\"\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t})]\r\n\t\t\t\t\t\t}),\r\n\t\t\t\t\t\tnew asn1js.Constructed({\r\n\t\t\t\t\t\t\tname: (names.responderID || \"ResponseData.responderID\"),\r\n\t\t\t\t\t\t\tidBlock: {\r\n\t\t\t\t\t\t\t\ttagClass: 3, // CONTEXT-SPECIFIC\r\n\t\t\t\t\t\t\t\ttagNumber: 2 // [2]\r\n\t\t\t\t\t\t\t},\r\n\t\t\t\t\t\t\tvalue: [new asn1js.OctetString({ name: (names.ResponseDataByKey || \"ResponseData.byKey\") })]\r\n\t\t\t\t\t\t})\r\n\t\t\t\t\t]\r\n\t\t\t\t}),\r\n\t\t\t\tnew asn1js.GeneralizedTime({ name: (names.producedAt || \"ResponseData.producedAt\") }),\r\n\t\t\t\tnew asn1js.Sequence({\r\n\t\t\t\t\tvalue: [\r\n\t\t\t\t\t\tnew asn1js.Repeated({\r\n\t\t\t\t\t\t\tname: \"ResponseData.responses\",\r\n\t\t\t\t\t\t\tvalue: SingleResponse.schema(names.response || {})\r\n\t\t\t\t\t\t})\r\n\t\t\t\t\t]\r\n\t\t\t\t}),\r\n\t\t\t\tnew asn1js.Constructed({\r\n\t\t\t\t\toptional: true,\r\n\t\t\t\t\tidBlock: {\r\n\t\t\t\t\t\ttagClass: 3, // CONTEXT-SPECIFIC\r\n\t\t\t\t\t\ttagNumber: 1 // [1]\r\n\t\t\t\t\t},\r\n\t\t\t\t\tvalue: [Extensions.schema(names.extensions || {\r\n\t\t\t\t\t\tnames: {\r\n\t\t\t\t\t\t\tblockName: \"ResponseData.responseExtensions\"\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t})]\r\n\t\t\t\t}) // EXPLICIT SEQUENCE value\r\n\t\t\t]\r\n\t\t}));\r\n\t}\r\n\t//**********************************************************************************\r\n\t/**\r\n\t * Convert parsed asn1js object into current class\r\n\t * @param {!Object} schema\r\n\t */\r\n\tfromSchema(schema)\r\n\t{\r\n\t\t//region Clear input data first\r\n\t\tclearProps(schema, [\r\n\t\t\t\"ResponseData\",\r\n\t\t\t\"ResponseData.version\",\r\n\t\t\t\"ResponseData.responderID\",\r\n\t\t\t\"ResponseData.producedAt\",\r\n\t\t\t\"ResponseData.responses\",\r\n\t\t\t\"ResponseData.responseExtensions\"\r\n\t\t]);\r\n\t\t//endregion\r\n\t\t\r\n\t\t//region Check the schema is valid\r\n\t\tconst asn1 = asn1js.compareSchema(schema,\r\n\t\t\tschema,\r\n\t\t\tResponseData.schema()\r\n\t\t);\r\n\r\n\t\tif(asn1.verified === false)\r\n\t\t\tthrow new Error(\"Object's schema was not verified against input data for ResponseData\");\r\n\t\t//endregion\r\n\r\n\t\t//region Get internal properties from parsed schema\r\n\t\tthis.tbs = asn1.result.ResponseData.valueBeforeDecode;\r\n\r\n\t\tif(\"ResponseData.version\" in asn1.result)\r\n\t\t\tthis.version = asn1.result[\"ResponseData.version\"].valueBlock.valueDec;\r\n\r\n\t\tif(asn1.result[\"ResponseData.responderID\"].idBlock.tagNumber === 1)\r\n\t\t\tthis.responderID = new RelativeDistinguishedNames({ schema: asn1.result[\"ResponseData.responderID\"].valueBlock.value[0] });\r\n\t\telse\r\n\t\t\tthis.responderID = asn1.result[\"ResponseData.responderID\"].valueBlock.value[0]; // OCTETSTRING\r\n\r\n\t\tthis.producedAt = asn1.result[\"ResponseData.producedAt\"].toDate();\r\n\t\tthis.responses = Array.from(asn1.result[\"ResponseData.responses\"], element => new SingleResponse({ schema: element }));\r\n\r\n\t\tif(\"ResponseData.responseExtensions\" in asn1.result)\r\n\t\t\tthis.responseExtensions = Array.from(asn1.result[\"ResponseData.responseExtensions\"].valueBlock.value, element => new Extension({ schema: element }));\r\n\t\t//endregion\r\n\t}\r\n\t//**********************************************************************************\r\n\t/**\r\n\t * Convert current object to asn1js object and set correct values\r\n\t * @param {boolean} encodeFlag If param equal to false then create TBS schema via decoding stored value. In othe case create TBS schema via assembling from TBS parts.\r\n\t * @returns {Object} asn1js object\r\n\t */\r\n\ttoSchema(encodeFlag = false)\r\n\t{\r\n\t\t//region Decode stored TBS value \r\n\t\tlet tbsSchema;\r\n\t\t\r\n\t\tif(encodeFlag === false)\r\n\t\t{\r\n\t\t\tif(this.tbs.length === 0) // No stored certificate TBS part\r\n\t\t\t\treturn ResponseData.schema();\r\n\t\t\t\r\n\t\t\ttbsSchema = asn1js.fromBER(this.tbs).result;\r\n\t\t}\r\n\t\t//endregion \r\n\t\t//region Create TBS schema via assembling from TBS parts\r\n\t\telse\r\n\t\t{\r\n\t\t\tconst outputArray = [];\r\n\t\t\t\r\n\t\t\tif(\"version\" in this)\r\n\t\t\t{\r\n\t\t\t\toutputArray.push(new asn1js.Constructed({\r\n\t\t\t\t\tidBlock: {\r\n\t\t\t\t\t\ttagClass: 3, // CONTEXT-SPECIFIC\r\n\t\t\t\t\t\ttagNumber: 0 // [0]\r\n\t\t\t\t\t},\r\n\t\t\t\t\tvalue: [new asn1js.Integer({ value: this.version })]\r\n\t\t\t\t}));\r\n\t\t\t}\r\n\t\t\t\r\n\t\t\tif(this.responderID instanceof RelativeDistinguishedNames)\r\n\t\t\t{\r\n\t\t\t\toutputArray.push(new asn1js.Constructed({\r\n\t\t\t\t\tidBlock: {\r\n\t\t\t\t\t\ttagClass: 3, // CONTEXT-SPECIFIC\r\n\t\t\t\t\t\ttagNumber: 1 // [1]\r\n\t\t\t\t\t},\r\n\t\t\t\t\tvalue: [this.responderID.toSchema()]\r\n\t\t\t\t}));\r\n\t\t\t}\r\n\t\t\telse\r\n\t\t\t{\r\n\t\t\t\toutputArray.push(new asn1js.Constructed({\r\n\t\t\t\t\tidBlock: {\r\n\t\t\t\t\t\ttagClass: 3, // CONTEXT-SPECIFIC\r\n\t\t\t\t\t\ttagNumber: 2 // [2]\r\n\t\t\t\t\t},\r\n\t\t\t\t\tvalue: [this.responderID]\r\n\t\t\t\t}));\r\n\t\t\t}\r\n\t\t\t\r\n\t\t\toutputArray.push(new asn1js.GeneralizedTime({ valueDate: this.producedAt }));\r\n\r\n\t\t\toutputArray.push(new asn1js.Sequence({\r\n\t\t\t\tvalue: Array.from(this.responses, element => element.toSchema())\r\n\t\t\t}));\r\n\t\t\t\r\n\t\t\tif(\"responseExtensions\" in this)\r\n\t\t\t{\r\n\t\t\t\toutputArray.push(new asn1js.Constructed({\r\n\t\t\t\t\tidBlock: {\r\n\t\t\t\t\t\ttagClass: 3, // CONTEXT-SPECIFIC\r\n\t\t\t\t\t\ttagNumber: 1 // [1]\r\n\t\t\t\t\t},\r\n\t\t\t\t\tvalue: [new asn1js.Sequence({\r\n\t\t\t\t\t\tvalue: Array.from(this.responseExtensions, element => element.toSchema())\r\n\t\t\t\t\t})]\r\n\t\t\t\t}));\r\n\t\t\t}\r\n\t\t\t\r\n\t\t\ttbsSchema = new asn1js.Sequence({\r\n\t\t\t\tvalue: outputArray\r\n\t\t\t});\r\n\t\t}\r\n\t\t//endregion \r\n\t\t\r\n\t\t//region Construct and return new ASN.1 schema for this object \r\n\t\treturn tbsSchema;\r\n\t\t//endregion \r\n\t}\r\n\t//**********************************************************************************\r\n\t/**\r\n\t * Convertion for the class to JSON object\r\n\t * @returns {Object}\r\n\t */\r\n\ttoJSON()\r\n\t{\r\n\t\tconst _object = {};\r\n\r\n\t\tif(\"version\" in this)\r\n\t\t\t_object.version = this.version;\r\n\r\n\t\tif(\"responderID\" in this)\r\n\t\t\t_object.responderID = this.responderID;\r\n\r\n\t\tif(\"producedAt\" in this)\r\n\t\t\t_object.producedAt = this.producedAt;\r\n\r\n\t\tif(\"responses\" in this)\r\n\t\t\t_object.responses = Array.from(this.responses, element => element.toJSON());\r\n\r\n\t\tif(\"responseExtensions\" in this)\r\n\t\t\t_object.responseExtensions = Array.from(this.responseExtensions, element => element.toJSON());\r\n\r\n\t\treturn _object;\r\n\t}\r\n\t//**********************************************************************************\r\n}\r\n//**************************************************************************************\r\n"],"file":"ResponseData.js"}