{"version":3,"sources":["../src/RSAESOAEPParams.js"],"names":["RSAESOAEPParams","parameters","hashAlgorithm","defaultValues","maskGenAlgorithm","pSourceAlgorithm","fromSchema","schema","asn1","asn1js","compareSchema","names","blockName","verified","Error","result","AlgorithmIdentifier","outputArray","isEqual","push","Constructed","idBlock","tagClass","tagNumber","value","toSchema","Sequence","object","toJSON","memberName","algorithmId","algorithmParams","Null","OctetString","valueHex","Uint8Array","buffer","name","optional"],"mappings":"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","sourcesContent":["import * as asn1js from \"asn1js\";\r\nimport { getParametersValue, clearProps } from \"pvutils\";\r\nimport AlgorithmIdentifier from \"./AlgorithmIdentifier.js\";\r\n//**************************************************************************************\r\n/**\r\n * Class from RFC3447\r\n */\r\nexport default class RSAESOAEPParams\r\n{\r\n\t//**********************************************************************************\r\n\t/**\r\n\t * Constructor for RSAESOAEPParams class\r\n\t * @param {Object} [parameters={}]\r\n\t * @param {Object} [parameters.schema] asn1js parsed value to initialize the class from\r\n\t */\r\n\tconstructor(parameters = {})\r\n\t{\r\n\t\t//region Internal properties of the object\r\n\t\t/**\r\n\t\t * @type {AlgorithmIdentifier}\r\n\t\t * @desc hashAlgorithm\r\n\t\t */\r\n\t\tthis.hashAlgorithm = getParametersValue(parameters, \"hashAlgorithm\", RSAESOAEPParams.defaultValues(\"hashAlgorithm\"));\r\n\t\t/**\r\n\t\t * @type {AlgorithmIdentifier}\r\n\t\t * @desc maskGenAlgorithm\r\n\t\t */\r\n\t\tthis.maskGenAlgorithm = getParametersValue(parameters, \"maskGenAlgorithm\", RSAESOAEPParams.defaultValues(\"maskGenAlgorithm\"));\r\n\t\t/**\r\n\t\t * @type {AlgorithmIdentifier}\r\n\t\t * @desc pSourceAlgorithm\r\n\t\t */\r\n\t\tthis.pSourceAlgorithm = getParametersValue(parameters, \"pSourceAlgorithm\", RSAESOAEPParams.defaultValues(\"pSourceAlgorithm\"));\r\n\t\t//endregion\r\n\r\n\t\t//region If input argument array contains \"schema\" for this object\r\n\t\tif(\"schema\" in parameters)\r\n\t\t\tthis.fromSchema(parameters.schema);\r\n\t\t//endregion\r\n\t}\r\n\t//**********************************************************************************\r\n\t/**\r\n\t * Return default values for all class members\r\n\t * @param {string} memberName String name for a class member\r\n\t */\r\n\tstatic defaultValues(memberName)\r\n\t{\r\n\t\tswitch(memberName)\r\n\t\t{\r\n\t\t\tcase \"hashAlgorithm\":\r\n\t\t\t\treturn new AlgorithmIdentifier({\r\n\t\t\t\t\talgorithmId: \"1.3.14.3.2.26\", // SHA-1\r\n\t\t\t\t\talgorithmParams: new asn1js.Null()\r\n\t\t\t\t});\r\n\t\t\tcase \"maskGenAlgorithm\":\r\n\t\t\t\treturn new AlgorithmIdentifier({\r\n\t\t\t\t\talgorithmId: \"1.2.840.113549.1.1.8\", // MGF1\r\n\t\t\t\t\talgorithmParams: (new AlgorithmIdentifier({\r\n\t\t\t\t\t\talgorithmId: \"1.3.14.3.2.26\", // SHA-1\r\n\t\t\t\t\t\talgorithmParams: new asn1js.Null()\r\n\t\t\t\t\t})).toSchema()\r\n\t\t\t\t});\r\n\t\t\tcase \"pSourceAlgorithm\":\r\n\t\t\t\treturn new AlgorithmIdentifier({\r\n\t\t\t\t\talgorithmId: \"1.2.840.113549.1.1.9\", // id-pSpecified\r\n\t\t\t\t\talgorithmParams: new asn1js.OctetString({ valueHex: (new Uint8Array([0xda, 0x39, 0xa3, 0xee, 0x5e, 0x6b, 0x4b, 0x0d, 0x32, 0x55, 0xbf, 0xef, 0x95, 0x60, 0x18, 0x90, 0xaf, 0xd8, 0x07, 0x09])).buffer }) // SHA-1 hash of empty string\r\n\t\t\t\t});\r\n\t\t\tdefault:\r\n\t\t\t\tthrow new Error(`Invalid member name for RSAESOAEPParams class: ${memberName}`);\r\n\t\t}\r\n\t}\r\n\t//**********************************************************************************\r\n\t/**\r\n\t * Return value of pre-defined ASN.1 schema for current class\r\n\t *\r\n\t * ASN.1 schema:\r\n\t * ```asn1\r\n\t * RSAES-OAEP-params ::= SEQUENCE {\r\n\t *    hashAlgorithm     [0] HashAlgorithm    DEFAULT sha1,\r\n\t *    maskGenAlgorithm  [1] MaskGenAlgorithm DEFAULT mgf1SHA1,\r\n\t *    pSourceAlgorithm  [2] PSourceAlgorithm DEFAULT pSpecifiedEmpty\r\n\t * }\r\n\t * ```\r\n\t *\r\n\t * @param {Object} parameters Input parameters for the schema\r\n\t * @returns {Object} asn1js schema object\r\n\t */\r\n\tstatic schema(parameters = {})\r\n\t{\r\n\t\t/**\r\n\t\t * @type {Object}\r\n\t\t * @property {string} [blockName]\r\n\t\t * @property {string} [hashAlgorithm]\r\n\t\t * @property {string} [maskGenAlgorithm]\r\n\t\t * @property {string} [pSourceAlgorithm]\r\n\t\t */\r\n\t\tconst names = getParametersValue(parameters, \"names\", {});\r\n\r\n\t\treturn (new asn1js.Sequence({\r\n\t\t\tname: (names.blockName || \"\"),\r\n\t\t\tvalue: [\r\n\t\t\t\tnew asn1js.Constructed({\r\n\t\t\t\t\tidBlock: {\r\n\t\t\t\t\t\ttagClass: 3, // CONTEXT-SPECIFIC\r\n\t\t\t\t\t\ttagNumber: 0 // [0]\r\n\t\t\t\t\t},\r\n\t\t\t\t\toptional: true,\r\n\t\t\t\t\tvalue: [AlgorithmIdentifier.schema(names.hashAlgorithm || {})]\r\n\t\t\t\t}),\r\n\t\t\t\tnew asn1js.Constructed({\r\n\t\t\t\t\tidBlock: {\r\n\t\t\t\t\t\ttagClass: 3, // CONTEXT-SPECIFIC\r\n\t\t\t\t\t\ttagNumber: 1 // [1]\r\n\t\t\t\t\t},\r\n\t\t\t\t\toptional: true,\r\n\t\t\t\t\tvalue: [AlgorithmIdentifier.schema(names.maskGenAlgorithm || {})]\r\n\t\t\t\t}),\r\n\t\t\t\tnew asn1js.Constructed({\r\n\t\t\t\t\tidBlock: {\r\n\t\t\t\t\t\ttagClass: 3, // CONTEXT-SPECIFIC\r\n\t\t\t\t\t\ttagNumber: 2 // [2]\r\n\t\t\t\t\t},\r\n\t\t\t\t\toptional: true,\r\n\t\t\t\t\tvalue: [AlgorithmIdentifier.schema(names.pSourceAlgorithm || {})]\r\n\t\t\t\t})\r\n\t\t\t]\r\n\t\t}));\r\n\t}\r\n\t//**********************************************************************************\r\n\t/**\r\n\t * Convert parsed asn1js object into current class\r\n\t * @param {!Object} schema\r\n\t */\r\n\tfromSchema(schema)\r\n\t{\r\n\t\t//region Clear input data first\r\n\t\tclearProps(schema, [\r\n\t\t\t\"hashAlgorithm\",\r\n\t\t\t\"maskGenAlgorithm\",\r\n\t\t\t\"pSourceAlgorithm\"\r\n\t\t]);\r\n\t\t//endregion\r\n\t\t\r\n\t\t//region Check the schema is valid\r\n\t\tconst asn1 = asn1js.compareSchema(schema,\r\n\t\t\tschema,\r\n\t\t\tRSAESOAEPParams.schema({\r\n\t\t\t\tnames: {\r\n\t\t\t\t\thashAlgorithm: {\r\n\t\t\t\t\t\tnames: {\r\n\t\t\t\t\t\t\tblockName: \"hashAlgorithm\"\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t},\r\n\t\t\t\t\tmaskGenAlgorithm: {\r\n\t\t\t\t\t\tnames: {\r\n\t\t\t\t\t\t\tblockName: \"maskGenAlgorithm\"\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t},\r\n\t\t\t\t\tpSourceAlgorithm: {\r\n\t\t\t\t\t\tnames: {\r\n\t\t\t\t\t\t\tblockName: \"pSourceAlgorithm\"\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t})\r\n\t\t);\r\n\r\n\t\tif(asn1.verified === false)\r\n\t\t\tthrow new Error(\"Object's schema was not verified against input data for RSAESOAEPParams\");\r\n\t\t//endregion\r\n\r\n\t\t//region Get internal properties from parsed schema\r\n\t\tif(\"hashAlgorithm\" in asn1.result)\r\n\t\t\tthis.hashAlgorithm = new AlgorithmIdentifier({ schema: asn1.result.hashAlgorithm });\r\n\r\n\t\tif(\"maskGenAlgorithm\" in asn1.result)\r\n\t\t\tthis.maskGenAlgorithm = new AlgorithmIdentifier({ schema: asn1.result.maskGenAlgorithm });\r\n\r\n\t\tif(\"pSourceAlgorithm\" in asn1.result)\r\n\t\t\tthis.pSourceAlgorithm = new AlgorithmIdentifier({ schema: asn1.result.pSourceAlgorithm });\r\n\t\t//endregion\r\n\t}\r\n\t//**********************************************************************************\r\n\t/**\r\n\t * Convert current object to asn1js object and set correct values\r\n\t * @returns {Object} asn1js object\r\n\t */\r\n\ttoSchema()\r\n\t{\r\n\t\t//region Create array for output sequence\r\n\t\tconst outputArray = [];\r\n\t\t\r\n\t\tif(!this.hashAlgorithm.isEqual(RSAESOAEPParams.defaultValues(\"hashAlgorithm\")))\r\n\t\t{\r\n\t\t\toutputArray.push(new asn1js.Constructed({\r\n\t\t\t\tidBlock: {\r\n\t\t\t\t\ttagClass: 3, // CONTEXT-SPECIFIC\r\n\t\t\t\t\ttagNumber: 0 // [0]\r\n\t\t\t\t},\r\n\t\t\t\tvalue: [this.hashAlgorithm.toSchema()]\r\n\t\t\t}));\r\n\t\t}\r\n\t\t\r\n\t\tif(!this.maskGenAlgorithm.isEqual(RSAESOAEPParams.defaultValues(\"maskGenAlgorithm\")))\r\n\t\t{\r\n\t\t\toutputArray.push(new asn1js.Constructed({\r\n\t\t\t\tidBlock: {\r\n\t\t\t\t\ttagClass: 3, // CONTEXT-SPECIFIC\r\n\t\t\t\t\ttagNumber: 1 // [1]\r\n\t\t\t\t},\r\n\t\t\t\tvalue: [this.maskGenAlgorithm.toSchema()]\r\n\t\t\t}));\r\n\t\t}\r\n\r\n\t\tif(!this.pSourceAlgorithm.isEqual(RSAESOAEPParams.defaultValues(\"pSourceAlgorithm\")))\r\n\t\t{\r\n\t\t\toutputArray.push(new asn1js.Constructed({\r\n\t\t\t\tidBlock: {\r\n\t\t\t\t\ttagClass: 3, // CONTEXT-SPECIFIC\r\n\t\t\t\t\ttagNumber: 2 // [2]\r\n\t\t\t\t},\r\n\t\t\t\tvalue: [this.pSourceAlgorithm.toSchema()]\r\n\t\t\t}));\r\n\t\t}\r\n\t\t//endregion\r\n\t\t\r\n\t\t//region Construct and return new ASN.1 schema for this object\r\n\t\treturn (new asn1js.Sequence({\r\n\t\t\tvalue: outputArray\r\n\t\t}));\r\n\t\t//endregion\r\n\t}\r\n\t//**********************************************************************************\r\n\t/**\r\n\t * Convertion for the class to JSON object\r\n\t * @returns {Object}\r\n\t */\r\n\ttoJSON()\r\n\t{\r\n\t\tconst object = {};\r\n\r\n\t\tif(!this.hashAlgorithm.isEqual(RSAESOAEPParams.defaultValues(\"hashAlgorithm\")))\r\n\t\t\tobject.hashAlgorithm = this.hashAlgorithm.toJSON();\r\n\r\n\t\tif(!this.maskGenAlgorithm.isEqual(RSAESOAEPParams.defaultValues(\"maskGenAlgorithm\")))\r\n\t\t\tobject.maskGenAlgorithm = this.maskGenAlgorithm.toJSON();\r\n\r\n\t\tif(!this.pSourceAlgorithm.isEqual(RSAESOAEPParams.defaultValues(\"pSourceAlgorithm\")))\r\n\t\t\tobject.pSourceAlgorithm = this.pSourceAlgorithm.toJSON();\r\n\r\n\t\treturn object;\r\n\t}\r\n\t//**********************************************************************************\r\n}\r\n//**************************************************************************************\r\n"],"file":"RSAESOAEPParams.js"}