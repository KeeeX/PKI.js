{"version":3,"sources":["../src/SafeBag.js"],"names":["SafeBag","parameters","bagId","defaultValues","bagValue","bagAttributes","fromSchema","schema","asn1","asn1js","compareSchema","names","verified","Error","result","valueBlock","toString","PrivateKeyInfo","PKCS8ShroudedKeyBag","CertBag","CRLBag","SecretBag","SafeContents","Array","from","element","Attribute","outputArray","ObjectIdentifier","value","Constructed","idBlock","tagClass","tagNumber","toSchema","push","Set","Sequence","output","toJSON","memberName","Any","memberValue","length","name","blockName","optional","Repeated"],"mappings":"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","sourcesContent":["import * as asn1js from \"asn1js\";\r\nimport { getParametersValue, clearProps } from \"pvutils\";\r\nimport Attribute from \"./Attribute.js\";\r\nimport PrivateKeyInfo from \"./PrivateKeyInfo.js\";\r\nimport PKCS8ShroudedKeyBag from \"./PKCS8ShroudedKeyBag.js\";\r\nimport CertBag from \"./CertBag.js\";\r\nimport CRLBag from \"./CRLBag.js\";\r\nimport SecretBag from \"./SecretBag.js\";\r\nimport SafeContents from \"./SafeContents.js\";\r\n//**************************************************************************************\r\n/**\r\n * Class from RFC7292\r\n */\r\nexport default class SafeBag\r\n{\r\n\t//**********************************************************************************\r\n\t/**\r\n\t * Constructor for SafeBag class\r\n\t * @param {Object} [parameters={}]\r\n\t * @param {Object} [parameters.schema] asn1js parsed value to initialize the class from\r\n\t */\r\n\tconstructor(parameters = {})\r\n\t{\r\n\t\t//region Internal properties of the object\r\n\t\t/**\r\n\t\t * @type {string}\r\n\t\t * @desc bagId\r\n\t\t */\r\n\t\tthis.bagId = getParametersValue(parameters, \"bagId\", SafeBag.defaultValues(\"bagId\"));\r\n\t\t/**\r\n\t\t * @type {*}\r\n\t\t * @desc bagValue\r\n\t\t */\r\n\t\tthis.bagValue = getParametersValue(parameters, \"bagValue\", SafeBag.defaultValues(\"bagValue\"));\r\n\t\t\r\n\t\tif(\"bagAttributes\" in parameters)\r\n\t\t\t/**\r\n\t\t\t * @type {Array.<Attribute>}\r\n\t\t\t * @desc bagAttributes\r\n\t\t\t */\r\n\t\t\tthis.bagAttributes = getParametersValue(parameters, \"bagAttributes\", SafeBag.defaultValues(\"bagAttributes\"));\r\n\t\t//endregion\r\n\t\t\r\n\t\t//region If input argument array contains \"schema\" for this object\r\n\t\tif(\"schema\" in parameters)\r\n\t\t\tthis.fromSchema(parameters.schema);\r\n\t\t//endregion\r\n\t}\r\n\t//**********************************************************************************\r\n\t/**\r\n\t * Return default values for all class members\r\n\t * @param {string} memberName String name for a class member\r\n\t */\r\n\tstatic defaultValues(memberName)\r\n\t{\r\n\t\tswitch(memberName)\r\n\t\t{\r\n\t\t\tcase \"bagId\":\r\n\t\t\t\treturn \"\";\r\n\t\t\tcase \"bagValue\":\r\n\t\t\t\treturn (new asn1js.Any());\r\n\t\t\tcase \"bagAttributes\":\r\n\t\t\t\treturn [];\r\n\t\t\tdefault:\r\n\t\t\t\tthrow new Error(`Invalid member name for SafeBag class: ${memberName}`);\r\n\t\t}\r\n\t}\r\n\t//**********************************************************************************\r\n\t/**\r\n\t * Compare values with default values for all class members\r\n\t * @param {string} memberName String name for a class member\r\n\t * @param {*} memberValue Value to compare with default value\r\n\t */\r\n\tstatic compareWithDefault(memberName, memberValue)\r\n\t{\r\n\t\tswitch(memberName)\r\n\t\t{\r\n\t\t\tcase \"bagId\":\r\n\t\t\t\treturn (memberValue === \"\");\r\n\t\t\tcase \"bagValue\":\r\n\t\t\t\treturn (memberValue instanceof asn1js.Any);\r\n\t\t\tcase \"bagAttributes\":\r\n\t\t\t\treturn (memberValue.length === 0);\r\n\t\t\tdefault:\r\n\t\t\t\tthrow new Error(`Invalid member name for SafeBag class: ${memberName}`);\r\n\t\t}\r\n\t}\r\n\t//**********************************************************************************\r\n\t/**\r\n\t * Return value of pre-defined ASN.1 schema for current class\r\n\t *\r\n\t * ASN.1 schema:\r\n\t * ```asn1\r\n\t * SafeBag ::= SEQUENCE {\r\n\t *    bagId\t      \tBAG-TYPE.&id ({PKCS12BagSet}),\r\n\t *    bagValue      [0] EXPLICIT BAG-TYPE.&Type({PKCS12BagSet}{@bagId}),\r\n\t *    bagAttributes SET OF PKCS12Attribute OPTIONAL\r\n\t * }\r\n\t * ```\r\n\t *\r\n\t * @param {Object} parameters Input parameters for the schema\r\n\t * @returns {Object} asn1js schema object\r\n\t */\r\n\tstatic schema(parameters = {})\r\n\t{\r\n\t\t/**\r\n\t\t * @type {Object}\r\n\t\t * @property {string} [blockName]\r\n\t\t * @property {string} [bagId]\r\n\t\t * @property {string} [bagValue]\r\n\t\t * @property {string} [bagAttributes]\r\n\t\t */\r\n\t\tconst names = getParametersValue(parameters, \"names\", {});\r\n\t\t\r\n\t\treturn (new asn1js.Sequence({\r\n\t\t\tname: (names.blockName || \"\"),\r\n\t\t\tvalue: [\r\n\t\t\t\tnew asn1js.ObjectIdentifier({ name: (names.bagId || \"bagId\") }),\r\n\t\t\t\tnew asn1js.Constructed({\r\n\t\t\t\t\tidBlock: {\r\n\t\t\t\t\t\ttagClass: 3, // CONTEXT-SPECIFIC\r\n\t\t\t\t\t\ttagNumber: 0 // [0]\r\n\t\t\t\t\t},\r\n\t\t\t\t\tvalue: [new asn1js.Any({ name: (names.bagValue || \"bagValue\") })] // EXPLICIT ANY value\r\n\t\t\t\t}),\r\n\t\t\t\tnew asn1js.Set({\r\n\t\t\t\t\toptional: true,\r\n\t\t\t\t\tvalue: [\r\n\t\t\t\t\t\tnew asn1js.Repeated({\r\n\t\t\t\t\t\t\tname: (names.bagAttributes || \"bagAttributes\"),\r\n\t\t\t\t\t\t\tvalue: Attribute.schema()\r\n\t\t\t\t\t\t})\r\n\t\t\t\t\t]\r\n\t\t\t\t})\r\n\t\t\t]\r\n\t\t}));\r\n\t}\r\n\t//**********************************************************************************\r\n\t/**\r\n\t * Convert parsed asn1js object into current class\r\n\t * @param {!Object} schema\r\n\t */\r\n\tfromSchema(schema)\r\n\t{\r\n\t\t//region Clear input data first\r\n\t\tclearProps(schema, [\r\n\t\t\t\"bagId\",\r\n\t\t\t\"bagValue\",\r\n\t\t\t\"bagAttributes\"\r\n\t\t]);\r\n\t\t//endregion\r\n\t\t\r\n\t\t//region Check the schema is valid\r\n\t\tconst asn1 = asn1js.compareSchema(schema,\r\n\t\t\tschema,\r\n\t\t\tSafeBag.schema({\r\n\t\t\t\tnames: {\r\n\t\t\t\t\tbagId: \"bagId\",\r\n\t\t\t\t\tbagValue: \"bagValue\",\r\n\t\t\t\t\tbagAttributes: \"bagAttributes\"\r\n\t\t\t\t}\r\n\t\t\t})\r\n\t\t);\r\n\t\t\r\n\t\tif(asn1.verified === false)\r\n\t\t\tthrow new Error(\"Object's schema was not verified against input data for SafeBag\");\r\n\t\t//endregion\r\n\t\t\r\n\t\t//region Get internal properties from parsed schema\r\n\t\tthis.bagId = asn1.result.bagId.valueBlock.toString();\r\n\t\t\r\n\t\tswitch(this.bagId)\r\n\t\t{\r\n\t\t\tcase \"1.2.840.113549.1.12.10.1.1\": // keyBag\r\n\t\t\t\tthis.bagValue = new PrivateKeyInfo({ schema: asn1.result.bagValue });\r\n\t\t\t\tbreak;\r\n\t\t\tcase \"1.2.840.113549.1.12.10.1.2\": // pkcs8ShroudedKeyBag\r\n\t\t\t\tthis.bagValue = new PKCS8ShroudedKeyBag({ schema: asn1.result.bagValue });\r\n\t\t\t\tbreak;\r\n\t\t\tcase \"1.2.840.113549.1.12.10.1.3\": // certBag\r\n\t\t\t\tthis.bagValue = new CertBag({ schema: asn1.result.bagValue });\r\n\t\t\t\tbreak;\r\n\t\t\tcase \"1.2.840.113549.1.12.10.1.4\": // crlBag\r\n\t\t\t\tthis.bagValue = new CRLBag({ schema: asn1.result.bagValue });\r\n\t\t\t\tbreak;\r\n\t\t\tcase \"1.2.840.113549.1.12.10.1.5\": // secretBag\r\n\t\t\t\tthis.bagValue = new SecretBag({ schema: asn1.result.bagValue });\r\n\t\t\t\tbreak;\r\n\t\t\tcase \"1.2.840.113549.1.12.10.1.6\": // safeContentsBag\r\n\t\t\t\tthis.bagValue = new SafeContents({ schema: asn1.result.bagValue });\r\n\t\t\t\tbreak;\r\n\t\t\tdefault:\r\n\t\t\t\tthrow new Error(`Invalid \"bagId\" for SafeBag: ${this.bagId}`);\r\n\t\t}\r\n\t\t\r\n\t\tif(\"bagAttributes\" in asn1.result)\r\n\t\t\tthis.bagAttributes = Array.from(asn1.result.bagAttributes, element => new Attribute({ schema: element }));\r\n\t\t//endregion\r\n\t}\r\n\t//**********************************************************************************\r\n\t/**\r\n\t * Convert current object to asn1js object and set correct values\r\n\t * @returns {Object} asn1js object\r\n\t */\r\n\ttoSchema()\r\n\t{\r\n\t\t//region Construct and return new ASN.1 schema for this object\r\n\t\tconst outputArray = [\r\n\t\t\tnew asn1js.ObjectIdentifier({ value: this.bagId }),\r\n\t\t\tnew asn1js.Constructed({\r\n\t\t\t\tidBlock: {\r\n\t\t\t\t\ttagClass: 3, // CONTEXT-SPECIFIC\r\n\t\t\t\t\ttagNumber: 0 // [0]\r\n\t\t\t\t},\r\n\t\t\t\tvalue: [this.bagValue.toSchema()]\r\n\t\t\t})\r\n\t\t];\r\n\t\t\r\n\t\tif(\"bagAttributes\" in this)\r\n\t\t{\r\n\t\t\toutputArray.push(new asn1js.Set({\r\n\t\t\t\tvalue: Array.from(this.bagAttributes, element => element.toSchema())\r\n\t\t\t}));\r\n\t\t}\r\n\t\t\r\n\t\treturn (new asn1js.Sequence({\r\n\t\t\tvalue: outputArray\r\n\t\t}));\r\n\t\t//endregion\r\n\t}\r\n\t//**********************************************************************************\r\n\t/**\r\n\t * Convertion for the class to JSON object\r\n\t * @returns {Object}\r\n\t */\r\n\ttoJSON()\r\n\t{\r\n\t\tconst output = {\r\n\t\t\tbagId: this.bagId,\r\n\t\t\tbagValue: this.bagValue.toJSON()\r\n\t\t};\r\n\t\t\r\n\t\tif(\"bagAttributes\" in this)\r\n\t\t\toutput.bagAttributes = Array.from(this.bagAttributes, element => element.toJSON());\r\n\t\t\r\n\t\treturn output;\r\n\t}\r\n\t//**********************************************************************************\r\n}\r\n//**************************************************************************************\r\n"],"file":"SafeBag.js"}