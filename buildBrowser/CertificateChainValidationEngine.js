"use strict";Object.defineProperty(exports,"__esModule",{value:true});exports.default=void 0;var _pvutils=require("pvutils");var _common=require("./common.js");function _toConsumableArray(arr){return _arrayWithoutHoles(arr)||_iterableToArray(arr)||_nonIterableSpread();}function _nonIterableSpread(){throw new TypeError("Invalid attempt to spread non-iterable instance");}function _iterableToArray(iter){if(Symbol.iterator in Object(iter)||Object.prototype.toString.call(iter)==="[object Arguments]")return Array.from(iter);}function _arrayWithoutHoles(arr){if(Array.isArray(arr)){for(var i=0,arr2=new Array(arr.length);i<arr.length;i++){arr2[i]=arr[i];}return arr2;}}function asyncGeneratorStep(gen,resolve,reject,_next,_throw,key,arg){try{var info=gen[key](arg);var value=info.value;}catch(error){reject(error);return;}if(info.done){resolve(value);}else{Promise.resolve(value).then(_next,_throw);}}function _asyncToGenerator(fn){return function(){var self=this,args=arguments;return new Promise(function(resolve,reject){var gen=fn.apply(self,args);function _next(value){asyncGeneratorStep(gen,resolve,reject,_next,_throw,"next",value);}function _throw(err){asyncGeneratorStep(gen,resolve,reject,_next,_throw,"throw",err);}_next(undefined);});};}function _classCallCheck(instance,Constructor){if(!(instance instanceof Constructor)){throw new TypeError("Cannot call a class as a function");}}function _defineProperties(target,props){for(var i=0;i<props.length;i++){var descriptor=props[i];descriptor.enumerable=descriptor.enumerable||false;descriptor.configurable=true;if("value"in descriptor)descriptor.writable=true;Object.defineProperty(target,descriptor.key,descriptor);}}function _createClass(Constructor,protoProps,staticProps){if(protoProps)_defineProperties(Constructor.prototype,protoProps);if(staticProps)_defineProperties(Constructor,staticProps);return Constructor;}//**************************************************************************************
var CertificateChainValidationEngine=/*#__PURE__*/function(){//**********************************************************************************
/**
	 * Constructor for CertificateChainValidationEngine class
	 * @param {Object} [parameters={}]
	 * @param {Object} [parameters.schema] asn1js parsed value to initialize the class from
	 */function CertificateChainValidationEngine(){var parameters=arguments.length>0&&arguments[0]!==undefined?arguments[0]:{};_classCallCheck(this,CertificateChainValidationEngine);//region Internal properties of the object
/**
		 * @type {Array.<Certificate>}
		 * @desc Array of pre-defined trusted (by user) certificates
		 */this.trustedCerts=(0,_pvutils.getParametersValue)(parameters,"trustedCerts",this.defaultValues("trustedCerts"));/**
		 * @type {Array.<Certificate>}
		 * @desc Array with certificate chain. Could be only one end-user certificate in there!
		 */this.certs=(0,_pvutils.getParametersValue)(parameters,"certs",this.defaultValues("certs"));/**
		 * @type {Array.<CertificateRevocationList>}
		 * @desc Array of all CRLs for all certificates from certificate chain
		 */this.crls=(0,_pvutils.getParametersValue)(parameters,"crls",this.defaultValues("crls"));/**
		 * @type {Array}
		 * @desc Array of all OCSP responses
		 */this.ocsps=(0,_pvutils.getParametersValue)(parameters,"ocsps",this.defaultValues("ocsps"));/**
		 * @type {Date}
		 * @desc The date at which the check would be
		 */this.checkDate=(0,_pvutils.getParametersValue)(parameters,"checkDate",this.defaultValues("checkDate"));/**
		 * @type {Function}
		 * @desc The date at which the check would be
		 */this.findOrigin=(0,_pvutils.getParametersValue)(parameters,"findOrigin",this.defaultValues("findOrigin"));/**
		 * @type {Function}
		 * @desc The date at which the check would be
		 */this.findIssuer=(0,_pvutils.getParametersValue)(parameters,"findIssuer",this.defaultValues("findIssuer"));//endregion
}//**********************************************************************************
_createClass(CertificateChainValidationEngine,[{key:"defaultFindIssuer",//**********************************************************************************
value:function(){var _defaultFindIssuer=_asyncToGenerator(/*#__PURE__*/regeneratorRuntime.mark(function _callee(certificate,validationEngine){var result,keyIdentifier,authorityCertIssuer,authorityCertSerialNumber,verificationResult,_iteratorNormalCompletion,_didIteratorError,_iteratorError,_iterator,_step,extension,checkCertificate,_iteratorNormalCompletion3,_didIteratorError3,_iteratorError3,_iterator3,_step3,trustedCert,_iteratorNormalCompletion4,_didIteratorError4,_iteratorError4,_iterator4,_step4,intermediateCert,i,_verificationResult;return regeneratorRuntime.wrap(function _callee$(_context){while(1){switch(_context.prev=_context.next){case 0:checkCertificate=function _ref(possibleIssuer){//region Firstly search for appropriate extensions
if(keyIdentifier!==null){if("extensions"in possibleIssuer){var extensionFound=false;var _iteratorNormalCompletion2=true;var _didIteratorError2=false;var _iteratorError2=undefined;try{for(var _iterator2=possibleIssuer.extensions[Symbol.iterator](),_step2;!(_iteratorNormalCompletion2=(_step2=_iterator2.next()).done);_iteratorNormalCompletion2=true){var _extension=_step2.value;if(_extension.extnID==="2.5.29.14")// SubjectKeyIdentifier
{extensionFound=true;if((0,_pvutils.isEqualBuffer)(_extension.parsedValue.valueBlock.valueHex,keyIdentifier.valueBlock.valueHex))result.push(possibleIssuer);break;}}}catch(err){_didIteratorError2=true;_iteratorError2=err;}finally{try{if(!_iteratorNormalCompletion2&&_iterator2.return!=null){_iterator2.return();}}finally{if(_didIteratorError2){throw _iteratorError2;}}}if(extensionFound)return;}}//endregion
//region Now search for authorityCertSerialNumber
var authorityCertSerialNumberEqual=false;if(authorityCertSerialNumber!==null)authorityCertSerialNumberEqual=possibleIssuer.serialNumber.isEqual(authorityCertSerialNumber);//endregion
//region And at least search for Issuer data
if(authorityCertIssuer!==null){if(possibleIssuer.subject.isEqual(authorityCertIssuer)){if(authorityCertSerialNumberEqual)result.push(possibleIssuer);}}else{if(certificate.issuer.isEqual(possibleIssuer.subject))result.push(possibleIssuer);}//endregion
};//region Initial variables
result=[];keyIdentifier=null;authorityCertIssuer=null;authorityCertSerialNumber=null;//endregion
//region Speed-up searching in case of self-signed certificates
if(!certificate.subject.isEqual(certificate.issuer)){_context.next=16;break;}_context.prev=6;_context.next=9;return certificate.verify();case 9:verificationResult=_context.sent;if(!(verificationResult===true)){_context.next=12;break;}return _context.abrupt("return",[certificate]);case 12:_context.next=16;break;case 14:_context.prev=14;_context.t0=_context["catch"](6);case 16:if(!("extensions"in certificate)){_context.next=44;break;}_iteratorNormalCompletion=true;_didIteratorError=false;_iteratorError=undefined;_context.prev=20;_iterator=certificate.extensions[Symbol.iterator]();case 22:if(_iteratorNormalCompletion=(_step=_iterator.next()).done){_context.next=30;break;}extension=_step.value;if(!(extension.extnID==="2.5.29.35")){_context.next=27;break;}if("keyIdentifier"in extension.parsedValue)keyIdentifier=extension.parsedValue.keyIdentifier;else{if("authorityCertIssuer"in extension.parsedValue)authorityCertIssuer=extension.parsedValue.authorityCertIssuer;if("authorityCertSerialNumber"in extension.parsedValue)authorityCertSerialNumber=extension.parsedValue.authorityCertSerialNumber;}return _context.abrupt("break",30);case 27:_iteratorNormalCompletion=true;_context.next=22;break;case 30:_context.next=36;break;case 32:_context.prev=32;_context.t1=_context["catch"](20);_didIteratorError=true;_iteratorError=_context.t1;case 36:_context.prev=36;_context.prev=37;if(!_iteratorNormalCompletion&&_iterator.return!=null){_iterator.return();}case 39:_context.prev=39;if(!_didIteratorError){_context.next=42;break;}throw _iteratorError;case 42:return _context.finish(39);case 43:return _context.finish(36);case 44://endregion
//region Search in Trusted Certificates
_iteratorNormalCompletion3=true;_didIteratorError3=false;_iteratorError3=undefined;_context.prev=47;for(_iterator3=validationEngine.trustedCerts[Symbol.iterator]();!(_iteratorNormalCompletion3=(_step3=_iterator3.next()).done);_iteratorNormalCompletion3=true){trustedCert=_step3.value;checkCertificate(trustedCert);}//endregion
//region Search in Intermediate Certificates
_context.next=55;break;case 51:_context.prev=51;_context.t2=_context["catch"](47);_didIteratorError3=true;_iteratorError3=_context.t2;case 55:_context.prev=55;_context.prev=56;if(!_iteratorNormalCompletion3&&_iterator3.return!=null){_iterator3.return();}case 58:_context.prev=58;if(!_didIteratorError3){_context.next=61;break;}throw _iteratorError3;case 61:return _context.finish(58);case 62:return _context.finish(55);case 63:_iteratorNormalCompletion4=true;_didIteratorError4=false;_iteratorError4=undefined;_context.prev=66;for(_iterator4=validationEngine.certs[Symbol.iterator]();!(_iteratorNormalCompletion4=(_step4=_iterator4.next()).done);_iteratorNormalCompletion4=true){intermediateCert=_step4.value;checkCertificate(intermediateCert);}//endregion
//region Now perform certificate verification checking
_context.next=74;break;case 70:_context.prev=70;_context.t3=_context["catch"](66);_didIteratorError4=true;_iteratorError4=_context.t3;case 74:_context.prev=74;_context.prev=75;if(!_iteratorNormalCompletion4&&_iterator4.return!=null){_iterator4.return();}case 77:_context.prev=77;if(!_didIteratorError4){_context.next=80;break;}throw _iteratorError4;case 80:return _context.finish(77);case 81:return _context.finish(74);case 82:i=0;case 83:if(!(i<result.length)){_context.next=97;break;}_context.prev=84;_context.next=87;return certificate.verify(result[i]);case 87:_verificationResult=_context.sent;if(_verificationResult===false)result.splice(i,1);_context.next=94;break;case 91:_context.prev=91;_context.t4=_context["catch"](84);result.splice(i,1);// Something wrong, remove the certificate
case 94:i++;_context.next=83;break;case 97:return _context.abrupt("return",result);case 98:case"end":return _context.stop();}}},_callee,this,[[6,14],[20,32,36,44],[37,,39,43],[47,51,55,63],[56,,58,62],[66,70,74,82],[75,,77,81],[84,91]]);}));function defaultFindIssuer(_x,_x2){return _defaultFindIssuer.apply(this,arguments);}return defaultFindIssuer;}()//**********************************************************************************
/**
	 * Return default values for all class members
	 * @param {string} memberName String name for a class member
	 */},{key:"defaultValues",value:function defaultValues(memberName){switch(memberName){case"trustedCerts":return[];case"certs":return[];case"crls":return[];case"ocsps":return[];case"checkDate":return new Date();case"findOrigin":return CertificateChainValidationEngine.defaultFindOrigin;case"findIssuer":return this.defaultFindIssuer;default:throw new Error("Invalid member name for CertificateChainValidationEngine class: ".concat(memberName));}}//**********************************************************************************
},{key:"sort",value:function(){var _sort=_asyncToGenerator(/*#__PURE__*/regeneratorRuntime.mark(function _callee7(){var passedWhenNotRevValues,localCerts,_this,buildPath,_buildPath,findCRL,_findCRL,findOCSP,_findOCSP,checkForCA,_checkForCA,basicCheck,_basicCheck,i,j,result,certificatePath,_i,found,_j,certificate,k,shortestLength,shortestIndex,_i2,_i3,_args7=arguments;return regeneratorRuntime.wrap(function _callee7$(_context7){while(1){switch(_context7.prev=_context7.next){case 0:_basicCheck=function _ref12(){_basicCheck=_asyncToGenerator(/*#__PURE__*/regeneratorRuntime.mark(function _callee6(path,checkDate){var _i8,_i9,_i10,ocspResult,crlResult,_j6,isCertificateRevoked,isCertificateCA,issuerCertificate,extensionFound,_iteratorNormalCompletion5,_didIteratorError5,_iteratorError5,_iterator5,_step5,extension,_i11,_result3;return regeneratorRuntime.wrap(function _callee6$(_context6){while(1){switch(_context6.prev=_context6.next){case 0:_i8=0;case 1:if(!(_i8<path.length)){_context6.next=7;break;}if(!(path[_i8].notBefore.value>checkDate||path[_i8].notAfter.value<checkDate)){_context6.next=4;break;}return _context6.abrupt("return",{result:false,resultCode:8,resultMessage:"The certificate is either not yet valid or expired"});case 4:_i8++;_context6.next=1;break;case 7:if(!(path.length<2)){_context6.next=9;break;}return _context6.abrupt("return",{result:false,resultCode:9,resultMessage:"Too short certificate path"});case 9:_i9=path.length-2;case 10:if(!(_i9>=0)){_context6.next=17;break;}if(!(path[_i9].issuer.isEqual(path[_i9].subject)===false)){_context6.next=14;break;}if(!(path[_i9].issuer.isEqual(path[_i9+1].subject)===false)){_context6.next=14;break;}return _context6.abrupt("return",{result:false,resultCode:10,resultMessage:"Incorrect name chaining"});case 14:_i9--;_context6.next=10;break;case 17:if(!(_this.crls.length!==0||_this.ocsps.length!==0)){_context6.next=96;break;}_i10=0;case 19:if(!(_i10<path.length-1)){_context6.next=96;break;}//region Initial variables
ocspResult=2;crlResult={status:0,statusMessage:""};//endregion
//region Check OCSPs first
if(!(_this.ocsps.length!==0)){_context6.next=32;break;}_context6.next=25;return findOCSP(path[_i10],path[_i10+1]);case 25:ocspResult=_context6.sent;_context6.t0=ocspResult;_context6.next=_context6.t0===0?29:_context6.t0===1?30:_context6.t0===2?31:32;break;case 29:return _context6.abrupt("continue",93);case 30:return _context6.abrupt("return",{result:false,resultCode:12,resultMessage:"One of certificates was revoked via OCSP response"});case 31:return _context6.abrupt("break",32);case 32:if(!(_this.crls.length!==0)){_context6.next=56;break;}_context6.next=35;return findCRL(path[_i10]);case 35:crlResult=_context6.sent;if(!(crlResult.status===0)){_context6.next=52;break;}_j6=0;case 38:if(!(_j6<crlResult.result.length)){_context6.next=50;break;}//region Check that the CRL issuer certificate have not been revoked
isCertificateRevoked=crlResult.result[_j6].crl.isCertificateRevoked(path[_i10]);if(!isCertificateRevoked){_context6.next=42;break;}return _context6.abrupt("return",{result:false,resultCode:12,resultMessage:"One of certificates had been revoked"});case 42:_context6.next=44;return checkForCA(crlResult.result[_j6].certificate,true);case 44:isCertificateCA=_context6.sent;if(!(isCertificateCA.result===false)){_context6.next=47;break;}return _context6.abrupt("return",{result:false,resultCode:13,resultMessage:"CRL issuer certificate is not a CA certificate or does not have crlSign flag"});case 47:_j6++;_context6.next=38;break;case 50:_context6.next=54;break;case 52:if(!(passedWhenNotRevValues===false)){_context6.next=54;break;}throw{result:false,resultCode:11,resultMessage:"No revocation values found for one of certificates: ".concat(crlResult.statusMessage)};case 54:_context6.next=58;break;case 56:if(!(ocspResult===2)){_context6.next=58;break;}return _context6.abrupt("return",{result:false,resultCode:11,resultMessage:"No revocation values found for one of certificates"});case 58:if(!(ocspResult===2&&crlResult.status===2&&passedWhenNotRevValues)){_context6.next=93;break;}issuerCertificate=path[_i10+1];extensionFound=false;if(!("extensions"in issuerCertificate)){_context6.next=91;break;}_iteratorNormalCompletion5=true;_didIteratorError5=false;_iteratorError5=undefined;_context6.prev=65;_iterator5=issuerCertificate.extensions[Symbol.iterator]();case 67:if(_iteratorNormalCompletion5=(_step5=_iterator5.next()).done){_context6.next=77;break;}extension=_step5.value;_context6.t1=extension.extnID;_context6.next=_context6.t1==="2.5.29.31"?72:_context6.t1==="2.5.29.46"?72:_context6.t1==="1.3.6.1.5.5.7.1.1"?72:74;break;case 72:// AuthorityInfoAccess
extensionFound=true;return _context6.abrupt("break",74);case 74:_iteratorNormalCompletion5=true;_context6.next=67;break;case 77:_context6.next=83;break;case 79:_context6.prev=79;_context6.t2=_context6["catch"](65);_didIteratorError5=true;_iteratorError5=_context6.t2;case 83:_context6.prev=83;_context6.prev=84;if(!_iteratorNormalCompletion5&&_iterator5.return!=null){_iterator5.return();}case 86:_context6.prev=86;if(!_didIteratorError5){_context6.next=89;break;}throw _iteratorError5;case 89:return _context6.finish(86);case 90:return _context6.finish(83);case 91:if(!extensionFound){_context6.next=93;break;}throw{result:false,resultCode:11,resultMessage:"No revocation values found for one of certificates: ".concat(crlResult.statusMessage)};case 93:_i10++;_context6.next=19;break;case 96:_i11=1;case 97:if(!(_i11<path.length)){_context6.next=106;break;}_context6.next=100;return checkForCA(path[_i11]);case 100:_result3=_context6.sent;if(!(_result3.result===false)){_context6.next=103;break;}return _context6.abrupt("return",{result:false,resultCode:14,resultMessage:"One of intermediate certificates is not a CA certificate"});case 103:_i11++;_context6.next=97;break;case 106:return _context6.abrupt("return",{result:true});case 107:case"end":return _context6.stop();}}},_callee6,this,[[65,79,83,91],[84,,86,90]]);}));return _basicCheck.apply(this,arguments);};basicCheck=function _ref11(_x8,_x9){return _basicCheck.apply(this,arguments);};_checkForCA=function _ref10(){_checkForCA=_asyncToGenerator(/*#__PURE__*/regeneratorRuntime.mark(function _callee5(certificate){var needToCheckCRL,isCA,mustBeCA,keyUsagePresent,cRLSign,_j5,view,_args5=arguments;return regeneratorRuntime.wrap(function _callee5$(_context5){while(1){switch(_context5.prev=_context5.next){case 0:needToCheckCRL=_args5.length>1&&_args5[1]!==undefined?_args5[1]:false;//region Initial variables
isCA=false;mustBeCA=false;keyUsagePresent=false;cRLSign=false;//endregion
if(!("extensions"in certificate)){_context5.next=21;break;}_j5=0;case 7:if(!(_j5<certificate.extensions.length)){_context5.next=15;break;}if(!(certificate.extensions[_j5].critical===true&&"parsedValue"in certificate.extensions[_j5]===false)){_context5.next=10;break;}return _context5.abrupt("return",{result:false,resultCode:6,resultMessage:"Unable to parse critical certificate extension: ".concat(certificate.extensions[_j5].extnID)});case 10:if(certificate.extensions[_j5].extnID==="2.5.29.15")// KeyUsage
{keyUsagePresent=true;view=new Uint8Array(certificate.extensions[_j5].parsedValue.valueBlock.valueHex);if((view[0]&0x04)===0x04)// Set flag "keyCertSign"
mustBeCA=true;if((view[0]&0x02)===0x02)// Set flag "cRLSign"
cRLSign=true;}if(certificate.extensions[_j5].extnID==="2.5.29.19")// BasicConstraints
{if("cA"in certificate.extensions[_j5].parsedValue){if(certificate.extensions[_j5].parsedValue.cA===true)isCA=true;}}case 12:_j5++;_context5.next=7;break;case 15:if(!(mustBeCA===true&&isCA===false)){_context5.next=17;break;}return _context5.abrupt("return",{result:false,resultCode:3,resultMessage:"Unable to build certificate chain - using \"keyCertSign\" flag set without BasicConstaints"});case 17:if(!(keyUsagePresent===true&&isCA===true&&mustBeCA===false)){_context5.next=19;break;}return _context5.abrupt("return",{result:false,resultCode:4,resultMessage:"Unable to build certificate chain - \"keyCertSign\" flag was not set"});case 19:if(!(isCA===true&&keyUsagePresent===true&&needToCheckCRL&&cRLSign===false)){_context5.next=21;break;}return _context5.abrupt("return",{result:false,resultCode:5,resultMessage:"Unable to build certificate chain - intermediate certificate must have \"cRLSign\" key usage flag"});case 21:if(!(isCA===false)){_context5.next=23;break;}return _context5.abrupt("return",{result:false,resultCode:7,resultMessage:"Unable to build certificate chain - more than one possible end-user certificate"});case 23:return _context5.abrupt("return",{result:true,resultCode:0,resultMessage:""});case 24:case"end":return _context5.stop();}}},_callee5,this);}));return _checkForCA.apply(this,arguments);};checkForCA=function _ref9(_x7){return _checkForCA.apply(this,arguments);};_findOCSP=function _ref8(){_findOCSP=_asyncToGenerator(/*#__PURE__*/regeneratorRuntime.mark(function _callee4(certificate,issuerCertificate){var hashAlgorithm,_i7,_result2;return regeneratorRuntime.wrap(function _callee4$(_context4){while(1){switch(_context4.prev=_context4.next){case 0://region Get hash algorithm from certificate
hashAlgorithm=(0,_common.getAlgorithmByOID)(certificate.signatureAlgorithm.algorithmId);if(!("name"in hashAlgorithm===false)){_context4.next=3;break;}return _context4.abrupt("return",1);case 3:if(!("hash"in hashAlgorithm===false)){_context4.next=5;break;}return _context4.abrupt("return",1);case 5:_i7=0;case 6:if(!(_i7<_this.ocsps.length)){_context4.next=17;break;}_context4.next=9;return _this.ocsps[_i7].getCertificateStatus(certificate,issuerCertificate);case 9:_result2=_context4.sent;if(!_result2.isForCertificate){_context4.next=14;break;}if(!(_result2.status===0)){_context4.next=13;break;}return _context4.abrupt("return",0);case 13:return _context4.abrupt("return",1);case 14:_i7++;_context4.next=6;break;case 17:return _context4.abrupt("return",2);case 18:case"end":return _context4.stop();}}},_callee4,this);}));return _findOCSP.apply(this,arguments);};findOCSP=function _ref7(_x5,_x6){return _findOCSP.apply(this,arguments);};_findCRL=function _ref6(){_findCRL=_asyncToGenerator(/*#__PURE__*/regeneratorRuntime.mark(function _callee3(certificate){var issuerCertificates,crls,crlsAndCertificates,_i6,_j4,_result;return regeneratorRuntime.wrap(function _callee3$(_context3){while(1){switch(_context3.prev=_context3.next){case 0://region Initial variables
issuerCertificates=[];crls=[];crlsAndCertificates=[];//endregion
//region Find all possible CRL issuers
issuerCertificates.push.apply(issuerCertificates,_toConsumableArray(localCerts.filter(function(element){return certificate.issuer.isEqual(element.subject);})));if(!(issuerCertificates.length===0)){_context3.next=6;break;}return _context3.abrupt("return",{status:1,statusMessage:"No certificate's issuers"});case 6://endregion
//region Find all CRLs for certificate's issuer
crls.push.apply(crls,_toConsumableArray(_this.crls.filter(function(element){return element.issuer.isEqual(certificate.issuer);})));if(!(crls.length===0)){_context3.next=9;break;}return _context3.abrupt("return",{status:2,statusMessage:"No CRLs for specific certificate issuer"});case 9:_i6=0;case 10:if(!(_i6<crls.length)){_context3.next=32;break;}if(!(crls[_i6].nextUpdate.value<_this.checkDate)){_context3.next=13;break;}return _context3.abrupt("continue",29);case 13:_j4=0;case 14:if(!(_j4<issuerCertificates.length)){_context3.next=29;break;}_context3.prev=15;_context3.next=18;return crls[_i6].verify({issuerCertificate:issuerCertificates[_j4]});case 18:_result=_context3.sent;if(!_result){_context3.next=22;break;}crlsAndCertificates.push({crl:crls[_i6],certificate:issuerCertificates[_j4]});return _context3.abrupt("break",29);case 22:_context3.next=26;break;case 24:_context3.prev=24;_context3.t0=_context3["catch"](15);case 26:_j4++;_context3.next=14;break;case 29:_i6++;_context3.next=10;break;case 32:if(!crlsAndCertificates.length){_context3.next=34;break;}return _context3.abrupt("return",{status:0,statusMessage:"",result:crlsAndCertificates});case 34:return _context3.abrupt("return",{status:3,statusMessage:"No valid CRLs found"});case 35:case"end":return _context3.stop();}}},_callee3,this,[[15,24]]);}));return _findCRL.apply(this,arguments);};findCRL=function _ref5(_x4){return _findCRL.apply(this,arguments);};_buildPath=function _ref4(){_buildPath=_asyncToGenerator(/*#__PURE__*/regeneratorRuntime.mark(function _callee2(certificate){var result,checkUnique,findIssuerResult,_i5,buildPathResult,_j3,copy;return regeneratorRuntime.wrap(function _callee2$(_context2){while(1){switch(_context2.prev=_context2.next){case 0:checkUnique=function _ref2(array){var unique=true;for(var _i4=0;_i4<array.length;_i4++){for(var _j2=0;_j2<array.length;_j2++){if(_j2===_i4)continue;if(array[_i4]===array[_j2]){unique=false;break;}}if(!unique)break;}return unique;};result=[];//region Aux function checking array for unique elements
_context2.next=4;return _this.findIssuer(certificate,_this);case 4:findIssuerResult=_context2.sent;if(!(findIssuerResult.length===0)){_context2.next=7;break;}throw new Error("No valid certificate paths found");case 7:_i5=0;case 8:if(!(_i5<findIssuerResult.length)){_context2.next=19;break;}if(!(0,_pvutils.isEqualBuffer)(findIssuerResult[_i5].tbs,certificate.tbs)){_context2.next=12;break;}result.push([findIssuerResult[_i5]]);return _context2.abrupt("continue",16);case 12:_context2.next=14;return buildPath(findIssuerResult[_i5]);case 14:buildPathResult=_context2.sent;for(_j3=0;_j3<buildPathResult.length;_j3++){copy=buildPathResult[_j3].slice();copy.splice(0,0,findIssuerResult[_i5]);if(checkUnique(copy))result.push(copy);else result.push(buildPathResult[_j3]);}case 16:_i5++;_context2.next=8;break;case 19:return _context2.abrupt("return",result);case 20:case"end":return _context2.stop();}}},_callee2,this);}));return _buildPath.apply(this,arguments);};buildPath=function _ref3(_x3){return _buildPath.apply(this,arguments);};passedWhenNotRevValues=_args7.length>0&&_args7[0]!==undefined?_args7[0]:false;//region Initial variables
localCerts=[];_this=this;//endregion
//region Building certificate path
//endregion
//region Do main work
//region Initialize "localCerts" by value of "_this.certs" + "_this.trustedCerts" arrays
localCerts.push.apply(localCerts,_toConsumableArray(_this.trustedCerts));localCerts.push.apply(localCerts,_toConsumableArray(_this.certs));//endregion
//region Check all certificates for been unique
i=0;case 16:if(!(i<localCerts.length)){_context7.next=31;break;}j=0;case 18:if(!(j<localCerts.length)){_context7.next=28;break;}if(!(i===j)){_context7.next=21;break;}return _context7.abrupt("continue",25);case 21:if(!(0,_pvutils.isEqualBuffer)(localCerts[i].tbs,localCerts[j].tbs)){_context7.next=25;break;}localCerts.splice(j,1);i=0;return _context7.abrupt("break",28);case 25:j++;_context7.next=18;break;case 28:i++;_context7.next=16;break;case 31:certificatePath=[localCerts[localCerts.length-1]];// The "end entity" certificate must be the least in "certs" array
//endregion
//region Build path for "end entity" certificate
_context7.next=34;return buildPath(localCerts[localCerts.length-1]);case 34:result=_context7.sent;if(!(result.length===0)){_context7.next=37;break;}return _context7.abrupt("return",{result:false,resultCode:60,resultMessage:"Unable to find certificate path"});case 37:_i=0;case 38:if(!(_i<result.length)){_context7.next=60;break;}found=false;_j=0;case 41:if(!(_j<result[_i].length)){_context7.next=56;break;}certificate=result[_i][_j];k=0;case 44:if(!(k<_this.trustedCerts.length)){_context7.next=51;break;}if(!(0,_pvutils.isEqualBuffer)(certificate.tbs,_this.trustedCerts[k].tbs)){_context7.next=48;break;}found=true;return _context7.abrupt("break",51);case 48:k++;_context7.next=44;break;case 51:if(!found){_context7.next=53;break;}return _context7.abrupt("break",56);case 53:_j++;_context7.next=41;break;case 56:if(!found){result.splice(_i,1);_i=0;}case 57:_i++;_context7.next=38;break;case 60:if(!(result.length===0)){_context7.next=62;break;}throw{result:false,resultCode:97,resultMessage:"No valid certificate paths found"};case 62://endregion
//region Find shortest certificate path (for the moment it is the only criteria)
shortestLength=result[0].length;shortestIndex=0;for(_i2=0;_i2<result.length;_i2++){if(result[_i2].length<shortestLength){shortestLength=result[_i2].length;shortestIndex=_i2;}}//endregion
//region Create certificate path for basic check
for(_i3=0;_i3<result[shortestIndex].length;_i3++){certificatePath.push(result[shortestIndex][_i3]);}//endregion
//region Perform basic checking for all certificates in the path
_context7.next=68;return basicCheck(certificatePath,_this.checkDate);case 68:result=_context7.sent;if(!(result.result===false)){_context7.next=71;break;}throw result;case 71:return _context7.abrupt("return",certificatePath);case 72:case"end":return _context7.stop();}}},_callee7,this);}));function sort(){return _sort.apply(this,arguments);}return sort;}()//**********************************************************************************
/**
	 * Major verification function for certificate chain.
	 * @param {{initialPolicySet, initialExplicitPolicy, initialPolicyMappingInhibit, initialInhibitPolicy, initialPermittedSubtreesSet, initialExcludedSubtreesSet, initialRequiredNameForms}} [parameters]
	 * @returns {Promise}
	 */},{key:"verify",value:function(){var _verify=_asyncToGenerator(/*#__PURE__*/regeneratorRuntime.mark(function _callee8(){var parameters,compareDNSName,compareRFC822Name,compareUniformResourceIdentifier,compareIPAddress,compareDirectoryName,passedWhenNotRevValues,initialPolicySet,initialExplicitPolicy,initialPolicyMappingInhibit,initialInhibitPolicy,initialPermittedSubtreesSet,initialExcludedSubtreesSet,initialRequiredNameForms,explicitPolicyIndicator,policyMappingInhibitIndicator,inhibitAnyPolicyIndicator,pendingConstraints,explicitPolicyPending,policyMappingInhibitPending,inhibitAnyPolicyPending,permittedSubtrees,excludedSubtrees,requiredNameForms,pathDepth,allPolicies,policiesAndCerts,anyPolicyArray,ii,policyMappings,certPolicies,explicitPolicyStart,i,j,s,k,policyIndex,_s,certArray,_policyIndex,searchAnyPolicy,_i15,_k,issuerDomainPolicyIndex,subjectDomainPolicyIndex,n,_j7,m,_i16,_j8,authConstrPolicies,_i17,found,_j9,anyPolicyFound,_k2,userConstrPolicies,_i18,_j10,policyResult,_i19,subjectAltNames,certPermittedSubtrees,certExcludedSubtrees,_j11,formFound,_j12,_k3,constrGroups,_j13,p,groupPermitted,valueExists,group,_j14,_k4,_k5,_k6,_k7,_k8,excluded,_j15,_k9,_k10,_k11,_k12,_k13,_args8=arguments;return regeneratorRuntime.wrap(function _callee8$(_context8){while(1){switch(_context8.prev=_context8.next){case 0:compareDirectoryName=function _ref17(name,constraint){/// <summary>Compare two directoryName values</summary>
/// <param name="name" type="in_window.org.pkijs.simpl.RDN">directoryName from name</param>
/// <param name="constraint" type="in_window.org.pkijs.simpl.RDN">Constraint for directoryName from name</param>
/// <param name="any" type="Boolean">Boolean flag - should be comparision interrupted after first match or we need to match all "constraints" parts</param>
/// <returns type="Boolean">Boolean result - valid or invalid the "name" against the "constraint"</returns>
//region Initial check
if(name.typesAndValues.length===0||constraint.typesAndValues.length===0)return true;if(name.typesAndValues.length<constraint.typesAndValues.length)return false;//endregion
//region Initial variables
var result=true;var nameStart=0;//endregion
for(var i=0;i<constraint.typesAndValues.length;i++){var localResult=false;for(var j=nameStart;j<name.typesAndValues.length;j++){localResult=name.typesAndValues[j].isEqual(constraint.typesAndValues[i]);if(name.typesAndValues[j].type===constraint.typesAndValues[i].type)result=result&&localResult;if(localResult===true){if(nameStart===0||nameStart===j){nameStart=j+1;break;}else// Structure of "name" must be the same with "constraint"
return false;}}if(localResult===false)return false;}return nameStart===0?false:result;};compareIPAddress=function _ref16(name,constraint){/// <summary>Compare two iPAddress values</summary>
/// <param name="name" type="in_window.org.pkijs.asn1.OCTETSTRING">iPAddress from name</param>
/// <param name="constraint" type="in_window.org.pkijs.asn1.OCTETSTRING">Constraint for iPAddress from name</param>
/// <returns type="Boolean">Boolean result - valid or invalid the "name" against the "constraint"</returns>
//region Common variables
var nameView=new Uint8Array(name.valueBlock.valueHex);var constraintView=new Uint8Array(constraint.valueBlock.valueHex);//endregion
//region Work with IPv4 addresses
if(nameView.length===4&&constraintView.length===8){for(var i=0;i<4;i++){if((nameView[i]^constraintView[i])&constraintView[i+4])return false;}return true;}//endregion
//region Work with IPv6 addresses
if(nameView.length===16&&constraintView.length===32){for(var _i14=0;_i14<16;_i14++){if((nameView[_i14]^constraintView[_i14])&constraintView[_i14+16])return false;}return true;}//endregion
return false;};compareUniformResourceIdentifier=function _ref15(name,constraint){/// <summary>Compare two uniformResourceIdentifier values</summary>
/// <param name="name" type="String">uniformResourceIdentifier from name</param>
/// <param name="constraint" type="String">Constraint for uniformResourceIdentifier from name</param>
/// <returns type="Boolean">Boolean result - valid or invalid the "name" against the "constraint"</returns>
//region Make a "string preparation" for both name and constrain
var namePrepared=(0,_common.stringPrep)(name);var constraintPrepared=(0,_common.stringPrep)(constraint);//endregion
//region Find out a major URI part to compare with
var ns=namePrepared.split("/");var cs=constraintPrepared.split("/");if(cs.length>1)// Malformed constraint
return false;if(ns.length>1)// Full URI string
{for(var i=0;i<ns.length;i++){if(ns[i].length>0&&ns[i].charAt(ns[i].length-1)!==":"){var nsPort=ns[i].split(":");namePrepared=nsPort[0];break;}}}//endregion
var result=compareDNSName(namePrepared,constraintPrepared);if(result){//region Make a "splitted" versions of "constraint" and "name"
var nameSplitted=namePrepared.split(".");var constraintSplitted=constraintPrepared.split(".");//endregion
if(constraintSplitted[0].length===0)return true;return nameSplitted.length===constraintSplitted.length;}return false;};compareRFC822Name=function _ref14(name,constraint){/// <summary>Compare two rfc822Name values</summary>
/// <param name="name" type="String">E-mail address from name</param>
/// <param name="constraint" type="String">Constraint for e-mail address from name</param>
/// <returns type="Boolean">Boolean result - valid or invalid the "name" against the "constraint"</returns>
//region Make a "string preparation" for both name and constrain
var namePrepared=(0,_common.stringPrep)(name);var constraintPrepared=(0,_common.stringPrep)(constraint);//endregion
//region Make a "splitted" versions of "constraint" and "name"
var nameSplitted=namePrepared.split("@");var constraintSplitted=constraintPrepared.split("@");//endregion
//region Splitted array length checking
if(nameSplitted.length===0||constraintSplitted.length===0||nameSplitted.length<constraintSplitted.length)return false;//endregion
if(constraintSplitted.length===1){var result=compareDNSName(nameSplitted[1],constraintSplitted[0]);if(result){//region Make a "splitted" versions of domain name from "constraint" and "name"
var ns=nameSplitted[1].split(".");var cs=constraintSplitted[0].split(".");//endregion
if(cs[0].length===0)return true;return ns.length===cs.length;}return false;}return namePrepared.localeCompare(constraintPrepared)===0;};compareDNSName=function _ref13(name,constraint){/// <summary>Compare two dNSName values</summary>
/// <param name="name" type="String">DNS from name</param>
/// <param name="constraint" type="String">Constraint for DNS from name</param>
/// <returns type="Boolean">Boolean result - valid or invalid the "name" against the "constraint"</returns>
//region Make a "string preparation" for both name and constrain
var namePrepared=(0,_common.stringPrep)(name);var constraintPrepared=(0,_common.stringPrep)(constraint);//endregion
//region Make a "splitted" versions of "constraint" and "name"
var nameSplitted=namePrepared.split(".");var constraintSplitted=constraintPrepared.split(".");//endregion
//region Length calculation and additional check
var nameLen=nameSplitted.length;var constrLen=constraintSplitted.length;if(nameLen===0||constrLen===0||nameLen<constrLen)return false;//endregion
//region Check that no part of "name" has zero length
for(var i=0;i<nameLen;i++){if(nameSplitted[i].length===0)return false;}//endregion
//region Check that no part of "constraint" has zero length
for(var _i12=0;_i12<constrLen;_i12++){if(constraintSplitted[_i12].length===0){if(_i12===0){if(constrLen===1)return false;continue;}return false;}}//endregion
//region Check that "name" has a tail as "constraint"
for(var _i13=0;_i13<constrLen;_i13++){if(constraintSplitted[constrLen-1-_i13].length===0)continue;if(nameSplitted[nameLen-1-_i13].localeCompare(constraintSplitted[constrLen-1-_i13])!==0)return false;}//endregion
return true;};parameters=_args8.length>0&&_args8[0]!==undefined?_args8[0]:{};_context8.prev=6;if(!(this.certs.length===0)){_context8.next=9;break;}throw"Empty certificate array";case 9://endregion
//region Get input variables
passedWhenNotRevValues=false;if("passedWhenNotRevValues"in parameters)passedWhenNotRevValues=parameters.passedWhenNotRevValues;initialPolicySet=[];initialPolicySet.push("2.5.29.32.0");// "anyPolicy"
initialExplicitPolicy=false;initialPolicyMappingInhibit=false;initialInhibitPolicy=false;initialPermittedSubtreesSet=[];// Array of "simpl.x509.GeneralSubtree"
initialExcludedSubtreesSet=[];// Array of "simpl.x509.GeneralSubtree"
initialRequiredNameForms=[];// Array of "simpl.x509.GeneralSubtree"
if("initialPolicySet"in parameters)initialPolicySet=parameters.initialPolicySet;if("initialExplicitPolicy"in parameters)initialExplicitPolicy=parameters.initialExplicitPolicy;if("initialPolicyMappingInhibit"in parameters)initialPolicyMappingInhibit=parameters.initialPolicyMappingInhibit;if("initialInhibitPolicy"in parameters)initialInhibitPolicy=parameters.initialInhibitPolicy;if("initialPermittedSubtreesSet"in parameters)initialPermittedSubtreesSet=parameters.initialPermittedSubtreesSet;if("initialExcludedSubtreesSet"in parameters)initialExcludedSubtreesSet=parameters.initialExcludedSubtreesSet;if("initialRequiredNameForms"in parameters)initialRequiredNameForms=parameters.initialRequiredNameForms;explicitPolicyIndicator=initialExplicitPolicy;policyMappingInhibitIndicator=initialPolicyMappingInhibit;inhibitAnyPolicyIndicator=initialInhibitPolicy;pendingConstraints=new Array(3);pendingConstraints[0]=false;// For "explicitPolicyPending"
pendingConstraints[1]=false;// For "policyMappingInhibitPending"
pendingConstraints[2]=false;// For "inhibitAnyPolicyPending"
explicitPolicyPending=0;policyMappingInhibitPending=0;inhibitAnyPolicyPending=0;permittedSubtrees=initialPermittedSubtreesSet;excludedSubtrees=initialExcludedSubtreesSet;requiredNameForms=initialRequiredNameForms;pathDepth=1;//endregion
//region Sorting certificates in the chain array
_context8.next=42;return this.sort(passedWhenNotRevValues);case 42:this.certs=_context8.sent;//endregion
//region Work with policies
//region Support variables
allPolicies=[];// Array of all policies (string values)
allPolicies.push("2.5.29.32.0");// Put "anyPolicy" at first place
policiesAndCerts=[];// In fact "array of array" where rows are for each specific policy, column for each certificate and value is "true/false"
anyPolicyArray=new Array(this.certs.length-1);// Minus "trusted anchor"
for(ii=0;ii<this.certs.length-1;ii++){anyPolicyArray[ii]=true;}policiesAndCerts.push(anyPolicyArray);policyMappings=new Array(this.certs.length-1);// Array of "PolicyMappings" for each certificate
certPolicies=new Array(this.certs.length-1);// Array of "CertificatePolicies" for each certificate
explicitPolicyStart=explicitPolicyIndicator?this.certs.length-1:-1;//endregion
//region Gather all neccessary information from certificate chain
i=this.certs.length-2;case 53:if(!(i>=0)){_context8.next=108;break;}if(!("extensions"in this.certs[i])){_context8.next=105;break;}j=0;case 56:if(!(j<this.certs[i].extensions.length)){_context8.next=91;break;}if(!(this.certs[i].extensions[j].extnID==="2.5.29.32")){_context8.next=82;break;}certPolicies[i]=this.certs[i].extensions[j].parsedValue;//region Remove entry from "anyPolicies" for the certificate
s=0;case 60:if(!(s<allPolicies.length)){_context8.next=67;break;}if(!(allPolicies[s]==="2.5.29.32.0")){_context8.next=64;break;}delete policiesAndCerts[s][i];return _context8.abrupt("break",67);case 64:s++;_context8.next=60;break;case 67:k=0;case 68:if(!(k<this.certs[i].extensions[j].parsedValue.certificatePolicies.length)){_context8.next=82;break;}policyIndex=-1;//region Try to find extension in "allPolicies" array
_s=0;case 71:if(!(_s<allPolicies.length)){_context8.next=78;break;}if(!(this.certs[i].extensions[j].parsedValue.certificatePolicies[k].policyIdentifier===allPolicies[_s])){_context8.next=75;break;}policyIndex=_s;return _context8.abrupt("break",78);case 75:_s++;_context8.next=71;break;case 78://endregion
if(policyIndex===-1){allPolicies.push(this.certs[i].extensions[j].parsedValue.certificatePolicies[k].policyIdentifier);certArray=new Array(this.certs.length-1);certArray[i]=true;policiesAndCerts.push(certArray);}else policiesAndCerts[policyIndex][i]=true;case 79:k++;_context8.next=68;break;case 82:if(!(this.certs[i].extensions[j].extnID==="2.5.29.33")){_context8.next=86;break;}if(!policyMappingInhibitIndicator){_context8.next=85;break;}return _context8.abrupt("return",{result:false,resultCode:98,resultMessage:"Policy mapping prohibited"});case 85:policyMappings[i]=this.certs[i].extensions[j].parsedValue;case 86://endregion
//region PolicyConstraints
if(this.certs[i].extensions[j].extnID==="2.5.29.36"){if(explicitPolicyIndicator===false){//region requireExplicitPolicy
if(this.certs[i].extensions[j].parsedValue.requireExplicitPolicy===0){explicitPolicyIndicator=true;explicitPolicyStart=i;}else{if(pendingConstraints[0]===false){pendingConstraints[0]=true;explicitPolicyPending=this.certs[i].extensions[j].parsedValue.requireExplicitPolicy;}else explicitPolicyPending=explicitPolicyPending>this.certs[i].extensions[j].parsedValue.requireExplicitPolicy?this.certs[i].extensions[j].parsedValue.requireExplicitPolicy:explicitPolicyPending;}//endregion
//region inhibitPolicyMapping
if(this.certs[i].extensions[j].parsedValue.inhibitPolicyMapping===0)policyMappingInhibitIndicator=true;else{if(pendingConstraints[1]===false){pendingConstraints[1]=true;policyMappingInhibitPending=this.certs[i].extensions[j].parsedValue.inhibitPolicyMapping+1;}else policyMappingInhibitPending=policyMappingInhibitPending>this.certs[i].extensions[j].parsedValue.inhibitPolicyMapping+1?this.certs[i].extensions[j].parsedValue.inhibitPolicyMapping+1:policyMappingInhibitPending;}//endregion
}}//endregion
//region InhibitAnyPolicy
if(this.certs[i].extensions[j].extnID==="2.5.29.54"){if(inhibitAnyPolicyIndicator===false){if(this.certs[i].extensions[j].parsedValue.valueBlock.valueDec===0)inhibitAnyPolicyIndicator=true;else{if(pendingConstraints[2]===false){pendingConstraints[2]=true;inhibitAnyPolicyPending=this.certs[i].extensions[j].parsedValue.valueBlock.valueDec;}else inhibitAnyPolicyPending=inhibitAnyPolicyPending>this.certs[i].extensions[j].parsedValue.valueBlock.valueDec?this.certs[i].extensions[j].parsedValue.valueBlock.valueDec:inhibitAnyPolicyPending;}}}//endregion
case 88:j++;_context8.next=56;break;case 91:if(!(inhibitAnyPolicyIndicator===true)){_context8.next=102;break;}_policyIndex=-1;//region Find "anyPolicy" index
searchAnyPolicy=0;case 94:if(!(searchAnyPolicy<allPolicies.length)){_context8.next=101;break;}if(!(allPolicies[searchAnyPolicy]==="2.5.29.32.0")){_context8.next=98;break;}_policyIndex=searchAnyPolicy;return _context8.abrupt("break",101);case 98:searchAnyPolicy++;_context8.next=94;break;case 101://endregion
if(_policyIndex!==-1)delete policiesAndCerts[0][i];// Unset value to "undefined" for "anyPolicies" value for current certificate
case 102://endregion
//region Process with "pending constraints"
if(explicitPolicyIndicator===false){if(pendingConstraints[0]===true){explicitPolicyPending--;if(explicitPolicyPending===0){explicitPolicyIndicator=true;explicitPolicyStart=i;pendingConstraints[0]=false;}}}if(policyMappingInhibitIndicator===false){if(pendingConstraints[1]===true){policyMappingInhibitPending--;if(policyMappingInhibitPending===0){policyMappingInhibitIndicator=true;pendingConstraints[1]=false;}}}if(inhibitAnyPolicyIndicator===false){if(pendingConstraints[2]===true){inhibitAnyPolicyPending--;if(inhibitAnyPolicyPending===0){inhibitAnyPolicyIndicator=true;pendingConstraints[2]=false;}}}//endregion
case 105:i--,pathDepth++;_context8.next=53;break;case 108:_i15=0;case 109:if(!(_i15<this.certs.length-1)){_context8.next=126;break;}if(!(_i15<this.certs.length-2&&typeof policyMappings[_i15+1]!=="undefined")){_context8.next=123;break;}_k=0;case 112:if(!(_k<policyMappings[_i15+1].mappings.length)){_context8.next=123;break;}if(!(policyMappings[_i15+1].mappings[_k].issuerDomainPolicy==="2.5.29.32.0"||policyMappings[_i15+1].mappings[_k].subjectDomainPolicy==="2.5.29.32.0")){_context8.next=115;break;}return _context8.abrupt("return",{result:false,resultCode:99,resultMessage:"The \"anyPolicy\" should not be a part of policy mapping scheme"});case 115://endregion
//region Initial variables
issuerDomainPolicyIndex=-1;subjectDomainPolicyIndex=-1;//endregion
//region Search for index of policies indedes
for(n=0;n<allPolicies.length;n++){if(allPolicies[n]===policyMappings[_i15+1].mappings[_k].issuerDomainPolicy)issuerDomainPolicyIndex=n;if(allPolicies[n]===policyMappings[_i15+1].mappings[_k].subjectDomainPolicy)subjectDomainPolicyIndex=n;}//endregion
//region Delete existing "issuerDomainPolicy" because on the level we mapped the policy to another one
if(typeof policiesAndCerts[issuerDomainPolicyIndex][_i15]!=="undefined")delete policiesAndCerts[issuerDomainPolicyIndex][_i15];//endregion
//region Check all policies for the certificate
for(_j7=0;_j7<certPolicies[_i15].certificatePolicies.length;_j7++){if(policyMappings[_i15+1].mappings[_k].subjectDomainPolicy===certPolicies[_i15].certificatePolicies[_j7].policyIdentifier){//region Set mapped policy for current certificate
if(issuerDomainPolicyIndex!==-1&&subjectDomainPolicyIndex!==-1){for(m=0;m<=_i15;m++){if(typeof policiesAndCerts[subjectDomainPolicyIndex][m]!=="undefined"){policiesAndCerts[issuerDomainPolicyIndex][m]=true;delete policiesAndCerts[subjectDomainPolicyIndex][m];}}}//endregion
}}//endregion
case 120:_k++;_context8.next=112;break;case 123:_i15++;_context8.next=109;break;case 126://endregion
//region Working with "explicitPolicyIndicator" and "anyPolicy"
for(_i16=0;_i16<allPolicies.length;_i16++){if(allPolicies[_i16]==="2.5.29.32.0"){for(_j8=0;_j8<explicitPolicyStart;_j8++){delete policiesAndCerts[_i16][_j8];}}}//endregion
//region Create "set of authorities-constrained policies"
authConstrPolicies=[];_i17=0;case 129:if(!(_i17<policiesAndCerts.length)){_context8.next=157;break;}found=true;_j9=0;case 132:if(!(_j9<this.certs.length-1)){_context8.next=153;break;}anyPolicyFound=false;if(!(_j9<explicitPolicyStart&&allPolicies[_i17]==="2.5.29.32.0"&&allPolicies.length>1)){_context8.next=137;break;}found=false;return _context8.abrupt("break",153);case 137:if(!(typeof policiesAndCerts[_i17][_j9]==="undefined")){_context8.next=150;break;}if(!(_j9>=explicitPolicyStart)){_context8.next=147;break;}_k2=0;case 140:if(!(_k2<allPolicies.length)){_context8.next=147;break;}if(!(allPolicies[_k2]==="2.5.29.32.0")){_context8.next=144;break;}if(policiesAndCerts[_k2][_j9]===true)anyPolicyFound=true;return _context8.abrupt("break",147);case 144:_k2++;_context8.next=140;break;case 147:if(anyPolicyFound){_context8.next=150;break;}found=false;return _context8.abrupt("break",153);case 150:_j9++;_context8.next=132;break;case 153:if(found===true)authConstrPolicies.push(allPolicies[_i17]);case 154:_i17++;_context8.next=129;break;case 157://endregion
//region Create "set of user-constrained policies"
userConstrPolicies=[];if(!(initialPolicySet.length===1&&initialPolicySet[0]==="2.5.29.32.0"&&explicitPolicyIndicator===false)){_context8.next=162;break;}userConstrPolicies=initialPolicySet;_context8.next=179;break;case 162:if(!(authConstrPolicies.length===1&&authConstrPolicies[0]==="2.5.29.32.0")){_context8.next=166;break;}userConstrPolicies=initialPolicySet;_context8.next=179;break;case 166:_i18=0;case 167:if(!(_i18<authConstrPolicies.length)){_context8.next=179;break;}_j10=0;case 169:if(!(_j10<initialPolicySet.length)){_context8.next=176;break;}if(!(initialPolicySet[_j10]===authConstrPolicies[_i18]||initialPolicySet[_j10]==="2.5.29.32.0")){_context8.next=173;break;}userConstrPolicies.push(authConstrPolicies[_i18]);return _context8.abrupt("break",176);case 173:_j10++;_context8.next=169;break;case 176:_i18++;_context8.next=167;break;case 179://endregion
//region Combine output object
policyResult={result:userConstrPolicies.length>0,resultCode:0,resultMessage:userConstrPolicies.length>0?"":"Zero \"userConstrPolicies\" array, no intersections with \"authConstrPolicies\"",authConstrPolicies:authConstrPolicies,userConstrPolicies:userConstrPolicies,explicitPolicyIndicator:explicitPolicyIndicator,policyMappings:policyMappings,certificatePath:this.certs};if(!(userConstrPolicies.length===0)){_context8.next=182;break;}return _context8.abrupt("return",policyResult);case 182:if(!(policyResult.result===false)){_context8.next=184;break;}return _context8.abrupt("return",policyResult);case 184://endregion
//region Check all certificates, excluding "trust anchor"
pathDepth=1;_i19=this.certs.length-2;case 186:if(!(_i19>=0)){_context8.next=308;break;}//region Support variables
subjectAltNames=[];certPermittedSubtrees=[];certExcludedSubtrees=[];//endregion
if("extensions"in this.certs[_i19]){for(_j11=0;_j11<this.certs[_i19].extensions.length;_j11++){//region NameConstraints
if(this.certs[_i19].extensions[_j11].extnID==="2.5.29.30"){if("permittedSubtrees"in this.certs[_i19].extensions[_j11].parsedValue)certPermittedSubtrees=certPermittedSubtrees.concat(this.certs[_i19].extensions[_j11].parsedValue.permittedSubtrees);if("excludedSubtrees"in this.certs[_i19].extensions[_j11].parsedValue)certExcludedSubtrees=certExcludedSubtrees.concat(this.certs[_i19].extensions[_j11].parsedValue.excludedSubtrees);}//endregion
//region SubjectAltName
if(this.certs[_i19].extensions[_j11].extnID==="2.5.29.17")subjectAltNames=subjectAltNames.concat(this.certs[_i19].extensions[_j11].parsedValue.altNames);//endregion
}}//region Checking for "required name forms"
formFound=requiredNameForms.length<=0;_j12=0;case 193:if(!(_j12<requiredNameForms.length)){_context8.next=214;break;}_context8.t0=requiredNameForms[_j12].base.type;_context8.next=_context8.t0===4?197:211;break;case 197:if(!(requiredNameForms[_j12].base.value.typesAndValues.length!==this.certs[_i19].subject.typesAndValues.length)){_context8.next=199;break;}return _context8.abrupt("continue",211);case 199:formFound=true;_k3=0;case 201:if(!(_k3<this.certs[_i19].subject.typesAndValues.length)){_context8.next=208;break;}if(!(this.certs[_i19].subject.typesAndValues[_k3].type!==requiredNameForms[_j12].base.value.typesAndValues[_k3].type)){_context8.next=205;break;}formFound=false;return _context8.abrupt("break",208);case 205:_k3++;_context8.next=201;break;case 208:if(!(formFound===true)){_context8.next=210;break;}return _context8.abrupt("break",211);case 210:return _context8.abrupt("break",211);case 211:_j12++;_context8.next=193;break;case 214:if(!(formFound===false)){_context8.next=219;break;}policyResult.result=false;policyResult.resultCode=21;policyResult.resultMessage="No neccessary name form found";throw policyResult;case 219://endregion
//region Checking for "permited sub-trees"
//region Make groups for all types of constraints
constrGroups=[];// Array of array for groupped constraints
constrGroups[0]=[];// rfc822Name
constrGroups[1]=[];// dNSName
constrGroups[2]=[];// directoryName
constrGroups[3]=[];// uniformResourceIdentifier
constrGroups[4]=[];// iPAddress
_j13=0;case 226:if(!(_j13<permittedSubtrees.length)){_context8.next=243;break;}_context8.t1=permittedSubtrees[_j13].base.type;_context8.next=_context8.t1===1?230:_context8.t1===2?232:_context8.t1===4?234:_context8.t1===6?236:_context8.t1===7?238:240;break;case 230:constrGroups[0].push(permittedSubtrees[_j13]);return _context8.abrupt("break",240);case 232:constrGroups[1].push(permittedSubtrees[_j13]);return _context8.abrupt("break",240);case 234:constrGroups[2].push(permittedSubtrees[_j13]);return _context8.abrupt("break",240);case 236:constrGroups[3].push(permittedSubtrees[_j13]);return _context8.abrupt("break",240);case 238:constrGroups[4].push(permittedSubtrees[_j13]);return _context8.abrupt("break",240);case 240:_j13++;_context8.next=226;break;case 243:p=0;case 244:if(!(p<5)){_context8.next=277;break;}groupPermitted=false;valueExists=false;group=constrGroups[p];_j14=0;case 249:if(!(_j14<group.length)){_context8.next=269;break;}_context8.t2=p;_context8.next=_context8.t2===0?253:_context8.t2===1?255:_context8.t2===2?257:_context8.t2===3?260:_context8.t2===4?262:264;break;case 253:if(subjectAltNames.length>0){for(_k4=0;_k4<subjectAltNames.length;_k4++){if(subjectAltNames[_k4].type===1)// rfc822Name
{valueExists=true;groupPermitted=groupPermitted||compareRFC822Name(subjectAltNames[_k4].value,group[_j14].base.value);}}}else// Try to find out "emailAddress" inside "subject"
{for(_k5=0;_k5<this.certs[_i19].subject.typesAndValues.length;_k5++){if(this.certs[_i19].subject.typesAndValues[_k5].type==="1.2.840.113549.1.9.1"||// PKCS#9 e-mail address
this.certs[_i19].subject.typesAndValues[_k5].type==="0.9.2342.19200300.100.1.3")// RFC1274 "rfc822Mailbox" e-mail address
{valueExists=true;groupPermitted=groupPermitted||compareRFC822Name(this.certs[_i19].subject.typesAndValues[_k5].value.valueBlock.value,group[_j14].base.value);}}}return _context8.abrupt("break",264);case 255:if(subjectAltNames.length>0){for(_k6=0;_k6<subjectAltNames.length;_k6++){if(subjectAltNames[_k6].type===2)// dNSName
{valueExists=true;groupPermitted=groupPermitted||compareDNSName(subjectAltNames[_k6].value,group[_j14].base.value);}}}return _context8.abrupt("break",264);case 257:valueExists=true;groupPermitted=compareDirectoryName(this.certs[_i19].subject,group[_j14].base.value);return _context8.abrupt("break",264);case 260:if(subjectAltNames.length>0){for(_k7=0;_k7<subjectAltNames.length;_k7++){if(subjectAltNames[_k7].type===6)// uniformResourceIdentifier
{valueExists=true;groupPermitted=groupPermitted||compareUniformResourceIdentifier(subjectAltNames[_k7].value,group[_j14].base.value);}}}return _context8.abrupt("break",264);case 262:if(subjectAltNames.length>0){for(_k8=0;_k8<subjectAltNames.length;_k8++){if(subjectAltNames[_k8].type===7)// iPAddress
{valueExists=true;groupPermitted=groupPermitted||compareIPAddress(subjectAltNames[_k8].value,group[_j14].base.value);}}}return _context8.abrupt("break",264);case 264:if(!groupPermitted){_context8.next=266;break;}return _context8.abrupt("break",269);case 266:_j14++;_context8.next=249;break;case 269:if(!(groupPermitted===false&&group.length>0&&valueExists)){_context8.next=274;break;}policyResult.result=false;policyResult.resultCode=41;policyResult.resultMessage="Failed to meet \"permitted sub-trees\" name constraint";throw policyResult;case 274:p++;_context8.next=244;break;case 277://endregion
//endregion
//region Checking for "excluded sub-trees"
excluded=false;_j15=0;case 279:if(!(_j15<excludedSubtrees.length)){_context8.next=298;break;}_context8.t3=excludedSubtrees[_j15].base.type;_context8.next=_context8.t3===1?283:_context8.t3===2?285:_context8.t3===4?287:_context8.t3===6?289:_context8.t3===7?291:293;break;case 283:if(subjectAltNames.length>=0){for(_k9=0;_k9<subjectAltNames.length;_k9++){if(subjectAltNames[_k9].type===1)// rfc822Name
excluded=excluded||compareRFC822Name(subjectAltNames[_k9].value,excludedSubtrees[_j15].base.value);}}else// Try to find out "emailAddress" inside "subject"
{for(_k10=0;_k10<this.certs[_i19].subject.typesAndValues.length;_k10++){if(this.certs[_i19].subject.typesAndValues[_k10].type==="1.2.840.113549.1.9.1"||// PKCS#9 e-mail address
this.certs[_i19].subject.typesAndValues[_k10].type==="0.9.2342.19200300.100.1.3")// RFC1274 "rfc822Mailbox" e-mail address
excluded=excluded||compareRFC822Name(this.certs[_i19].subject.typesAndValues[_k10].value.valueBlock.value,excludedSubtrees[_j15].base.value);}}return _context8.abrupt("break",293);case 285:if(subjectAltNames.length>0){for(_k11=0;_k11<subjectAltNames.length;_k11++){if(subjectAltNames[_k11].type===2)// dNSName
excluded=excluded||compareDNSName(subjectAltNames[_k11].value,excludedSubtrees[_j15].base.value);}}return _context8.abrupt("break",293);case 287:excluded=excluded||compareDirectoryName(this.certs[_i19].subject,excludedSubtrees[_j15].base.value);return _context8.abrupt("break",293);case 289:if(subjectAltNames.length>0){for(_k12=0;_k12<subjectAltNames.length;_k12++){if(subjectAltNames[_k12].type===6)// uniformResourceIdentifier
excluded=excluded||compareUniformResourceIdentifier(subjectAltNames[_k12].value,excludedSubtrees[_j15].base.value);}}return _context8.abrupt("break",293);case 291:if(subjectAltNames.length>0){for(_k13=0;_k13<subjectAltNames.length;_k13++){if(subjectAltNames[_k13].type===7)// iPAddress
excluded=excluded||compareIPAddress(subjectAltNames[_k13].value,excludedSubtrees[_j15].base.value);}}return _context8.abrupt("break",293);case 293:if(!excluded){_context8.next=295;break;}return _context8.abrupt("break",298);case 295:_j15++;_context8.next=279;break;case 298:if(!(excluded===true)){_context8.next=303;break;}policyResult.result=false;policyResult.resultCode=42;policyResult.resultMessage="Failed to meet \"excluded sub-trees\" name constraint";throw policyResult;case 303://endregion
//region Append "cert_..._subtrees" to "..._subtrees"
permittedSubtrees=permittedSubtrees.concat(certPermittedSubtrees);excludedSubtrees=excludedSubtrees.concat(certExcludedSubtrees);//endregion
case 305:_i19--,pathDepth++;_context8.next=186;break;case 308:return _context8.abrupt("return",policyResult);case 311:_context8.prev=311;_context8.t4=_context8["catch"](6);if(!(_context8.t4 instanceof Object)){_context8.next=318;break;}if(!("resultMessage"in _context8.t4)){_context8.next=316;break;}return _context8.abrupt("return",_context8.t4);case 316:if(!("message"in _context8.t4)){_context8.next=318;break;}return _context8.abrupt("return",{result:false,resultCode:-1,resultMessage:_context8.t4.message});case 318:return _context8.abrupt("return",{result:false,resultCode:-1,resultMessage:_context8.t4});case 319:case"end":return _context8.stop();}}},_callee8,this,[[6,311]]);}));function verify(){return _verify.apply(this,arguments);}return verify;}()//**********************************************************************************
}],[{key:"defaultFindOrigin",value:function defaultFindOrigin(certificate,validationEngine){//region Firstly encode TBS for certificate
if(certificate.tbs.byteLength===0)certificate.tbs=certificate.encodeTBS();//endregion
//region Search in Intermediate Certificates
var _iteratorNormalCompletion6=true;var _didIteratorError6=false;var _iteratorError6=undefined;try{for(var _iterator6=validationEngine.certs[Symbol.iterator](),_step6;!(_iteratorNormalCompletion6=(_step6=_iterator6.next()).done);_iteratorNormalCompletion6=true){var localCert=_step6.value;//region Firstly encode TBS for certificate
if(localCert.tbs.byteLength===0)localCert.tbs=localCert.encodeTBS();//endregion
if((0,_pvutils.isEqualBuffer)(certificate.tbs,localCert.tbs))return"Intermediate Certificates";}//endregion
//region Search in Trusted Certificates
}catch(err){_didIteratorError6=true;_iteratorError6=err;}finally{try{if(!_iteratorNormalCompletion6&&_iterator6.return!=null){_iterator6.return();}}finally{if(_didIteratorError6){throw _iteratorError6;}}}var _iteratorNormalCompletion7=true;var _didIteratorError7=false;var _iteratorError7=undefined;try{for(var _iterator7=validationEngine.trustedCerts[Symbol.iterator](),_step7;!(_iteratorNormalCompletion7=(_step7=_iterator7.next()).done);_iteratorNormalCompletion7=true){var trustedCert=_step7.value;//region Firstly encode TBS for certificate
if(trustedCert.tbs.byteLength===0)trustedCert.tbs=trustedCert.encodeTBS();//endregion
if((0,_pvutils.isEqualBuffer)(certificate.tbs,trustedCert.tbs))return"Trusted Certificates";}//endregion
}catch(err){_didIteratorError7=true;_iteratorError7=err;}finally{try{if(!_iteratorNormalCompletion7&&_iterator7.return!=null){_iterator7.return();}}finally{if(_didIteratorError7){throw _iteratorError7;}}}return"Unknown";}}]);return CertificateChainValidationEngine;}();//**************************************************************************************
exports.default=CertificateChainValidationEngine;
//# sourceMappingURL=CertificateChainValidationEngine.js.map