{"version":3,"sources":["../src/RecipientIdentifier.js"],"names":["RecipientIdentifier","parameters","variant","defaultValues","value","fromSchema","schema","asn1","asn1js","compareSchema","names","blockName","verified","Error","result","idBlock","tagClass","IssuerAndSerialNumber","valueBlock","toSchema","Constructed","tagNumber","Any","_object","toJSON","memberName","memberValue","Object","keys","length","Choice","name","OctetString"],"mappings":"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","sourcesContent":["import * as asn1js from \"asn1js\";\r\nimport { getParametersValue, clearProps } from \"pvutils\";\r\nimport IssuerAndSerialNumber from \"./IssuerAndSerialNumber.js\";\r\n//**************************************************************************************\r\n/**\r\n * Class from RFC5652\r\n */\r\nexport default class RecipientIdentifier\r\n{\r\n\t//**********************************************************************************\r\n\t/**\r\n\t * Constructor for RecipientIdentifier class\r\n\t * @param {Object} [parameters={}]\r\n\t * @param {Object} [parameters.schema] asn1js parsed value to initialize the class from\r\n\t */\r\n\tconstructor(parameters = {})\r\n\t{\r\n\t\t//region Internal properties of the object\r\n\t\t/**\r\n\t\t * @type {number}\r\n\t\t * @desc variant\r\n\t\t */\r\n\t\tthis.variant = getParametersValue(parameters, \"variant\", RecipientIdentifier.defaultValues(\"variant\"));\r\n\r\n\t\tif(\"value\" in parameters)\r\n\t\t\t/**\r\n\t\t\t * @type {*}\r\n\t\t\t * @desc value\r\n\t\t\t */\r\n\t\t\tthis.value = getParametersValue(parameters, \"value\", RecipientIdentifier.defaultValues(\"value\"));\r\n\t\t//endregion\r\n\r\n\t\t//region If input argument array contains \"schema\" for this object\r\n\t\tif(\"schema\" in parameters)\r\n\t\t\tthis.fromSchema(parameters.schema);\r\n\t\t//endregion\r\n\t}\r\n\t//**********************************************************************************\r\n\t/**\r\n\t * Return default values for all class members\r\n\t * @param {string} memberName String name for a class member\r\n\t */\r\n\tstatic defaultValues(memberName)\r\n\t{\r\n\t\tswitch(memberName)\r\n\t\t{\r\n\t\t\tcase \"variant\":\r\n\t\t\t\treturn (-1);\r\n\t\t\tcase \"value\":\r\n\t\t\t\treturn {};\r\n\t\t\tdefault:\r\n\t\t\t\tthrow new Error(`Invalid member name for RecipientIdentifier class: ${memberName}`);\r\n\t\t}\r\n\t}\r\n\t//**********************************************************************************\r\n\t/**\r\n\t * Compare values with default values for all class members\r\n\t * @param {string} memberName String name for a class member\r\n\t * @param {*} memberValue Value to compare with default value\r\n\t */\r\n\tstatic compareWithDefault(memberName, memberValue)\r\n\t{\r\n\t\tswitch(memberName)\r\n\t\t{\r\n\t\t\tcase \"variant\":\r\n\t\t\t\treturn (memberValue === (-1));\r\n\t\t\tcase \"values\":\r\n\t\t\t\treturn (Object.keys(memberValue).length === 0);\r\n\t\t\tdefault:\r\n\t\t\t\tthrow new Error(`Invalid member name for RecipientIdentifier class: ${memberName}`);\r\n\t\t}\r\n\t}\r\n\t//**********************************************************************************\r\n\t/**\r\n\t * Return value of pre-defined ASN.1 schema for current class\r\n\t *\r\n\t * ASN.1 schema:\r\n\t * ```asn1\r\n\t * RecipientIdentifier ::= CHOICE {\r\n\t *    issuerAndSerialNumber IssuerAndSerialNumber,\r\n\t *    subjectKeyIdentifier [0] SubjectKeyIdentifier }\r\n\t *\r\n\t * SubjectKeyIdentifier ::= OCTET STRING\r\n\t * ```\r\n\t *\r\n\t * @param {Object} parameters Input parameters for the schema\r\n\t * @returns {Object} asn1js schema object\r\n\t */\r\n\tstatic schema(parameters = {})\r\n\t{\r\n\t\t/**\r\n\t\t * @type {Object}\r\n\t\t * @property {string} [blockName]\r\n\t\t */\r\n\t\tconst names = getParametersValue(parameters, \"names\", {});\r\n\t\t\r\n\t\treturn (new asn1js.Choice({\r\n\t\t\tvalue: [\r\n\t\t\t\tIssuerAndSerialNumber.schema({\r\n\t\t\t\t\tnames: {\r\n\t\t\t\t\t\tblockName: (names.blockName || \"\")\r\n\t\t\t\t\t}\r\n\t\t\t\t}),\r\n\t\t\t\tnew asn1js.Constructed({\r\n\t\t\t\t\tname: (names.blockName || \"\"),\r\n\t\t\t\t\tidBlock: {\r\n\t\t\t\t\t\ttagClass: 3, // CONTEXT-SPECIFIC\r\n\t\t\t\t\t\ttagNumber: 0 // [0]\r\n\t\t\t\t\t},\r\n\t\t\t\t\tvalue: [new asn1js.OctetString()]\r\n\t\t\t\t})\r\n\t\t\t]\r\n\t\t}));\r\n\t}\r\n\t//**********************************************************************************\r\n\t/**\r\n\t * Convert parsed asn1js object into current class\r\n\t * @param {!Object} schema\r\n\t */\r\n\tfromSchema(schema)\r\n\t{\r\n\t\t//region Clear input data first\r\n\t\tclearProps(schema, [\r\n\t\t\t\"blockName\"\r\n\t\t]);\r\n\t\t//endregion\r\n\t\t\r\n\t\t//region Check the schema is valid\r\n\t\tconst asn1 = asn1js.compareSchema(schema,\r\n\t\t\tschema,\r\n\t\t\tRecipientIdentifier.schema({\r\n\t\t\t\tnames: {\r\n\t\t\t\t\tblockName: \"blockName\"\r\n\t\t\t\t}\r\n\t\t\t})\r\n\t\t);\r\n\r\n\t\tif(asn1.verified === false)\r\n\t\t\tthrow new Error(\"Object's schema was not verified against input data for RecipientIdentifier\");\r\n\t\t//endregion\r\n\r\n\t\t//region Get internal properties from parsed schema\r\n\t\tif(asn1.result.blockName.idBlock.tagClass === 1)\r\n\t\t{\r\n\t\t\tthis.variant = 1;\r\n\t\t\tthis.value = new IssuerAndSerialNumber({ schema: asn1.result.blockName });\r\n\t\t}\r\n\t\telse\r\n\t\t{\r\n\t\t\tthis.variant = 2;\r\n\t\t\tthis.value = asn1.result.blockName.valueBlock.value[0];\r\n\t\t}\r\n\t\t//endregion\r\n\t}\r\n\t//**********************************************************************************\r\n\t/**\r\n\t * Convert current object to asn1js object and set correct values\r\n\t * @returns {Object} asn1js object\r\n\t */\r\n\ttoSchema()\r\n\t{\r\n\t\t//region Construct and return new ASN.1 schema for this object\r\n\t\tswitch(this.variant)\r\n\t\t{\r\n\t\t\tcase 1:\r\n\t\t\t\treturn this.value.toSchema();\r\n\t\t\tcase 2:\r\n\t\t\t\treturn new asn1js.Constructed({\r\n\t\t\t\t\tidBlock: {\r\n\t\t\t\t\t\ttagClass: 3, // CONTEXT-SPECIFIC\r\n\t\t\t\t\t\ttagNumber: 0 // [0]\r\n\t\t\t\t\t},\r\n\t\t\t\t\tvalue: [this.value]\r\n\t\t\t\t});\r\n\t\t\tdefault:\r\n\t\t\t\treturn new asn1js.Any();\r\n\t\t}\r\n\t\t//endregion\r\n\t}\r\n\t//**********************************************************************************\r\n\t/**\r\n\t * Convertion for the class to JSON object\r\n\t * @returns {Object}\r\n\t */\r\n\ttoJSON()\r\n\t{\r\n\t\tconst _object = {\r\n\t\t\tvariant: this.variant\r\n\t\t};\r\n\r\n\t\tif((this.variant === 1) || (this.variant === 2))\r\n\t\t\t_object.value = this.value.toJSON();\r\n\r\n\t\treturn _object;\r\n\t}\r\n\t//**********************************************************************************\r\n}\r\n//**************************************************************************************\r\n"],"file":"RecipientIdentifier.js"}