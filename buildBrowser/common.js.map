{"version":3,"sources":["../src/common.js"],"names":["engine","name","crypto","subtle","setEngine","process","global","window","pid","Error","pkijs","getEngine","_engine","ex","initCryptoEngine","self","engineName","cryptoObject","subtleObject","webkitSubtle","CryptoEngine","getCrypto","undefined","getRandomValues","view","getOIDByAlgorithm","algorithm","getAlgorithmParameters","algorithmName","operation","createCMSECDSASignature","signatureBuffer","byteLength","ArrayBuffer","length","rBuffer","rView","Uint8Array","set","rInteger","asn1js","Integer","valueHex","sBuffer","sView","sInteger","Sequence","value","convertToDER","toBER","stringPrep","inputString","isSpace","cuttedResult","result","trim","i","charCodeAt","toLowerCase","createECDSASignatureFromCMS","cmsSignature","valueBlock","rValue","convertFromDER","sValue","correctedLength","rValueView","rValueBufferCorrected","rValueViewCorrected","sValueView","sValueBufferCorrected","sValueViewCorrected","getAlgorithmByOID","oid","getHashAlgorithm","signatureAlgorithm","kdfWithCounter","hashFunction","Zbuffer","Counter","SharedInfo","toUpperCase","Promise","reject","counterBuffer","counterView","combinedBuffer","digest","then","counter","kdf","keydatalen","hashLength","maxCounter","kdfArray","quotient","Math","floor","push","all","incomingResult","currentCounter","found","newBuffer","newView","combinedView"],"mappings":"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","sourcesContent":["import * as asn1js from \"asn1js\";\nimport { utilConcatBuf } from \"pvutils\";\nimport CryptoEngine from \"./CryptoEngine.js\";\n//**************************************************************************************\n//region Crypto engine related function\n//**************************************************************************************\nlet engine = {\n\tname: \"none\",\n\tcrypto: null,\n\tsubtle: null\n};\n//**************************************************************************************\nexport function setEngine(name, crypto, subtle)\n{\n\t//region We are in Node\n\t// noinspection JSUnresolvedVariable\n\tif((typeof process !== \"undefined\") && (\"pid\" in process) && (typeof global !== \"undefined\") && (typeof window === \"undefined\"))\n\t{\n\t\t// noinspection ES6ModulesDependencies, JSUnresolvedVariable\n\t\tif(typeof global[process.pid] === \"undefined\")\n\t\t{\n\t\t\t// noinspection JSUnresolvedVariable\n\t\t\tglobal[process.pid] = {};\n\t\t}\n\t\telse\n\t\t{\n\t\t\t// noinspection JSUnresolvedVariable\n\t\t\tif(typeof global[process.pid] !== \"object\")\n\t\t\t{\n\t\t\t\t// noinspection JSUnresolvedVariable\n\t\t\t\tthrow new Error(`Name global.${process.pid} already exists and it is not an object`);\n\t\t\t}\n\t\t}\n\t\t\n\t\t// noinspection JSUnresolvedVariable\n\t\tif(typeof global[process.pid].pkijs === \"undefined\")\n\t\t{\n\t\t\t// noinspection JSUnresolvedVariable\n\t\t\tglobal[process.pid].pkijs = {};\n\t\t}\n\t\telse\n\t\t{\n\t\t\t// noinspection JSUnresolvedVariable\n\t\t\tif(typeof global[process.pid].pkijs !== \"object\")\n\t\t\t{\n\t\t\t\t// noinspection JSUnresolvedVariable\n\t\t\t\tthrow new Error(`Name global.${process.pid}.pkijs already exists and it is not an object`);\n\t\t\t}\n\t\t}\n\t\t\n\t\t// noinspection JSUnresolvedVariable\n\t\tglobal[process.pid].pkijs.engine = {\n\t\t\tname: name,\n\t\t\tcrypto: crypto,\n\t\t\tsubtle: subtle\n\t\t};\n\t}\n\t//endregion\n\t//region We are in browser\n\telse\n\t{\n\t\tengine = {\n\t\t\tname: name,\n\t\t\tcrypto: crypto,\n\t\t\tsubtle: subtle\n\t\t};\n\t}\n\t//endregion\n}\n//**************************************************************************************\nexport function getEngine()\n{\n\t//region We are in Node\n\t// noinspection JSUnresolvedVariable\n\tif((typeof process !== \"undefined\") && (\"pid\" in process) && (typeof global !== \"undefined\") && (typeof window === \"undefined\"))\n\t{\n\t\tlet _engine;\n\t\t\n\t\ttry\n\t\t{\n\t\t\t// noinspection JSUnresolvedVariable\n\t\t\t_engine = global[process.pid].pkijs.engine;\n\t\t}\n\t\tcatch(ex)\n\t\t{\n\t\t\tthrow new Error(\"Please call \\\"setEngine\\\" before call to \\\"getEngine\\\"\");\n\t\t}\n\t\t\n\t\treturn _engine;\n\t}\n\t//endregion\n\t\n\treturn engine;\n}\n//**************************************************************************************\n(function initCryptoEngine()\n{\n\tif(typeof self !== \"undefined\")\n\t{\n\t\tif(\"crypto\" in self)\n\t\t{\n\t\t\tlet engineName = \"webcrypto\";\n\t\t\t\n\t\t\t/**\n\t\t\t * Standard crypto object\n\t\t\t * @type {Object}\n\t\t\t * @property {Object} [webkitSubtle] Subtle object from Apple\n\t\t\t */\n\t\t\tconst cryptoObject = self.crypto;\n\t\t\tlet subtleObject;\n\t\t\t\n\t\t\t// Apple Safari support\n\t\t\tif(\"webkitSubtle\" in self.crypto)\n\t\t\t{\n\t\t\t\ttry\n\t\t\t\t{\n\t\t\t\t\tsubtleObject = self.crypto.webkitSubtle;\n\t\t\t\t}\n\t\t\t\tcatch(ex)\n\t\t\t\t{\n\t\t\t\t\tsubtleObject = self.crypto.subtle;\n\t\t\t\t}\n\t\t\t\t\n\t\t\t\tengineName = \"safari\";\n\t\t\t}\n\t\t\t\n\t\t\tif(\"subtle\" in self.crypto)\n\t\t\t\tsubtleObject = self.crypto.subtle;\n\n\n\t\t\tif(typeof subtleObject === \"undefined\")\n\t\t\t{\n\t\t\t\tengine = {\n\t\t\t\t\tname: engineName,\n\t\t\t\t\tcrypto: cryptoObject,\n\t\t\t\t\tsubtle: null\n\t\t\t\t};\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\tengine = {\n\t\t\t\t\tname: engineName,\n\t\t\t\t\tcrypto: cryptoObject,\n\t\t\t\t\tsubtle: new CryptoEngine({name: engineName, crypto: self.crypto, subtle: subtleObject})\n\t\t\t\t};\n\t\t\t}\n\t\t}\n\t}\n\t\n\tsetEngine(engine.name, engine.crypto, engine.subtle);\n})();\n//**************************************************************************************\n//endregion\n//**************************************************************************************\n//region Declaration of common functions\n//**************************************************************************************\n/**\n * Get crypto subtle from current \"crypto engine\" or \"undefined\"\n * @returns {({decrypt, deriveKey, digest, encrypt, exportKey, generateKey, importKey, sign, unwrapKey, verify, wrapKey}|null)}\n */\nexport function getCrypto()\n{\n\tconst _engine = getEngine();\n\t\n\tif(_engine.subtle !== null)\n\t\treturn _engine.subtle;\n\t\n\treturn undefined;\n}\n//**************************************************************************************\n/**\n * Initialize input Uint8Array by random values (with help from current \"crypto engine\")\n * @param {!Uint8Array} view\n * @returns {*}\n */\nexport function getRandomValues(view)\n{\n\treturn getEngine().subtle.getRandomValues(view);\n}\n//**************************************************************************************\n/**\n * Get OID for each specific algorithm\n * @param {Object} algorithm\n * @returns {string}\n */\nexport function getOIDByAlgorithm(algorithm)\n{\n\treturn getEngine().subtle.getOIDByAlgorithm(algorithm);\n}\n//**************************************************************************************\n/**\n * Get default algorithm parameters for each kind of operation\n * @param {string} algorithmName Algorithm name to get common parameters for\n * @param {string} operation Kind of operation: \"sign\", \"encrypt\", \"generatekey\", \"importkey\", \"exportkey\", \"verify\"\n * @returns {*}\n */\nexport function getAlgorithmParameters(algorithmName, operation)\n{\n\treturn getEngine().subtle.getAlgorithmParameters(algorithmName, operation);\n}\n//**************************************************************************************\n/**\n * Create CMS ECDSA signature from WebCrypto ECDSA signature\n * @param {ArrayBuffer} signatureBuffer WebCrypto result of \"sign\" function\n * @returns {ArrayBuffer}\n */\nexport function createCMSECDSASignature(signatureBuffer)\n{\n\t//region Initial check for correct length\n\tif((signatureBuffer.byteLength % 2) !== 0)\n\t\treturn new ArrayBuffer(0);\n\t//endregion\n\t\n\t//region Initial variables\n\tconst length = signatureBuffer.byteLength / 2; // There are two equal parts inside incoming ArrayBuffer\n\t\n\tconst rBuffer = new ArrayBuffer(length);\n\tconst rView = new Uint8Array(rBuffer);\n\trView.set(new Uint8Array(signatureBuffer, 0, length));\n\t\n\tconst rInteger = new asn1js.Integer({ valueHex: rBuffer });\n\t\n\tconst sBuffer = new ArrayBuffer(length);\n\tconst sView = new Uint8Array(sBuffer);\n\tsView.set(new Uint8Array(signatureBuffer, length, length));\n\t\n\tconst sInteger = new asn1js.Integer({ valueHex: sBuffer });\n\t//endregion\n\t\n\treturn (new asn1js.Sequence({\n\t\tvalue: [\n\t\t\trInteger.convertToDER(),\n\t\t\tsInteger.convertToDER()\n\t\t]\n\t})).toBER(false);\n}\n//**************************************************************************************\n/**\n * String preparation function. In a future here will be realization of algorithm from RFC4518\n * @param {string} inputString JavaScript string. As soon as for each ASN.1 string type we have a specific transformation function here we will work with pure JavaScript string\n * @returns {string} Formated string\n */\nexport function stringPrep(inputString)\n{\n\t//region Initial variables\n\tlet isSpace = false;\n\tlet cuttedResult = \"\";\n\t//endregion\n\t\n\tconst result = inputString.trim(); // Trim input string\n\t\n\t//region Change all sequence of SPACE down to SPACE char\n\tfor(let i = 0; i < result.length; i++)\n\t{\n\t\tif(result.charCodeAt(i) === 32)\n\t\t{\n\t\t\tif(isSpace === false)\n\t\t\t\tisSpace = true;\n\t\t}\n\t\telse\n\t\t{\n\t\t\tif(isSpace)\n\t\t\t{\n\t\t\t\tcuttedResult += \" \";\n\t\t\t\tisSpace = false;\n\t\t\t}\n\t\t\t\n\t\t\tcuttedResult += result[i];\n\t\t}\n\t}\n\t//endregion\n\t\n\treturn cuttedResult.toLowerCase();\n}\n//**************************************************************************************\n/**\n * Create a single ArrayBuffer from CMS ECDSA signature\n * @param {Sequence} cmsSignature ASN.1 SEQUENCE contains CMS ECDSA signature\n * @returns {ArrayBuffer}\n */\nexport function createECDSASignatureFromCMS(cmsSignature)\n{\n\t//region Check input variables\n\tif((cmsSignature instanceof asn1js.Sequence) === false)\n\t\treturn new ArrayBuffer(0);\n\t\n\tif(cmsSignature.valueBlock.value.length !== 2)\n\t\treturn new ArrayBuffer(0);\n\t\n\tif((cmsSignature.valueBlock.value[0] instanceof asn1js.Integer) === false)\n\t\treturn new ArrayBuffer(0);\n\t\n\tif((cmsSignature.valueBlock.value[1] instanceof asn1js.Integer) === false)\n\t\treturn new ArrayBuffer(0);\n\t//endregion\n\t\n\tconst rValue = cmsSignature.valueBlock.value[0].convertFromDER();\n\tconst sValue = cmsSignature.valueBlock.value[1].convertFromDER();\n\t\n\t//region Check the lengths of two parts are equal\n\tswitch(true)\n\t{\n\t\tcase (rValue.valueBlock.valueHex.byteLength < sValue.valueBlock.valueHex.byteLength):\n\t\t\t{\n\t\t\t\tif((sValue.valueBlock.valueHex.byteLength - rValue.valueBlock.valueHex.byteLength) !== 1)\n\t\t\t\t\tthrow new Error(\"Incorrect DER integer decoding\");\n\t\t\t\t\n\t\t\t\tconst correctedLength = sValue.valueBlock.valueHex.byteLength;\n\t\t\t\t\n\t\t\t\tconst rValueView = new Uint8Array(rValue.valueBlock.valueHex);\n\t\t\t\t\n\t\t\t\tconst rValueBufferCorrected = new ArrayBuffer(correctedLength);\n\t\t\t\tconst rValueViewCorrected = new Uint8Array(rValueBufferCorrected);\n\t\t\t\t\n\t\t\t\trValueViewCorrected.set(rValueView, 1);\n\t\t\t\trValueViewCorrected[0] = 0x00; // In order to be sure we do not have any garbage here\n\t\t\t\t\n\t\t\t\treturn utilConcatBuf(rValueBufferCorrected, sValue.valueBlock.valueHex);\n\t\t\t}\n\t\tcase (rValue.valueBlock.valueHex.byteLength > sValue.valueBlock.valueHex.byteLength):\n\t\t\t{\n\t\t\t\tif((rValue.valueBlock.valueHex.byteLength - sValue.valueBlock.valueHex.byteLength) !== 1)\n\t\t\t\t\tthrow new Error(\"Incorrect DER integer decoding\");\n\t\t\t\t\n\t\t\t\tconst correctedLength = rValue.valueBlock.valueHex.byteLength;\n\t\t\t\t\n\t\t\t\tconst sValueView = new Uint8Array(sValue.valueBlock.valueHex);\n\t\t\t\t\n\t\t\t\tconst sValueBufferCorrected = new ArrayBuffer(correctedLength);\n\t\t\t\tconst sValueViewCorrected = new Uint8Array(sValueBufferCorrected);\n\t\t\t\t\n\t\t\t\tsValueViewCorrected.set(sValueView, 1);\n\t\t\t\tsValueViewCorrected[0] = 0x00; // In order to be sure we do not have any garbage here\n\t\t\t\t\n\t\t\t\treturn utilConcatBuf(rValue.valueBlock.valueHex, sValueBufferCorrected);\n\t\t\t}\n\t\tdefault:\n\t\t\t{\n\t\t\t\t//region In case we have equal length and the length is not even with 2\n\t\t\t\tif(rValue.valueBlock.valueHex.byteLength % 2)\n\t\t\t\t{\n\t\t\t\t\tconst correctedLength = (rValue.valueBlock.valueHex.byteLength + 1);\n\t\t\t\t\t\n\t\t\t\t\tconst rValueView = new Uint8Array(rValue.valueBlock.valueHex);\n\t\t\t\t\t\n\t\t\t\t\tconst rValueBufferCorrected = new ArrayBuffer(correctedLength);\n\t\t\t\t\tconst rValueViewCorrected = new Uint8Array(rValueBufferCorrected);\n\t\t\t\t\t\n\t\t\t\t\trValueViewCorrected.set(rValueView, 1);\n\t\t\t\t\trValueViewCorrected[0] = 0x00; // In order to be sure we do not have any garbage here\n\t\t\t\t\t\n\t\t\t\t\tconst sValueView = new Uint8Array(sValue.valueBlock.valueHex);\n\t\t\t\t\t\n\t\t\t\t\tconst sValueBufferCorrected = new ArrayBuffer(correctedLength);\n\t\t\t\t\tconst sValueViewCorrected = new Uint8Array(sValueBufferCorrected);\n\t\t\t\t\t\n\t\t\t\t\tsValueViewCorrected.set(sValueView, 1);\n\t\t\t\t\tsValueViewCorrected[0] = 0x00; // In order to be sure we do not have any garbage here\n\t\t\t\t\t\n\t\t\t\t\treturn utilConcatBuf(rValueBufferCorrected, sValueBufferCorrected);\n\t\t\t\t}\n\t\t\t\t//endregion\n\t\t\t}\n\t}\n\t//endregion\n\t\n\treturn utilConcatBuf(rValue.valueBlock.valueHex, sValue.valueBlock.valueHex);\n}\n//**************************************************************************************\n/**\n * Get WebCrypto algorithm by wel-known OID\n * @param {string} oid well-known OID to search for\n * @returns {Object}\n */\nexport function getAlgorithmByOID(oid)\n{\n\treturn getEngine().subtle.getAlgorithmByOID(oid);\n}\n//**************************************************************************************\n/**\n * Getting hash algorithm by signature algorithm\n * @param {AlgorithmIdentifier} signatureAlgorithm Signature algorithm\n * @returns {string}\n */\nexport function getHashAlgorithm(signatureAlgorithm)\n{\n\treturn getEngine().subtle.getHashAlgorithm(signatureAlgorithm);\n}\n//**************************************************************************************\n/**\n * ANS X9.63 Key Derivation Function having a \"Counter\" as a parameter\n * @param {string} hashFunction Used hash function\n * @param {ArrayBuffer} Zbuffer ArrayBuffer containing ECDH shared secret to derive from\n * @param {number} Counter\n * @param {ArrayBuffer} SharedInfo Usually DER encoded \"ECC_CMS_SharedInfo\" structure\n */\nexport function kdfWithCounter(hashFunction, Zbuffer, Counter, SharedInfo)\n{\n\t//region Check of input parameters\n\tswitch(hashFunction.toUpperCase())\n\t{\n\t\tcase \"SHA-1\":\n\t\tcase \"SHA-256\":\n\t\tcase \"SHA-384\":\n\t\tcase \"SHA-512\":\n\t\t\tbreak;\n\t\tdefault:\n\t\t\treturn Promise.reject(`Unknown hash function: ${hashFunction}`);\n\t}\n\t\n\tif((Zbuffer instanceof ArrayBuffer) === false)\n\t\treturn Promise.reject(\"Please set \\\"Zbuffer\\\" as \\\"ArrayBuffer\\\"\");\n\t\n\tif(Zbuffer.byteLength === 0)\n\t\treturn Promise.reject(\"\\\"Zbuffer\\\" has zero length, error\");\n\t\n\tif((SharedInfo instanceof ArrayBuffer) === false)\n\t\treturn Promise.reject(\"Please set \\\"SharedInfo\\\" as \\\"ArrayBuffer\\\"\");\n\t\n\tif(Counter > 255)\n\t\treturn Promise.reject(\"Please set \\\"Counter\\\" variable to value less or equal to 255\");\n\t//endregion\n\t\n\t//region Initial variables\n\tconst counterBuffer = new ArrayBuffer(4);\n\tconst counterView = new Uint8Array(counterBuffer);\n\tcounterView[0] = 0x00;\n\tcounterView[1] = 0x00;\n\tcounterView[2] = 0x00;\n\tcounterView[3] = Counter;\n\t\n\tlet combinedBuffer = new ArrayBuffer(0);\n\t//endregion\n\t\n\t//region Get a \"crypto\" extension\n\tconst crypto = getCrypto();\n\tif(typeof crypto === \"undefined\")\n\t\treturn Promise.reject(\"Unable to create WebCrypto object\");\n\t//endregion\n\t\n\t//region Create a combined ArrayBuffer for digesting\n\tcombinedBuffer = utilConcatBuf(combinedBuffer, Zbuffer);\n\tcombinedBuffer = utilConcatBuf(combinedBuffer, counterBuffer);\n\tcombinedBuffer = utilConcatBuf(combinedBuffer, SharedInfo);\n\t//endregion\n\t\n\t//region Return digest of combined ArrayBuffer and information about current counter\n\treturn crypto.digest({\n\t\tname: hashFunction\n\t},\n\tcombinedBuffer)\n\t\t.then(result =>\n\t\t\t({\n\t\t\t\tcounter: Counter,\n\t\t\t\tresult\n\t\t\t}));\n\t//endregion\n}\n//**************************************************************************************\n/**\n * ANS X9.63 Key Derivation Function\n * @param {string} hashFunction Used hash function\n * @param {ArrayBuffer} Zbuffer ArrayBuffer containing ECDH shared secret to derive from\n * @param {number} keydatalen Length (!!! in BITS !!!) of used kew derivation function\n * @param {ArrayBuffer} SharedInfo Usually DER encoded \"ECC_CMS_SharedInfo\" structure\n */\nexport function kdf(hashFunction, Zbuffer, keydatalen, SharedInfo)\n{\n\t//region Initial variables\n\tlet hashLength = 0;\n\tlet maxCounter = 1;\n\t\n\tconst kdfArray = [];\n\t//endregion\n\t\n\t//region Check of input parameters\n\tswitch(hashFunction.toUpperCase())\n\t{\n\t\tcase \"SHA-1\":\n\t\t\thashLength = 160; // In bits\n\t\t\tbreak;\n\t\tcase \"SHA-256\":\n\t\t\thashLength = 256; // In bits\n\t\t\tbreak;\n\t\tcase \"SHA-384\":\n\t\t\thashLength = 384; // In bits\n\t\t\tbreak;\n\t\tcase \"SHA-512\":\n\t\t\thashLength = 512; // In bits\n\t\t\tbreak;\n\t\tdefault:\n\t\t\treturn Promise.reject(`Unknown hash function: ${hashFunction}`);\n\t}\n\t\n\tif((Zbuffer instanceof ArrayBuffer) === false)\n\t\treturn Promise.reject(\"Please set \\\"Zbuffer\\\" as \\\"ArrayBuffer\\\"\");\n\t\n\tif(Zbuffer.byteLength === 0)\n\t\treturn Promise.reject(\"\\\"Zbuffer\\\" has zero length, error\");\n\t\n\tif((SharedInfo instanceof ArrayBuffer) === false)\n\t\treturn Promise.reject(\"Please set \\\"SharedInfo\\\" as \\\"ArrayBuffer\\\"\");\n\t//endregion\n\t\n\t//region Calculated maximum value of \"Counter\" variable\n\tconst quotient = keydatalen / hashLength;\n\t\n\tif(Math.floor(quotient) > 0)\n\t{\n\t\tmaxCounter = Math.floor(quotient);\n\t\t\n\t\tif((quotient - maxCounter) > 0)\n\t\t\tmaxCounter++;\n\t}\n\t//endregion\n\t\n\t//region Create an array of \"kdfWithCounter\"\n\tfor(let i = 1; i <= maxCounter; i++)\n\t\tkdfArray.push(kdfWithCounter(hashFunction, Zbuffer, i, SharedInfo));\n\t//endregion\n\t\n\t//region Return combined digest with specified length\n\treturn Promise.all(kdfArray).then(incomingResult =>\n\t{\n\t\t//region Initial variables\n\t\tlet combinedBuffer = new ArrayBuffer(0);\n\t\tlet currentCounter = 1;\n\t\tlet found = true;\n\t\t//endregion\n\t\t\n\t\t//region Combine all buffer together\n\t\twhile(found)\n\t\t{\n\t\t\tfound = false;\n\t\t\t\n\t\t\tfor(const result of incomingResult)\n\t\t\t{\n\t\t\t\tif(result.counter === currentCounter)\n\t\t\t\t{\n\t\t\t\t\tcombinedBuffer = utilConcatBuf(combinedBuffer, result.result);\n\t\t\t\t\tfound = true;\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\t\n\t\t\tcurrentCounter++;\n\t\t}\n\t\t//endregion\n\t\t\n\t\t//region Create output buffer with specified length\n\t\tkeydatalen >>= 3; // Divide by 8 since \"keydatalen\" is in bits\n\t\t\n\t\tif(combinedBuffer.byteLength > keydatalen)\n\t\t{\n\t\t\tconst newBuffer = new ArrayBuffer(keydatalen);\n\t\t\tconst newView = new Uint8Array(newBuffer);\n\t\t\tconst combinedView = new Uint8Array(combinedBuffer);\n\t\t\t\n\t\t\tfor(let i = 0; i < keydatalen; i++)\n\t\t\t\tnewView[i] = combinedView[i];\n\t\t\t\n\t\t\treturn newBuffer;\n\t\t}\n\t\t\n\t\treturn combinedBuffer; // Since the situation when \"combinedBuffer.byteLength < keydatalen\" here we have only \"combinedBuffer.byteLength === keydatalen\"\n\t\t//endregion\n\t});\n\t//endregion\n}\n//**************************************************************************************\n//endregion\n//**************************************************************************************\n"],"file":"common.js"}