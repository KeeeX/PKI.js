{"version":3,"sources":["../src/AuthenticatedSafe.js"],"names":["AuthenticatedSafe","parameters","safeContents","defaultValues","parsedValue","fromSchema","schema","asn1","asn1js","compareSchema","names","contentInfos","verified","Error","Array","from","result","element","ContentInfo","Sequence","value","toSchema","toJSON","Object","Promise","reject","length","sequence","resolve","entries","index","content","contentType","OctetString","authSafeContent","ArrayBuffer","valueBlock","isConstructed","contentValue","valueHex","fromBER","offset","push","privacyMode","SafeContents","cmsEnveloped","EnvelopedData","recipientCertificate","recipientKey","then","decrypt","recipientPrivateKey","cmsEncrypted","EncryptedData","password","error","contentBuffer","toBER","currentParameters","contentToEncrypt","encrypt","encryptionAlgorithm","name","toLowerCase","addRecipientByCertificate","encryptingCertificate","memberName","memberValue","keys","blockName","Repeated"],"mappings":"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","sourcesContent":["import * as asn1js from \"asn1js\";\r\nimport { getParametersValue, utilConcatBuf, clearProps } from \"pvutils\";\r\nimport ContentInfo from \"./ContentInfo.js\";\r\nimport SafeContents from \"./SafeContents.js\";\r\nimport EnvelopedData from \"./EnvelopedData.js\";\r\nimport EncryptedData from \"./EncryptedData.js\";\r\n//**************************************************************************************\r\n/**\r\n * Class from RFC7292\r\n */\r\nexport default class AuthenticatedSafe\r\n{\r\n\t//**********************************************************************************\r\n\t/**\r\n\t * Constructor for AuthenticatedSafe class\r\n\t * @param {Object} [parameters={}]\r\n\t * @param {Object} [parameters.schema] asn1js parsed value to initialize the class from\r\n\t */\r\n\tconstructor(parameters = {})\r\n\t{\r\n\t\t//region Internal properties of the object\r\n\t\t/**\r\n\t\t * @type {Array.<ContentInfo>}\r\n\t\t * @desc safeContents\r\n\t\t */\r\n\t\tthis.safeContents = getParametersValue(parameters, \"safeContents\", AuthenticatedSafe.defaultValues(\"safeContents\"));\r\n\r\n\t\tif(\"parsedValue\" in parameters)\r\n\t\t\t/**\r\n\t\t\t * @type {*}\r\n\t\t\t * @desc parsedValue\r\n\t\t\t */\r\n\t\t\tthis.parsedValue = getParametersValue(parameters, \"parsedValue\", AuthenticatedSafe.defaultValues(\"parsedValue\"));\r\n\t\t//endregion\r\n\t\t\r\n\t\t//region If input argument array contains \"schema\" for this object\r\n\t\tif(\"schema\" in parameters)\r\n\t\t\tthis.fromSchema(parameters.schema);\r\n\t\t//endregion\r\n\t}\r\n\t//**********************************************************************************\r\n\t/**\r\n\t * Return default values for all class members\r\n\t * @param {string} memberName String name for a class member\r\n\t */\r\n\tstatic defaultValues(memberName)\r\n\t{\r\n\t\tswitch(memberName)\r\n\t\t{\r\n\t\t\tcase \"safeContents\":\r\n\t\t\t\treturn [];\r\n\t\t\tcase \"parsedValue\":\r\n\t\t\t\treturn {};\r\n\t\t\tdefault:\r\n\t\t\t\tthrow new Error(`Invalid member name for AuthenticatedSafe class: ${memberName}`);\r\n\t\t}\r\n\t}\r\n\t//**********************************************************************************\r\n\t/**\r\n\t * Compare values with default values for all class members\r\n\t * @param {string} memberName String name for a class member\r\n\t * @param {*} memberValue Value to compare with default value\r\n\t */\r\n\tstatic compareWithDefault(memberName, memberValue)\r\n\t{\r\n\t\tswitch(memberName)\r\n\t\t{\r\n\t\t\tcase \"safeContents\":\r\n\t\t\t\treturn (memberValue.length === 0);\r\n\t\t\tcase \"parsedValue\":\r\n\t\t\t\treturn ((memberValue instanceof Object) && (Object.keys(memberValue).length === 0));\r\n\t\t\tdefault:\r\n\t\t\t\tthrow new Error(`Invalid member name for AuthenticatedSafe class: ${memberName}`);\r\n\t\t}\r\n\t}\r\n\t//**********************************************************************************\r\n\t/**\r\n\t * Return value of pre-defined ASN.1 schema for current class\r\n\t *\r\n\t * ASN.1 schema:\r\n\t * ```asn1\r\n\t * AuthenticatedSafe ::= SEQUENCE OF ContentInfo\r\n\t * -- Data if unencrypted\r\n\t * -- EncryptedData if password-encrypted\r\n\t * -- EnvelopedData if public key-encrypted\r\n\t * ```\r\n\t *\r\n\t * @param {Object} parameters Input parameters for the schema\r\n\t * @returns {Object} asn1js schema object\r\n\t */\r\n\tstatic schema(parameters = {})\r\n\t{\r\n\t\t/**\r\n\t\t * @type {Object}\r\n\t\t * @property {string} [blockName]\r\n\t\t * @property {string} [contentInfos]\r\n\t\t */\r\n\t\tconst names = getParametersValue(parameters, \"names\", {});\r\n\t\t\r\n\t\treturn (new asn1js.Sequence({\r\n\t\t\tname: (names.blockName || \"\"),\r\n\t\t\tvalue: [\r\n\t\t\t\tnew asn1js.Repeated({\r\n\t\t\t\t\tname: (names.contentInfos || \"\"),\r\n\t\t\t\t\tvalue: ContentInfo.schema()\r\n\t\t\t\t})\r\n\t\t\t]\r\n\t\t}));\r\n\t}\r\n\t//**********************************************************************************\r\n\t/**\r\n\t * Convert parsed asn1js object into current class\r\n\t * @param {!Object} schema\r\n\t */\r\n\tfromSchema(schema)\r\n\t{\r\n\t\t//region Clear input data first\r\n\t\tclearProps(schema, [\r\n\t\t\t\"contentInfos\"\r\n\t\t]);\r\n\t\t//endregion\r\n\t\t\r\n\t\t//region Check the schema is valid\r\n\t\tconst asn1 = asn1js.compareSchema(schema,\r\n\t\t\tschema,\r\n\t\t\tAuthenticatedSafe.schema({\r\n\t\t\t\tnames: {\r\n\t\t\t\t\tcontentInfos: \"contentInfos\"\r\n\t\t\t\t}\r\n\t\t\t})\r\n\t\t);\r\n\t\t\r\n\t\tif(asn1.verified === false)\r\n\t\t\tthrow new Error(\"Object's schema was not verified against input data for AuthenticatedSafe\");\r\n\t\t//endregion\r\n\t\t\r\n\t\t//region Get internal properties from parsed schema\r\n\t\tthis.safeContents = Array.from(asn1.result.contentInfos, element => new ContentInfo({ schema: element }));\r\n\t\t//endregion\r\n\t}\r\n\t//**********************************************************************************\r\n\t/**\r\n\t * Convert current object to asn1js object and set correct values\r\n\t * @returns {Object} asn1js object\r\n\t */\r\n\ttoSchema()\r\n\t{\r\n\t\t//region Construct and return new ASN.1 schema for this object\r\n\t\treturn (new asn1js.Sequence({\r\n\t\t\tvalue: Array.from(this.safeContents, element => element.toSchema())\r\n\t\t}));\r\n\t\t//endregion\r\n\t}\r\n\t//**********************************************************************************\r\n\t/**\r\n\t * Convertion for the class to JSON object\r\n\t * @returns {Object}\r\n\t */\r\n\ttoJSON()\r\n\t{\r\n\t\treturn {\r\n\t\t\tsafeContents: Array.from(this.safeContents, element => element.toJSON())\r\n\t\t};\r\n\t}\r\n\t//**********************************************************************************\r\n\tparseInternalValues(parameters)\r\n\t{\r\n\t\t//region Check input data from \"parameters\" \r\n\t\tif((parameters instanceof Object) === false)\r\n\t\t\treturn Promise.reject(\"The \\\"parameters\\\" must has \\\"Object\\\" type\");\r\n\t\t\r\n\t\tif((\"safeContents\" in parameters) === false)\r\n\t\t\treturn Promise.reject(\"Absent mandatory parameter \\\"safeContents\\\"\");\r\n\t\t\r\n\t\tif((parameters.safeContents instanceof Array) === false)\r\n\t\t\treturn Promise.reject(\"The \\\"parameters.safeContents\\\" must has \\\"Array\\\" type\");\r\n\t\t\r\n\t\tif(parameters.safeContents.length !== this.safeContents.length)\r\n\t\t\treturn Promise.reject(\"Length of \\\"parameters.safeContents\\\" must be equal to \\\"this.safeContents.length\\\"\");\r\n\t\t//endregion \r\n\t\t\r\n\t\t//region Initial variables \r\n\t\tlet sequence = Promise.resolve();\r\n\t\t//endregion\r\n\t\t\r\n\t\t//region Create value for \"this.parsedValue.authenticatedSafe\" \r\n\t\tthis.parsedValue = {\r\n\t\t\tsafeContents: []\r\n\t\t};\r\n\t\t\r\n\t\tfor(const [index, content] of this.safeContents.entries())\r\n\t\t{\r\n\t\t\tswitch(content.contentType)\r\n\t\t\t{\r\n\t\t\t\t//region data \r\n\t\t\t\tcase \"1.2.840.113549.1.7.1\":\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\t//region Check that we do have OCTETSTRING as \"content\"\r\n\t\t\t\t\t\tif((content.content instanceof asn1js.OctetString) === false)\r\n\t\t\t\t\t\t\treturn Promise.reject(\"Wrong type of \\\"this.safeContents[j].content\\\"\");\r\n\t\t\t\t\t\t//endregion\r\n\t\t\t\t\t\t\r\n\t\t\t\t\t\t//region Check we have \"constructive encoding\" for AuthSafe content\r\n\t\t\t\t\t\tlet authSafeContent = new ArrayBuffer(0);\r\n\t\t\t\t\t\t\r\n\t\t\t\t\t\tif(content.content.valueBlock.isConstructed)\r\n\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\tfor(const contentValue of content.content.valueBlock.value)\r\n\t\t\t\t\t\t\t\tauthSafeContent = utilConcatBuf(authSafeContent, contentValue.valueBlock.valueHex);\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\telse\r\n\t\t\t\t\t\t\tauthSafeContent = content.content.valueBlock.valueHex;\r\n\t\t\t\t\t\t//endregion\r\n\t\t\t\t\t\t\r\n\t\t\t\t\t\t//region Parse internal ASN.1 data\r\n\t\t\t\t\t\tconst asn1 = asn1js.fromBER(authSafeContent);\r\n\t\t\t\t\t\tif(asn1.offset === (-1))\r\n\t\t\t\t\t\t\treturn Promise.reject(\"Error during parsing of ASN.1 data inside \\\"content.content\\\"\");\r\n\t\t\t\t\t\t//endregion\r\n\t\t\t\t\t\t\r\n\t\t\t\t\t\t//region Finilly initialize initial values of \"SafeContents\" type\r\n\t\t\t\t\t\tthis.parsedValue.safeContents.push({\r\n\t\t\t\t\t\t\tprivacyMode: 0, // No privacy, clear data\r\n\t\t\t\t\t\t\tvalue: new SafeContents({ schema: asn1.result })\r\n\t\t\t\t\t\t});\r\n\t\t\t\t\t\t//endregion\r\n\t\t\t\t\t}\r\n\t\t\t\t\tbreak;\r\n\t\t\t\t//endregion \r\n\t\t\t\t//region envelopedData \r\n\t\t\t\tcase \"1.2.840.113549.1.7.3\":\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\t//region Initial variables\r\n\t\t\t\t\t\tconst cmsEnveloped = new EnvelopedData({ schema: content.content });\r\n\t\t\t\t\t\t//endregion\r\n\t\t\t\t\t\t\r\n\t\t\t\t\t\t//region Check mandatory parameters\r\n\t\t\t\t\t\tif((\"recipientCertificate\" in parameters.safeContents[index]) === false)\r\n\t\t\t\t\t\t\treturn Promise.reject(\"Absent mandatory parameter \\\"recipientCertificate\\\" in \\\"parameters.safeContents[j]\\\"\");\r\n\t\t\t\t\t\t\r\n\t\t\t\t\t\tconst recipientCertificate = parameters.safeContents[index].recipientCertificate;\r\n\t\t\t\t\t\t\r\n\t\t\t\t\t\tif((\"recipientKey\" in parameters.safeContents[index]) === false)\r\n\t\t\t\t\t\t\treturn Promise.reject(\"Absent mandatory parameter \\\"recipientKey\\\" in \\\"parameters.safeContents[j]\\\"\");\r\n\t\t\t\t\t\t\r\n\t\t\t\t\t\t// noinspection JSUnresolvedVariable\r\n\t\t\t\t\t\tconst recipientKey = parameters.safeContents[index].recipientKey;\r\n\t\t\t\t\t\t//endregion\r\n\t\t\t\t\t\t\r\n\t\t\t\t\t\t//region Decrypt CMS EnvelopedData using first recipient information\r\n\t\t\t\t\t\tsequence = sequence.then(\r\n\t\t\t\t\t\t\t() => cmsEnveloped.decrypt(0, {\r\n\t\t\t\t\t\t\t\trecipientCertificate,\r\n\t\t\t\t\t\t\t\trecipientPrivateKey: recipientKey\r\n\t\t\t\t\t\t\t})\r\n\t\t\t\t\t\t);\r\n\t\t\t\t\t\t\r\n\t\t\t\t\t\tsequence = sequence.then(\r\n\t\t\t\t\t\t\t/**\r\n\t\t\t\t\t\t\t * @param {ArrayBuffer} result\r\n\t\t\t\t\t\t\t */\r\n\t\t\t\t\t\t\tresult =>\r\n\t\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\t\tconst asn1 = asn1js.fromBER(result);\r\n\t\t\t\t\t\t\t\tif(asn1.offset === (-1))\r\n\t\t\t\t\t\t\t\t\treturn Promise.reject(\"Error during parsing of decrypted data\");\r\n\t\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\t\tthis.parsedValue.safeContents.push({\r\n\t\t\t\t\t\t\t\t\tprivacyMode: 2, // Public-key privacy mode\r\n\t\t\t\t\t\t\t\t\tvalue: new SafeContents({ schema: asn1.result })\r\n\t\t\t\t\t\t\t\t});\r\n\t\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\t\treturn Promise.resolve();\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t);\r\n\t\t\t\t\t\t//endregion\r\n\t\t\t\t\t}\r\n\t\t\t\t\tbreak;\r\n\t\t\t\t//endregion   \r\n\t\t\t\t//region encryptedData \r\n\t\t\t\tcase \"1.2.840.113549.1.7.6\":\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\t//region Initial variables\r\n\t\t\t\t\t\tconst cmsEncrypted = new EncryptedData({ schema: content.content });\r\n\t\t\t\t\t\t//endregion\r\n\t\t\t\t\t\t\r\n\t\t\t\t\t\t//region Check mandatory parameters\r\n\t\t\t\t\t\tif((\"password\" in parameters.safeContents[index]) === false)\r\n\t\t\t\t\t\t\treturn Promise.reject(\"Absent mandatory parameter \\\"password\\\" in \\\"parameters.safeContents[j]\\\"\");\r\n\t\t\t\t\t\t\r\n\t\t\t\t\t\tconst password = parameters.safeContents[index].password;\r\n\t\t\t\t\t\t//endregion\r\n\t\t\t\t\t\t\r\n\t\t\t\t\t\t//region Decrypt CMS EncryptedData using password\r\n\t\t\t\t\t\tsequence = sequence.then(\r\n\t\t\t\t\t\t\t() => cmsEncrypted.decrypt({\r\n\t\t\t\t\t\t\t\tpassword\r\n\t\t\t\t\t\t\t}),\r\n\t\t\t\t\t\t\terror => Promise.reject(error)\r\n\t\t\t\t\t\t);\r\n\t\t\t\t\t\t//endregion\r\n\t\t\t\t\t\t\r\n\t\t\t\t\t\t//region Initialize internal data\r\n\t\t\t\t\t\tsequence = sequence.then(\r\n\t\t\t\t\t\t\t/**\r\n\t\t\t\t\t\t\t * @param {ArrayBuffer} result\r\n\t\t\t\t\t\t\t */\r\n\t\t\t\t\t\t\tresult =>\r\n\t\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\t\tconst asn1 = asn1js.fromBER(result);\r\n\t\t\t\t\t\t\t\tif(asn1.offset === (-1))\r\n\t\t\t\t\t\t\t\t\treturn Promise.reject(\"Error during parsing of decrypted data\");\r\n\t\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\t\tthis.parsedValue.safeContents.push({\r\n\t\t\t\t\t\t\t\t\tprivacyMode: 1, // Password-based privacy mode\r\n\t\t\t\t\t\t\t\t\tvalue: new SafeContents({ schema: asn1.result })\r\n\t\t\t\t\t\t\t\t});\r\n\t\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\t\treturn Promise.resolve();\r\n\t\t\t\t\t\t\t},\r\n\t\t\t\t\t\t\terror => Promise.reject(error)\r\n\t\t\t\t\t\t);\r\n\t\t\t\t\t\t//endregion\r\n\t\t\t\t\t}\r\n\t\t\t\t\tbreak;\r\n\t\t\t\t//endregion   \r\n\t\t\t\t//region default \r\n\t\t\t\tdefault:\r\n\t\t\t\t\tthrow new Error(`Unknown \"contentType\" for AuthenticatedSafe: \" ${content.contentType}`);\r\n\t\t\t\t//endregion \r\n\t\t\t}\r\n\t\t}\r\n\t\t//endregion \r\n\t\t\r\n\t\treturn sequence;\r\n\t}\r\n\t//**********************************************************************************\r\n\tmakeInternalValues(parameters)\r\n\t{\r\n\t\t//region Check data in \"parsedValue\" \r\n\t\tif((\"parsedValue\" in this) === false)\r\n\t\t\treturn Promise.reject(\"Please run \\\"parseValues\\\" first or add \\\"parsedValue\\\" manually\");\r\n\t\t\r\n\t\tif((this.parsedValue instanceof Object) === false)\r\n\t\t\treturn Promise.reject(\"The \\\"this.parsedValue\\\" must has \\\"Object\\\" type\");\r\n\t\t\r\n\t\tif((this.parsedValue.safeContents instanceof Array) === false)\r\n\t\t\treturn Promise.reject(\"The \\\"this.parsedValue.safeContents\\\" must has \\\"Array\\\" type\");\r\n\t\t//endregion \r\n\t\t\r\n\t\t//region Check input data from \"parameters\" \r\n\t\tif((parameters instanceof Object) === false)\r\n\t\t\treturn Promise.reject(\"The \\\"parameters\\\" must has \\\"Object\\\" type\");\r\n\t\t\r\n\t\tif((\"safeContents\" in parameters) === false)\r\n\t\t\treturn Promise.reject(\"Absent mandatory parameter \\\"safeContents\\\"\");\r\n\t\t\r\n\t\tif((parameters.safeContents instanceof Array) === false)\r\n\t\t\treturn Promise.reject(\"The \\\"parameters.safeContents\\\" must has \\\"Array\\\" type\");\r\n\t\t\r\n\t\tif(parameters.safeContents.length !== this.parsedValue.safeContents.length)\r\n\t\t\treturn Promise.reject(\"Length of \\\"parameters.safeContents\\\" must be equal to \\\"this.parsedValue.safeContents\\\"\");\r\n\t\t//endregion \r\n\t\t\r\n\t\t//region Initial variables \r\n\t\tlet sequence = Promise.resolve();\r\n\t\t//endregion\r\n\t\t\r\n\t\t//region Create internal values from already parsed values \r\n\t\tthis.safeContents = [];\r\n\t\t\r\n\t\tfor(const [index, content] of this.parsedValue.safeContents.entries())\r\n\t\t{\r\n\t\t\t//region Check current \"content\" value\r\n\t\t\tif((\"privacyMode\" in content) === false)\r\n\t\t\t\treturn Promise.reject(\"The \\\"privacyMode\\\" is a mandatory parameter for \\\"content\\\"\");\r\n\t\t\t\r\n\t\t\tif((\"value\" in content) === false)\r\n\t\t\t\treturn Promise.reject(\"The \\\"value\\\" is a mandatory parameter for \\\"content\\\"\");\r\n\t\t\t\r\n\t\t\tif((content.value instanceof SafeContents) === false)\r\n\t\t\t\treturn Promise.reject(\"The \\\"content.value\\\" must has \\\"SafeContents\\\" type\");\r\n\t\t\t//endregion \r\n\t\t\t\r\n\t\t\tswitch(content.privacyMode)\r\n\t\t\t{\r\n\t\t\t\t//region No privacy \r\n\t\t\t\tcase 0:\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\tconst contentBuffer = content.value.toSchema().toBER(false);\r\n\t\t\t\t\t\t\r\n\t\t\t\t\t\tsequence = sequence.then(\r\n\t\t\t\t\t\t\t() =>\r\n\t\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\t\tthis.safeContents.push(new ContentInfo({\r\n\t\t\t\t\t\t\t\t\tcontentType: \"1.2.840.113549.1.7.1\",\r\n\t\t\t\t\t\t\t\t\tcontent: new asn1js.OctetString({ valueHex: contentBuffer })\r\n\t\t\t\t\t\t\t\t}));\r\n\t\t\t\t\t\t\t});\r\n\t\t\t\t\t}\r\n\t\t\t\t\tbreak;\r\n\t\t\t\t//endregion \r\n\t\t\t\t//region Privacy with password\r\n\t\t\t\tcase 1:\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\t//region Initial variables\r\n\t\t\t\t\t\tconst cmsEncrypted = new EncryptedData();\r\n\t\t\t\t\t\t\r\n\t\t\t\t\t\tconst currentParameters = parameters.safeContents[index];\r\n\t\t\t\t\t\tcurrentParameters.contentToEncrypt = content.value.toSchema().toBER(false);\r\n\t\t\t\t\t\t//endregion\r\n\t\t\t\t\t\t\r\n\t\t\t\t\t\t//region Encrypt CMS EncryptedData using password\r\n\t\t\t\t\t\tsequence = sequence.then(\r\n\t\t\t\t\t\t\t() => cmsEncrypted.encrypt(currentParameters),\r\n\t\t\t\t\t\t\terror => Promise.reject(error)\r\n\t\t\t\t\t\t);\r\n\t\t\t\t\t\t//endregion\r\n\t\t\t\t\t\t\r\n\t\t\t\t\t\t//region Store result content in CMS_CONTENT_INFO type\r\n\t\t\t\t\t\tsequence = sequence.then(\r\n\t\t\t\t\t\t\t() =>\r\n\t\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\t\tthis.safeContents.push(new ContentInfo({\r\n\t\t\t\t\t\t\t\t\tcontentType: \"1.2.840.113549.1.7.6\",\r\n\t\t\t\t\t\t\t\t\tcontent: cmsEncrypted.toSchema()\r\n\t\t\t\t\t\t\t\t}));\r\n\t\t\t\t\t\t\t},\r\n\t\t\t\t\t\t\terror => Promise.reject(error)\r\n\t\t\t\t\t\t);\r\n\t\t\t\t\t\t//endregion\r\n\t\t\t\t\t}\r\n\t\t\t\t\tbreak;\r\n\t\t\t\t//endregion \r\n\t\t\t\t//region Privacy with public key\r\n\t\t\t\tcase 2:\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\t//region Initial variables\r\n\t\t\t\t\t\tconst cmsEnveloped = new EnvelopedData();\r\n\t\t\t\t\t\tconst contentToEncrypt = content.value.toSchema().toBER(false);\r\n\t\t\t\t\t\t//endregion\r\n\t\t\t\t\t\t\r\n\t\t\t\t\t\t//region Check mandatory parameters\r\n\t\t\t\t\t\tif((\"encryptingCertificate\" in parameters.safeContents[index]) === false)\r\n\t\t\t\t\t\t\treturn Promise.reject(\"Absent mandatory parameter \\\"encryptingCertificate\\\" in \\\"parameters.safeContents[i]\\\"\");\r\n\t\t\t\t\t\t\r\n\t\t\t\t\t\tif((\"encryptionAlgorithm\" in parameters.safeContents[index]) === false)\r\n\t\t\t\t\t\t\treturn Promise.reject(\"Absent mandatory parameter \\\"encryptionAlgorithm\\\" in \\\"parameters.safeContents[i]\\\"\");\r\n\t\t\t\t\t\t\r\n\t\t\t\t\t\tswitch(true)\r\n\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\tcase (parameters.safeContents[index].encryptionAlgorithm.name.toLowerCase() === \"aes-cbc\"):\r\n\t\t\t\t\t\t\tcase (parameters.safeContents[index].encryptionAlgorithm.name.toLowerCase() === \"aes-gcm\"):\r\n\t\t\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t\t\tdefault:\r\n\t\t\t\t\t\t\t\treturn Promise.reject(`Incorrect parameter \"encryptionAlgorithm\" in \"parameters.safeContents[i]\": ${parameters.safeContents[index].encryptionAlgorithm}`);\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\r\n\t\t\t\t\t\tswitch(true)\r\n\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\tcase (parameters.safeContents[index].encryptionAlgorithm.length === 128):\r\n\t\t\t\t\t\t\tcase (parameters.safeContents[index].encryptionAlgorithm.length === 192):\r\n\t\t\t\t\t\t\tcase (parameters.safeContents[index].encryptionAlgorithm.length === 256):\r\n\t\t\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t\t\tdefault:\r\n\t\t\t\t\t\t\t\treturn Promise.reject(`Incorrect parameter \"encryptionAlgorithm.length\" in \"parameters.safeContents[i]\": ${parameters.safeContents[index].encryptionAlgorithm.length}`);\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\t//endregion\r\n\t\t\t\t\t\t\r\n\t\t\t\t\t\t//region Making correct \"encryptionAlgorithm\" variable\r\n\t\t\t\t\t\tconst encryptionAlgorithm = parameters.safeContents[index].encryptionAlgorithm;\r\n\t\t\t\t\t\t//endregion\r\n\t\t\t\t\t\t\r\n\t\t\t\t\t\t//region Append recipient for enveloped data\r\n\t\t\t\t\t\tcmsEnveloped.addRecipientByCertificate(parameters.safeContents[index].encryptingCertificate);\r\n\t\t\t\t\t\t//endregion\r\n\t\t\t\t\t\t\r\n\t\t\t\t\t\t//region Making encryption\r\n\t\t\t\t\t\tsequence = sequence.then(\r\n\t\t\t\t\t\t\t() => cmsEnveloped.encrypt(encryptionAlgorithm, contentToEncrypt)\r\n\t\t\t\t\t\t);\r\n\t\t\t\t\t\t\r\n\t\t\t\t\t\tsequence = sequence.then(\r\n\t\t\t\t\t\t\t() =>\r\n\t\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\t\tthis.safeContents.push(new ContentInfo({\r\n\t\t\t\t\t\t\t\t\tcontentType: \"1.2.840.113549.1.7.3\",\r\n\t\t\t\t\t\t\t\t\tcontent: cmsEnveloped.toSchema()\r\n\t\t\t\t\t\t\t\t}));\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t);\r\n\t\t\t\t\t\t//endregion\r\n\t\t\t\t\t}\r\n\t\t\t\t\tbreak;\r\n\t\t\t\t//endregion \r\n\t\t\t\t//region default \r\n\t\t\t\tdefault:\r\n\t\t\t\t\treturn Promise.reject(`Incorrect value for \"content.privacyMode\": ${content.privacyMode}`);\r\n\t\t\t\t//endregion \r\n\t\t\t}\r\n\t\t}\r\n\t\t//endregion \r\n\t\t\r\n\t\t//region Return result of the function \r\n\t\treturn sequence.then(\r\n\t\t\t() => this,\r\n\t\t\terror => Promise.reject(`Error during parsing: ${error}`)\r\n\t\t);\r\n\t\t//endregion   \r\n\t}\r\n\t//**********************************************************************************\r\n}\r\n//**************************************************************************************\r\n"],"file":"AuthenticatedSafe.js"}