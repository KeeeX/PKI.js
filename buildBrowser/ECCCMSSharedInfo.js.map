{"version":3,"sources":["../src/ECCCMSSharedInfo.js"],"names":["ECCCMSSharedInfo","parameters","keyInfo","defaultValues","entityUInfo","suppPubInfo","fromSchema","schema","asn1","asn1js","compareSchema","names","blockName","verified","Error","AlgorithmIdentifier","result","valueBlock","value","outputArray","push","toSchema","Constructed","idBlock","tagClass","tagNumber","Sequence","_object","toJSON","memberName","OctetString","memberValue","isEqual","name","optional"],"mappings":"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","sourcesContent":["import * as asn1js from \"asn1js\";\r\nimport { getParametersValue, clearProps } from \"pvutils\";\r\nimport AlgorithmIdentifier from \"./AlgorithmIdentifier.js\";\r\n//**************************************************************************************\r\n/**\r\n * Class from RFC6318\r\n */\r\nexport default class ECCCMSSharedInfo\r\n{\r\n\t//**********************************************************************************\r\n\t/**\r\n\t * Constructor for ECCCMSSharedInfo class\r\n\t * @param {Object} [parameters={}]\r\n\t * @param {Object} [parameters.schema] asn1js parsed value to initialize the class from\r\n\t */\r\n\tconstructor(parameters = {})\r\n\t{\r\n\t\t//region Internal properties of the object\r\n\t\t/**\r\n\t\t * @type {AlgorithmIdentifier}\r\n\t\t * @desc keyInfo\r\n\t\t */\r\n\t\tthis.keyInfo = getParametersValue(parameters, \"keyInfo\", ECCCMSSharedInfo.defaultValues(\"keyInfo\"));\r\n\r\n\t\tif(\"entityUInfo\" in parameters)\r\n\t\t\t/**\r\n\t\t\t * @type {OctetString}\r\n\t\t\t * @desc entityUInfo\r\n\t\t\t */\r\n\t\t\tthis.entityUInfo = getParametersValue(parameters, \"entityUInfo\", ECCCMSSharedInfo.defaultValues(\"entityUInfo\"));\r\n\r\n\t\t/**\r\n\t\t * @type {OctetString}\r\n\t\t * @desc suppPubInfo\r\n\t\t */\r\n\t\tthis.suppPubInfo = getParametersValue(parameters, \"suppPubInfo\", ECCCMSSharedInfo.defaultValues(\"suppPubInfo\"));\r\n\t\t//endregion\r\n\r\n\t\t//region If input argument array contains \"schema\" for this object\r\n\t\tif(\"schema\" in parameters)\r\n\t\t\tthis.fromSchema(parameters.schema);\r\n\t\t//endregion\r\n\t}\r\n\t//**********************************************************************************\r\n\t/**\r\n\t * Return default values for all class members\r\n\t * @param {string} memberName String name for a class member\r\n\t */\r\n\tstatic defaultValues(memberName)\r\n\t{\r\n\t\tswitch(memberName)\r\n\t\t{\r\n\t\t\tcase \"keyInfo\":\r\n\t\t\t\treturn new AlgorithmIdentifier();\r\n\t\t\tcase \"entityUInfo\":\r\n\t\t\t\treturn new asn1js.OctetString();\r\n\t\t\tcase \"suppPubInfo\":\r\n\t\t\t\treturn new asn1js.OctetString();\r\n\t\t\tdefault:\r\n\t\t\t\tthrow new Error(`Invalid member name for ECCCMSSharedInfo class: ${memberName}`);\r\n\t\t}\r\n\t}\r\n\t//**********************************************************************************\r\n\t/**\r\n\t * Compare values with default values for all class members\r\n\t * @param {string} memberName String name for a class member\r\n\t * @param {*} memberValue Value to compare with default value\r\n\t */\r\n\tstatic compareWithDefault(memberName, memberValue)\r\n\t{\r\n\t\tswitch(memberName)\r\n\t\t{\r\n\t\t\tcase \"keyInfo\":\r\n\t\t\tcase \"entityUInfo\":\r\n\t\t\tcase \"suppPubInfo\":\r\n\t\t\t\treturn (memberValue.isEqual(ECCCMSSharedInfo.defaultValues(memberName)));\r\n\t\t\tdefault:\r\n\t\t\t\tthrow new Error(`Invalid member name for ECCCMSSharedInfo class: ${memberName}`);\r\n\t\t}\r\n\t}\r\n\t//**********************************************************************************\r\n\t/**\r\n\t * Return value of pre-defined ASN.1 schema for current class\r\n\t *\r\n\t * ASN.1 schema:\r\n\t * ```asn1\r\n\t * ECC-CMS-SharedInfo  ::=  SEQUENCE {\r\n\t *    keyInfo      AlgorithmIdentifier,\r\n\t *    entityUInfo  [0] EXPLICIT OCTET STRING OPTIONAL,\r\n\t *    suppPubInfo  [2] EXPLICIT OCTET STRING }\r\n\t * ```\r\n\t *\r\n\t * @param {Object} parameters Input parameters for the schema\r\n\t * @returns {Object} asn1js schema object\r\n\t */\r\n\tstatic schema(parameters = {})\r\n\t{\r\n\t\t/**\r\n\t\t * @type {Object}\r\n\t\t * @property {string} [blockName]\r\n\t\t * @property {string} [keyInfo]\r\n\t\t * @property {string} [entityUInfo]\r\n\t\t * @property {string} [suppPubInfo]\r\n\t\t */\r\n\t\tconst names = getParametersValue(parameters, \"names\", {});\r\n\r\n\t\treturn (new asn1js.Sequence({\r\n\t\t\tname: (names.blockName || \"\"),\r\n\t\t\tvalue: [\r\n\t\t\t\tAlgorithmIdentifier.schema(names.keyInfo || {}),\r\n\t\t\t\tnew asn1js.Constructed({\r\n\t\t\t\t\tname: (names.entityUInfo || \"\"),\r\n\t\t\t\t\tidBlock: {\r\n\t\t\t\t\t\ttagClass: 3, // CONTEXT-SPECIFIC\r\n\t\t\t\t\t\ttagNumber: 0 // [0]\r\n\t\t\t\t\t},\r\n\t\t\t\t\toptional: true,\r\n\t\t\t\t\tvalue: [new asn1js.OctetString()]\r\n\t\t\t\t}),\r\n\t\t\t\tnew asn1js.Constructed({\r\n\t\t\t\t\tname: (names.suppPubInfo || \"\"),\r\n\t\t\t\t\tidBlock: {\r\n\t\t\t\t\t\ttagClass: 3, // CONTEXT-SPECIFIC\r\n\t\t\t\t\t\ttagNumber: 2 // [2]\r\n\t\t\t\t\t},\r\n\t\t\t\t\tvalue: [new asn1js.OctetString()]\r\n\t\t\t\t})\r\n\t\t\t]\r\n\t\t}));\r\n\t}\r\n\t//**********************************************************************************\r\n\t/**\r\n\t * Convert parsed asn1js object into current class\r\n\t * @param {!Object} schema\r\n\t */\r\n\tfromSchema(schema)\r\n\t{\r\n\t\t//region Clear input data first\r\n\t\tclearProps(schema, [\r\n\t\t\t\"keyInfo\",\r\n\t\t\t\"entityUInfo\",\r\n\t\t\t\"suppPubInfo\"\r\n\t\t]);\r\n\t\t//endregion\r\n\t\t\r\n\t\t//region Check the schema is valid\r\n\t\tconst asn1 = asn1js.compareSchema(schema,\r\n\t\t\tschema,\r\n\t\t\tECCCMSSharedInfo.schema({\r\n\t\t\t\tnames: {\r\n\t\t\t\t\tkeyInfo: {\r\n\t\t\t\t\t\tnames: {\r\n\t\t\t\t\t\t\tblockName: \"keyInfo\"\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t},\r\n\t\t\t\t\tentityUInfo: \"entityUInfo\",\r\n\t\t\t\t\tsuppPubInfo: \"suppPubInfo\"\r\n\t\t\t\t}\r\n\t\t\t})\r\n\t\t);\r\n\r\n\t\tif(asn1.verified === false)\r\n\t\t\tthrow new Error(\"Object's schema was not verified against input data for ECCCMSSharedInfo\");\r\n\t\t//endregion\r\n\r\n\t\t//region Get internal properties from parsed schema\r\n\t\tthis.keyInfo = new AlgorithmIdentifier({ schema: asn1.result.keyInfo });\r\n\r\n\t\tif(\"entityUInfo\" in asn1.result)\r\n\t\t\tthis.entityUInfo = asn1.result.entityUInfo.valueBlock.value[0];\r\n\r\n\t\tthis.suppPubInfo = asn1.result.suppPubInfo.valueBlock.value[0];\r\n\t\t//endregion\r\n\t}\r\n\t//**********************************************************************************\r\n\t/**\r\n\t * Convert current object to asn1js object and set correct values\r\n\t * @returns {Object} asn1js object\r\n\t */\r\n\ttoSchema()\r\n\t{\r\n\t\t//region Create output array for sequence \r\n\t\tconst outputArray = [];\r\n\t\t\r\n\t\toutputArray.push(this.keyInfo.toSchema());\r\n\t\t\r\n\t\tif(\"entityUInfo\" in this)\r\n\t\t{\r\n\t\t\toutputArray.push(new asn1js.Constructed({\r\n\t\t\t\tidBlock: {\r\n\t\t\t\t\ttagClass: 3, // CONTEXT-SPECIFIC\r\n\t\t\t\t\ttagNumber: 0 // [0]\r\n\t\t\t\t},\r\n\t\t\t\tvalue: [this.entityUInfo]\r\n\t\t\t}));\r\n\t\t}\r\n\t\t\r\n\t\toutputArray.push(new asn1js.Constructed({\r\n\t\t\tidBlock: {\r\n\t\t\t\ttagClass: 3, // CONTEXT-SPECIFIC\r\n\t\t\t\ttagNumber: 2 // [2]\r\n\t\t\t},\r\n\t\t\tvalue: [this.suppPubInfo]\r\n\t\t}));\r\n\t\t//endregion \r\n\t\t\r\n\t\t//region Construct and return new ASN.1 schema for this object \r\n\t\treturn new asn1js.Sequence({\r\n\t\t\tvalue: outputArray\r\n\t\t});\r\n\t\t//endregion \r\n\t}\r\n\t//**********************************************************************************\r\n\t/**\r\n\t * Convertion for the class to JSON object\r\n\t * @returns {Object}\r\n\t */\r\n\ttoJSON()\r\n\t{\r\n\t\tconst _object = {\r\n\t\t\tkeyInfo: this.keyInfo.toJSON()\r\n\t\t};\r\n\r\n\t\tif(\"entityUInfo\" in this)\r\n\t\t\t_object.entityUInfo = this.entityUInfo.toJSON();\r\n\r\n\t\t_object.suppPubInfo = this.suppPubInfo.toJSON();\r\n\r\n\t\treturn _object;\r\n\t}\r\n\t//**********************************************************************************\r\n}\r\n//**************************************************************************************\r\n"],"file":"ECCCMSSharedInfo.js"}