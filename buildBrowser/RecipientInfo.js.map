{"version":3,"sources":["../src/RecipientInfo.js"],"names":["RecipientInfo","parameters","variant","defaultValues","value","fromSchema","schema","asn1","asn1js","compareSchema","names","blockName","verified","Error","result","idBlock","tagClass","KeyTransRecipientInfo","blockSequence","Sequence","valueBlock","tagNumber","KeyAgreeRecipientInfo","KEKRecipientInfo","PasswordRecipientinfo","OtherRecipientInfo","_schema","toSchema","Any","_object","toJSON","memberName","memberValue","Object","keys","length","Choice","Constructed","name"],"mappings":"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","sourcesContent":["import * as asn1js from \"asn1js\";\r\nimport { getParametersValue, clearProps } from \"pvutils\";\r\nimport KeyTransRecipientInfo from \"./KeyTransRecipientInfo.js\";\r\nimport KeyAgreeRecipientInfo from \"./KeyAgreeRecipientInfo.js\";\r\nimport KEKRecipientInfo from \"./KEKRecipientInfo.js\";\r\nimport PasswordRecipientinfo from \"./PasswordRecipientinfo.js\";\r\nimport OtherRecipientInfo from \"./OtherRecipientInfo.js\";\r\n//**************************************************************************************\r\n/**\r\n * Class from RFC5652\r\n */\r\nexport default class RecipientInfo\r\n{\r\n\t//**********************************************************************************\r\n\t/**\r\n\t * Constructor for RecipientInfo class\r\n\t * @param {Object} [parameters={}]\r\n\t * @param {Object} [parameters.schema] asn1js parsed value to initialize the class from\r\n\t */\r\n\tconstructor(parameters = {})\r\n\t{\r\n\t\t//region Internal properties of the object\r\n\t\t/**\r\n\t\t * @type {string}\r\n\t\t * @desc variant\r\n\t\t */\r\n\t\tthis.variant = getParametersValue(parameters, \"variant\", RecipientInfo.defaultValues(\"variant\"));\r\n\r\n\t\tif(\"value\" in parameters)\r\n\t\t\t/**\r\n\t\t\t * @type {*}\r\n\t\t\t * @desc value\r\n\t\t\t */\r\n\t\t\tthis.value = getParametersValue(parameters, \"value\", RecipientInfo.defaultValues(\"value\"));\r\n\t\t//endregion\r\n\r\n\t\t//region If input argument array contains \"schema\" for this object\r\n\t\tif(\"schema\" in parameters)\r\n\t\t\tthis.fromSchema(parameters.schema);\r\n\t\t//endregion\r\n\t}\r\n\t//**********************************************************************************\r\n\t/**\r\n\t * Return default values for all class members\r\n\t * @param {string} memberName String name for a class member\r\n\t */\r\n\tstatic defaultValues(memberName)\r\n\t{\r\n\t\tswitch(memberName)\r\n\t\t{\r\n\t\t\tcase \"variant\":\r\n\t\t\t\treturn (-1);\r\n\t\t\tcase \"value\":\r\n\t\t\t\treturn {};\r\n\t\t\tdefault:\r\n\t\t\t\tthrow new Error(`Invalid member name for RecipientInfo class: ${memberName}`);\r\n\t\t}\r\n\t}\r\n\t//**********************************************************************************\r\n\t/**\r\n\t * Compare values with default values for all class members\r\n\t * @param {string} memberName String name for a class member\r\n\t * @param {*} memberValue Value to compare with default value\r\n\t */\r\n\tstatic compareWithDefault(memberName, memberValue)\r\n\t{\r\n\t\tswitch(memberName)\r\n\t\t{\r\n\t\t\tcase \"variant\":\r\n\t\t\t\treturn (memberValue === RecipientInfo.defaultValues(memberName));\r\n\t\t\tcase \"value\":\r\n\t\t\t\treturn (Object.keys(memberValue).length === 0);\r\n\t\t\tdefault:\r\n\t\t\t\tthrow new Error(`Invalid member name for RecipientInfo class: ${memberName}`);\r\n\t\t}\r\n\t}\r\n\t//**********************************************************************************\r\n\t/**\r\n\t * Return value of pre-defined ASN.1 schema for current class\r\n\t *\r\n\t * ASN.1 schema:\r\n\t * ```asn1\r\n\t * RecipientInfo ::= CHOICE {\r\n\t *    ktri KeyTransRecipientInfo,\r\n\t *    kari [1] KeyAgreeRecipientInfo,\r\n\t *    kekri [2] KEKRecipientInfo,\r\n\t *    pwri [3] PasswordRecipientinfo,\r\n\t *    ori [4] OtherRecipientInfo }\r\n\t * ```\r\n\t *\r\n\t * @param {Object} parameters Input parameters for the schema\r\n\t * @returns {Object} asn1js schema object\r\n\t */\r\n\tstatic schema(parameters = {})\r\n\t{\r\n\t\t/**\r\n\t\t * @type {Object}\r\n\t\t * @property {string} [blockName]\r\n\t\t * @property {string} [type]\r\n\t\t * @property {string} [setName]\r\n\t\t * @property {string} [values]\r\n\t\t */\r\n\t\tconst names = getParametersValue(parameters, \"names\", {});\r\n\t\t\r\n\t\treturn (new asn1js.Choice({\r\n\t\t\tvalue: [\r\n\t\t\t\tKeyTransRecipientInfo.schema({\r\n\t\t\t\t\tnames: {\r\n\t\t\t\t\t\tblockName: (names.blockName || \"\")\r\n\t\t\t\t\t}\r\n\t\t\t\t}),\r\n\t\t\t\tnew asn1js.Constructed({\r\n\t\t\t\t\tname: (names.blockName || \"\"),\r\n\t\t\t\t\tidBlock: {\r\n\t\t\t\t\t\ttagClass: 3, // CONTEXT-SPECIFIC\r\n\t\t\t\t\t\ttagNumber: 1 // [1]\r\n\t\t\t\t\t},\r\n\t\t\t\t\tvalue: KeyAgreeRecipientInfo.schema().valueBlock.value\r\n\t\t\t\t}),\r\n\t\t\t\tnew asn1js.Constructed({\r\n\t\t\t\t\tname: (names.blockName || \"\"),\r\n\t\t\t\t\tidBlock: {\r\n\t\t\t\t\t\ttagClass: 3, // CONTEXT-SPECIFIC\r\n\t\t\t\t\t\ttagNumber: 2 // [2]\r\n\t\t\t\t\t},\r\n\t\t\t\t\tvalue: KEKRecipientInfo.schema().valueBlock.value\r\n\t\t\t\t}),\r\n\t\t\t\tnew asn1js.Constructed({\r\n\t\t\t\t\tname: (names.blockName || \"\"),\r\n\t\t\t\t\tidBlock: {\r\n\t\t\t\t\t\ttagClass: 3, // CONTEXT-SPECIFIC\r\n\t\t\t\t\t\ttagNumber: 3 // [3]\r\n\t\t\t\t\t},\r\n\t\t\t\t\tvalue: PasswordRecipientinfo.schema().valueBlock.value\r\n\t\t\t\t}),\r\n\t\t\t\tnew asn1js.Constructed({\r\n\t\t\t\t\tname: (names.blockName || \"\"),\r\n\t\t\t\t\tidBlock: {\r\n\t\t\t\t\t\ttagClass: 3, // CONTEXT-SPECIFIC\r\n\t\t\t\t\t\ttagNumber: 4 // [4]\r\n\t\t\t\t\t},\r\n\t\t\t\t\tvalue: OtherRecipientInfo.schema().valueBlock.value\r\n\t\t\t\t})\r\n\t\t\t]\r\n\t\t}));\r\n\t}\r\n\t//**********************************************************************************\r\n\t/**\r\n\t * Convert parsed asn1js object into current class\r\n\t * @param {!Object} schema\r\n\t */\r\n\tfromSchema(schema)\r\n\t{\r\n\t\t//region Clear input data first\r\n\t\tclearProps(schema, [\r\n\t\t\t\"blockName\"\r\n\t\t]);\r\n\t\t//endregion\r\n\t\t\r\n\t\t//region Check the schema is valid\r\n\t\tconst asn1 = asn1js.compareSchema(schema,\r\n\t\t\tschema,\r\n\t\t\tRecipientInfo.schema({\r\n\t\t\t\tnames: {\r\n\t\t\t\t\tblockName: \"blockName\"\r\n\t\t\t\t}\r\n\t\t\t})\r\n\t\t);\r\n\r\n\t\tif(asn1.verified === false)\r\n\t\t\tthrow new Error(\"Object's schema was not verified against input data for RecipientInfo\");\r\n\t\t//endregion\r\n\r\n\t\t//region Get internal properties from parsed schema\r\n\t\tif(asn1.result.blockName.idBlock.tagClass === 1)\r\n\t\t{\r\n\t\t\tthis.variant = 1;\r\n\t\t\tthis.value = new KeyTransRecipientInfo({ schema: asn1.result.blockName });\r\n\t\t}\r\n\t\telse\r\n\t\t{\r\n\t\t\t//region Create \"SEQUENCE\" from \"ASN1_CONSTRUCTED\"\r\n\t\t\tconst blockSequence = new asn1js.Sequence({\r\n\t\t\t\tvalue: asn1.result.blockName.valueBlock.value\r\n\t\t\t});\r\n\t\t\t//endregion\r\n\r\n\t\t\tswitch(asn1.result.blockName.idBlock.tagNumber)\r\n\t\t\t{\r\n\t\t\t\tcase 1:\r\n\t\t\t\t\tthis.variant = 2;\r\n\t\t\t\t\tthis.value = new KeyAgreeRecipientInfo({ schema: blockSequence });\r\n\t\t\t\t\tbreak;\r\n\t\t\t\tcase 2:\r\n\t\t\t\t\tthis.variant = 3;\r\n\t\t\t\t\tthis.value = new KEKRecipientInfo({ schema: blockSequence });\r\n\t\t\t\t\tbreak;\r\n\t\t\t\tcase 3:\r\n\t\t\t\t\tthis.variant = 4;\r\n\t\t\t\t\tthis.value = new PasswordRecipientinfo({ schema: blockSequence });\r\n\t\t\t\t\tbreak;\r\n\t\t\t\tcase 4:\r\n\t\t\t\t\tthis.variant = 5;\r\n\t\t\t\t\tthis.value = new OtherRecipientInfo({ schema: blockSequence });\r\n\t\t\t\t\tbreak;\r\n\t\t\t\tdefault:\r\n\t\t\t\t\tthrow new Error(\"Incorrect structure of RecipientInfo block\");\r\n\t\t\t}\r\n\t\t}\r\n\t\t//endregion\r\n\t}\r\n\t//**********************************************************************************\r\n\t/**\r\n\t * Convert current object to asn1js object and set correct values\r\n\t * @returns {Object} asn1js object\r\n\t */\r\n\ttoSchema()\r\n\t{\r\n\t\t//region Construct and return new ASN.1 schema for this object\r\n\t\tconst _schema = this.value.toSchema();\r\n\r\n\t\tswitch(this.variant)\r\n\t\t{\r\n\t\t\tcase 1:\r\n\t\t\t\treturn _schema;\r\n\t\t\tcase 2:\r\n\t\t\tcase 3:\r\n\t\t\tcase 4:\r\n\t\t\t\t//region Create \"ASN1_CONSTRUCTED\" from \"SEQUENCE\"\r\n\t\t\t\t_schema.idBlock.tagClass = 3; // CONTEXT-SPECIFIC\r\n\t\t\t\t_schema.idBlock.tagNumber = (this.variant - 1);\r\n\t\t\t\t//endregion\r\n\r\n\t\t\t\treturn _schema;\r\n\t\t\tdefault:\r\n\t\t\t\treturn new asn1js.Any();\r\n\t\t}\r\n\t\t//endregion\r\n\t}\r\n\t//**********************************************************************************\r\n\t/**\r\n\t * Convertion for the class to JSON object\r\n\t * @returns {Object}\r\n\t */\r\n\ttoJSON()\r\n\t{\r\n\t\tconst _object = {\r\n\t\t\tvariant: this.variant\r\n\t\t};\r\n\r\n\t\tif((this.variant >= 1) && (this.variant <= 4))\r\n\t\t\t_object.value = this.value.toJSON();\r\n\r\n\t\treturn _object;\r\n\t}\r\n\t//**********************************************************************************\r\n}\r\n//**************************************************************************************\r\n"],"file":"RecipientInfo.js"}