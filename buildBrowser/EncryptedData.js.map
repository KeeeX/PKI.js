{"version":3,"sources":["../src/EncryptedData.js"],"names":["EncryptedData","parameters","version","defaultValues","encryptedContentInfo","unprotectedAttrs","fromSchema","schema","asn1","asn1js","compareSchema","names","blockName","verified","Error","result","valueBlock","valueDec","EncryptedContentInfo","Array","from","element","Attribute","outputArray","push","Integer","value","toSchema","Constructed","optional","idBlock","tagClass","tagNumber","Sequence","_object","toJSON","Object","Promise","reject","engine","contentType","subtle","encryptEncryptedContentInfo","then","name","decryptEncryptedContentInfo","memberName","memberValue","compareWithDefault","contentEncryptionAlgorithm","encryptedContent","length","Repeated"],"mappings":"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","sourcesContent":["import * as asn1js from \"asn1js\";\r\nimport { getParametersValue, clearProps } from \"pvutils\";\r\nimport { getEngine } from \"./common.js\";\r\nimport EncryptedContentInfo from \"./EncryptedContentInfo.js\";\r\nimport Attribute from \"./Attribute.js\";\r\n//**************************************************************************************\r\n/**\r\n * Class from RFC5652\r\n */\r\nexport default class EncryptedData\r\n{\r\n\t//**********************************************************************************\r\n\t/**\r\n\t * Constructor for EncryptedData class\r\n\t * @param {Object} [parameters={}]\r\n\t * @param {Object} [parameters.schema] asn1js parsed value to initialize the class from\r\n\t */\r\n\tconstructor(parameters = {})\r\n\t{\r\n\t\t//region Internal properties of the object\r\n\t\t/**\r\n\t\t * @type {number}\r\n\t\t * @desc version\r\n\t\t */\r\n\t\tthis.version = getParametersValue(parameters, \"version\", EncryptedData.defaultValues(\"version\"));\r\n\t\t/**\r\n\t\t * @type {EncryptedContentInfo}\r\n\t\t * @desc encryptedContentInfo\r\n\t\t */\r\n\t\tthis.encryptedContentInfo = getParametersValue(parameters, \"encryptedContentInfo\", EncryptedData.defaultValues(\"encryptedContentInfo\"));\r\n\t\t\r\n\t\tif(\"unprotectedAttrs\" in parameters)\r\n\t\t\t/**\r\n\t\t\t * @type {Array.<Attribute>}\r\n\t\t\t * @desc unprotectedAttrs\r\n\t\t\t */\r\n\t\t\tthis.unprotectedAttrs = getParametersValue(parameters, \"unprotectedAttrs\", EncryptedData.defaultValues(\"unprotectedAttrs\"));\r\n\t\t//endregion\r\n\t\t\r\n\t\t//region If input argument array contains \"schema\" for this object\r\n\t\tif(\"schema\" in parameters)\r\n\t\t\tthis.fromSchema(parameters.schema);\r\n\t\t//endregion\r\n\t}\r\n\t//**********************************************************************************\r\n\t/**\r\n\t * Return default values for all class members\r\n\t * @param {string} memberName String name for a class member\r\n\t */\r\n\tstatic defaultValues(memberName)\r\n\t{\r\n\t\tswitch(memberName)\r\n\t\t{\r\n\t\t\tcase \"version\":\r\n\t\t\t\treturn 0;\r\n\t\t\tcase \"encryptedContentInfo\":\r\n\t\t\t\treturn new EncryptedContentInfo();\r\n\t\t\tcase \"unprotectedAttrs\":\r\n\t\t\t\treturn [];\r\n\t\t\tdefault:\r\n\t\t\t\tthrow new Error(`Invalid member name for EncryptedData class: ${memberName}`);\r\n\t\t}\r\n\t}\r\n\t//**********************************************************************************\r\n\t/**\r\n\t * Compare values with default values for all class members\r\n\t * @param {string} memberName String name for a class member\r\n\t * @param {*} memberValue Value to compare with default value\r\n\t */\r\n\tstatic compareWithDefault(memberName, memberValue)\r\n\t{\r\n\t\tswitch(memberName)\r\n\t\t{\r\n\t\t\tcase \"version\":\r\n\t\t\t\treturn (memberValue === 0);\r\n\t\t\tcase \"encryptedContentInfo\":\r\n\t\t\t\treturn ((EncryptedContentInfo.compareWithDefault(\"contentType\", memberValue.contentType)) &&\r\n\t\t\t\t(EncryptedContentInfo.compareWithDefault(\"contentEncryptionAlgorithm\", memberValue.contentEncryptionAlgorithm)) &&\r\n\t\t\t\t(EncryptedContentInfo.compareWithDefault(\"encryptedContent\", memberValue.encryptedContent)));\r\n\t\t\tcase \"unprotectedAttrs\":\r\n\t\t\t\treturn (memberValue.length === 0);\r\n\t\t\tdefault:\r\n\t\t\t\tthrow new Error(`Invalid member name for EncryptedData class: ${memberName}`);\r\n\t\t}\r\n\t}\r\n\t//**********************************************************************************\r\n\t/**\r\n\t * Return value of pre-defined ASN.1 schema for current class\r\n\t *\r\n\t * ASN.1 schema:\r\n\t * ```asn1\r\n\t * EncryptedData ::= SEQUENCE {\r\n\t *    version CMSVersion,\r\n\t *    encryptedContentInfo EncryptedContentInfo,\r\n\t *    unprotectedAttrs [1] IMPLICIT UnprotectedAttributes OPTIONAL }\r\n\t * ```\r\n\t *\r\n\t * @param {Object} parameters Input parameters for the schema\r\n\t * @returns {Object} asn1js schema object\r\n\t */\r\n\tstatic schema(parameters = {})\r\n\t{\r\n\t\t/**\r\n\t\t * @type {Object}\r\n\t\t * @property {string} [blockName]\r\n\t\t * @property {string} [version]\r\n\t\t * @property {string} [encryptedContentInfo]\r\n\t\t * @property {string} [unprotectedAttrs]\r\n\t\t */\r\n\t\tconst names = getParametersValue(parameters, \"names\", {});\r\n\t\t\r\n\t\treturn (new asn1js.Sequence({\r\n\t\t\tname: (names.blockName || \"\"),\r\n\t\t\tvalue: [\r\n\t\t\t\tnew asn1js.Integer({ name: (names.version || \"\") }),\r\n\t\t\t\tEncryptedContentInfo.schema(names.encryptedContentInfo || {}),\r\n\t\t\t\tnew asn1js.Constructed({\r\n\t\t\t\t\toptional: true,\r\n\t\t\t\t\tidBlock: {\r\n\t\t\t\t\t\ttagClass: 3, // CONTEXT-SPECIFIC\r\n\t\t\t\t\t\ttagNumber: 1 // [1]\r\n\t\t\t\t\t},\r\n\t\t\t\t\tvalue: [\r\n\t\t\t\t\t\tnew asn1js.Repeated({\r\n\t\t\t\t\t\t\tname: (names.unprotectedAttrs || \"\"),\r\n\t\t\t\t\t\t\tvalue: Attribute.schema()\r\n\t\t\t\t\t\t})\r\n\t\t\t\t\t]\r\n\t\t\t\t})\r\n\t\t\t]\r\n\t\t}));\r\n\t}\r\n\t//**********************************************************************************\r\n\t/**\r\n\t * Convert parsed asn1js object into current class\r\n\t * @param {!Object} schema\r\n\t */\r\n\tfromSchema(schema)\r\n\t{\r\n\t\t//region Clear input data first\r\n\t\tclearProps(schema, [\r\n\t\t\t\"version\",\r\n\t\t\t\"encryptedContentInfo\",\r\n\t\t\t\"unprotectedAttrs\"\r\n\t\t]);\r\n\t\t//endregion\r\n\t\t\r\n\t\t//region Check the schema is valid\r\n\t\tconst asn1 = asn1js.compareSchema(schema,\r\n\t\t\tschema,\r\n\t\t\tEncryptedData.schema({\r\n\t\t\t\tnames: {\r\n\t\t\t\t\tversion: \"version\",\r\n\t\t\t\t\tencryptedContentInfo: {\r\n\t\t\t\t\t\tnames: {\r\n\t\t\t\t\t\t\tblockName: \"encryptedContentInfo\"\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t},\r\n\t\t\t\t\tunprotectedAttrs: \"unprotectedAttrs\"\r\n\t\t\t\t}\r\n\t\t\t})\r\n\t\t);\r\n\t\t\r\n\t\tif(asn1.verified === false)\r\n\t\t\tthrow new Error(\"Object's schema was not verified against input data for EncryptedData\");\r\n\t\t//endregion\r\n\t\t\r\n\t\t//region Get internal properties from parsed schema\r\n\t\tthis.version = asn1.result.version.valueBlock.valueDec;\r\n\t\tthis.encryptedContentInfo = new EncryptedContentInfo({ schema: asn1.result.encryptedContentInfo });\r\n\t\t\r\n\t\tif(\"unprotectedAttrs\" in asn1.result)\r\n\t\t\tthis.unprotectedAttrs = Array.from(asn1.result.unprotectedAttrs, element => new Attribute({ schema: element }));\r\n\t\t//endregion\r\n\t}\r\n\t//**********************************************************************************\r\n\t/**\r\n\t * Convert current object to asn1js object and set correct values\r\n\t * @returns {Object} asn1js object\r\n\t */\r\n\ttoSchema()\r\n\t{\r\n\t\t//region Create array for output sequence\r\n\t\tconst outputArray = [];\r\n\t\t\r\n\t\toutputArray.push(new asn1js.Integer({ value: this.version }));\r\n\t\toutputArray.push(this.encryptedContentInfo.toSchema());\r\n\t\t\r\n\t\tif(\"unprotectedAttrs\" in this)\r\n\t\t{\r\n\t\t\toutputArray.push(new asn1js.Constructed({\r\n\t\t\t\toptional: true,\r\n\t\t\t\tidBlock: {\r\n\t\t\t\t\ttagClass: 3, // CONTEXT-SPECIFIC\r\n\t\t\t\t\ttagNumber: 1 // [1]\r\n\t\t\t\t},\r\n\t\t\t\tvalue: Array.from(this.unprotectedAttrs, element => element.toSchema())\r\n\t\t\t}));\r\n\t\t}\r\n\t\t//endregion\r\n\t\t\r\n\t\t//region Construct and return new ASN.1 schema for this object\r\n\t\treturn (new asn1js.Sequence({\r\n\t\t\tvalue: outputArray\r\n\t\t}));\r\n\t\t//endregion\r\n\t}\r\n\t//**********************************************************************************\r\n\t/**\r\n\t * Convertion for the class to JSON object\r\n\t * @returns {Object}\r\n\t */\r\n\ttoJSON()\r\n\t{\r\n\t\tconst _object = {\r\n\t\t\tversion: this.version,\r\n\t\t\tencryptedContentInfo: this.encryptedContentInfo.toJSON()\r\n\t\t};\r\n\t\t\r\n\t\tif(\"unprotectedAttrs\" in this)\r\n\t\t\t_object.unprotectedAttrs = Array.from(this.unprotectedAttrs, element => element.toJSON());\r\n\t\t\r\n\t\treturn _object;\r\n\t}\r\n\t//**********************************************************************************\r\n\t/**\r\n\t * Create a new CMS Encrypted Data content\r\n\t * @param {Object} parameters Parameters neccessary for encryption\r\n\t * @returns {Promise}\r\n\t */\r\n\tencrypt(parameters)\r\n\t{\r\n\t\t//region Check for input parameters\r\n\t\tif((parameters instanceof Object) === false)\r\n\t\t\treturn Promise.reject(\"Parameters must have type \\\"Object\\\"\");\r\n\t\t//endregion\r\n\t\t\r\n\t\t//region Get cryptographic engine\r\n\t\tconst engine = getEngine();\r\n\t\tif(typeof engine === \"undefined\")\r\n\t\t\treturn Promise.reject(\"Unable to initialize cryptographic engine\");\r\n\t\t//endregion\r\n\t\t\r\n\t\t//region Set \"contentType\" parameter\r\n\t\tparameters.contentType = \"1.2.840.113549.1.7.1\"; // \"data\"\r\n\t\t//endregion\r\n\t\t\r\n\t\tif(\"encryptEncryptedContentInfo\" in engine.subtle)\r\n\t\t{\r\n\t\t\treturn engine.subtle.encryptEncryptedContentInfo(parameters).then(result =>\r\n\t\t\t{\r\n\t\t\t\tthis.encryptedContentInfo = result;\r\n\t\t\t});\r\n\t\t}\r\n\t\t\r\n\t\treturn Promise.reject(`No support for \"encryptEncryptedContentInfo\" in current crypto engine ${engine.name}`);\r\n\t}\r\n\t//**********************************************************************************\r\n\t/**\r\n\t * Create a new CMS Encrypted Data content\r\n\t * @param {Object} parameters Parameters neccessary for encryption\r\n\t */\r\n\tdecrypt(parameters)\r\n\t{\r\n\t\t//region Check for input parameters\r\n\t\tif((parameters instanceof Object) === false)\r\n\t\t\treturn Promise.reject(\"Parameters must have type \\\"Object\\\"\");\r\n\t\t//endregion\r\n\t\t\r\n\t\t//region Get cryptographic engine\r\n\t\tconst engine = getEngine();\r\n\t\tif(typeof engine === \"undefined\")\r\n\t\t\treturn Promise.reject(\"Unable to initialize cryptographic engine\");\r\n\t\t//endregion\r\n\t\t\r\n\t\t//region Set \"encryptedContentInfo\" value\r\n\t\tparameters.encryptedContentInfo = this.encryptedContentInfo;\r\n\t\t//endregion\r\n\t\t\r\n\t\tif(\"decryptEncryptedContentInfo\" in engine.subtle)\r\n\t\t\treturn engine.subtle.decryptEncryptedContentInfo(parameters);\r\n\t\t\r\n\t\treturn Promise.reject(`No support for \"decryptEncryptedContentInfo\" in current crypto engine ${engine.name}`);\r\n\t}\r\n\t//**********************************************************************************\r\n}\r\n//**************************************************************************************\r\n"],"file":"EncryptedData.js"}