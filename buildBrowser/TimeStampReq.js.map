{"version":3,"sources":["../src/TimeStampReq.js"],"names":["TimeStampReq","parameters","version","defaultValues","messageImprint","reqPolicy","nonce","certReq","extensions","fromSchema","schema","asn1","asn1js","compareSchema","verified","Error","result","valueBlock","valueDec","MessageImprint","toString","value","Array","from","element","Extension","outputArray","push","Integer","toSchema","ObjectIdentifier","compareWithDefault","Boolean","Constructed","idBlock","tagClass","tagNumber","Sequence","_object","toJSON","memberName","memberValue","hashAlgorithm","hashedMessage","isEqual","length","names","name","blockName","optional","Repeated"],"mappings":"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","sourcesContent":["import * as asn1js from \"asn1js\";\r\nimport { getParametersValue, clearProps } from \"pvutils\";\r\nimport MessageImprint from \"./MessageImprint.js\";\r\nimport Extension from \"./Extension.js\";\r\n//**************************************************************************************\r\n/**\r\n * Class from RFC3161\r\n */\r\nexport default class TimeStampReq\r\n{\r\n\t//**********************************************************************************\r\n\t/**\r\n\t * Constructor for TimeStampReq class\r\n\t * @param {Object} [parameters={}]\r\n\t * @param {Object} [parameters.schema] asn1js parsed value to initialize the class from\r\n\t */\r\n\tconstructor(parameters = {})\r\n\t{\r\n\t\t//region Internal properties of the object\r\n\t\t/**\r\n\t\t * @type {number}\r\n\t\t * @desc version\r\n\t\t */\r\n\t\tthis.version = getParametersValue(parameters, \"version\", TimeStampReq.defaultValues(\"version\"));\r\n\t\t/**\r\n\t\t * @type {MessageImprint}\r\n\t\t * @desc messageImprint\r\n\t\t */\r\n\t\tthis.messageImprint = getParametersValue(parameters, \"messageImprint\", TimeStampReq.defaultValues(\"messageImprint\"));\r\n\r\n\t\tif(\"reqPolicy\" in parameters)\r\n\t\t\t/**\r\n\t\t\t * @type {string}\r\n\t\t\t * @desc reqPolicy\r\n\t\t\t */\r\n\t\t\tthis.reqPolicy = getParametersValue(parameters, \"reqPolicy\", TimeStampReq.defaultValues(\"reqPolicy\"));\r\n\r\n\t\tif(\"nonce\" in parameters)\r\n\t\t\t/**\r\n\t\t\t * @type {Integer}\r\n\t\t\t * @desc nonce\r\n\t\t\t */\r\n\t\t\tthis.nonce = getParametersValue(parameters, \"nonce\", TimeStampReq.defaultValues(\"nonce\"));\r\n\r\n\t\tif(\"certReq\" in parameters)\r\n\t\t\t/**\r\n\t\t\t * @type {boolean}\r\n\t\t\t * @desc certReq\r\n\t\t\t */\r\n\t\t\tthis.certReq = getParametersValue(parameters, \"certReq\", TimeStampReq.defaultValues(\"certReq\"));\r\n\r\n\t\tif(\"extensions\" in parameters)\r\n\t\t\t/**\r\n\t\t\t * @type {Array.<Extension>}\r\n\t\t\t * @desc extensions\r\n\t\t\t */\r\n\t\t\tthis.extensions = getParametersValue(parameters, \"extensions\", TimeStampReq.defaultValues(\"extensions\"));\r\n\t\t//endregion\r\n\r\n\t\t//region If input argument array contains \"schema\" for this object\r\n\t\tif(\"schema\" in parameters)\r\n\t\t\tthis.fromSchema(parameters.schema);\r\n\t\t//endregion\r\n\t}\r\n\t//**********************************************************************************\r\n\t/**\r\n\t * Return default values for all class members\r\n\t * @param {string} memberName String name for a class member\r\n\t */\r\n\tstatic defaultValues(memberName)\r\n\t{\r\n\t\tswitch(memberName)\r\n\t\t{\r\n\t\t\tcase \"version\":\r\n\t\t\t\treturn 0;\r\n\t\t\tcase \"messageImprint\":\r\n\t\t\t\treturn new MessageImprint();\r\n\t\t\tcase \"reqPolicy\":\r\n\t\t\t\treturn \"\";\r\n\t\t\tcase \"nonce\":\r\n\t\t\t\treturn new asn1js.Integer();\r\n\t\t\tcase \"certReq\":\r\n\t\t\t\treturn false;\r\n\t\t\tcase \"extensions\":\r\n\t\t\t\treturn [];\r\n\t\t\tdefault:\r\n\t\t\t\tthrow new Error(`Invalid member name for TimeStampReq class: ${memberName}`);\r\n\t\t}\r\n\t}\r\n\t//**********************************************************************************\r\n\t/**\r\n\t * Compare values with default values for all class members\r\n\t * @param {string} memberName String name for a class member\r\n\t * @param {*} memberValue Value to compare with default value\r\n\t */\r\n\tstatic compareWithDefault(memberName, memberValue)\r\n\t{\r\n\t\tswitch(memberName)\r\n\t\t{\r\n\t\t\tcase \"version\":\r\n\t\t\tcase \"reqPolicy\":\r\n\t\t\tcase \"certReq\":\r\n\t\t\t\treturn (memberValue === TimeStampReq.defaultValues(memberName));\r\n\t\t\tcase \"messageImprint\":\r\n\t\t\t\treturn ((MessageImprint.compareWithDefault(\"hashAlgorithm\", memberValue.hashAlgorithm)) &&\r\n\t\t\t\t\t\t(MessageImprint.compareWithDefault(\"hashedMessage\", memberValue.hashedMessage)));\r\n\t\t\tcase \"nonce\":\r\n\t\t\t\treturn (memberValue.isEqual(TimeStampReq.defaultValues(memberName)));\r\n\t\t\tcase \"extensions\":\r\n\t\t\t\treturn (memberValue.length === 0);\r\n\t\t\tdefault:\r\n\t\t\t\tthrow new Error(`Invalid member name for TimeStampReq class: ${memberName}`);\r\n\t\t}\r\n\t}\r\n\t//**********************************************************************************\r\n\t/**\r\n\t * Return value of pre-defined ASN.1 schema for current class\r\n\t *\r\n\t * ASN.1 schema:\r\n\t * ```asn1\r\n\t * TimeStampReq ::= SEQUENCE  {\r\n\t *    version               INTEGER  { v1(1) },\r\n\t *    messageImprint        MessageImprint,\r\n\t *    reqPolicy             TSAPolicyId              OPTIONAL,\r\n\t *    nonce                 INTEGER                  OPTIONAL,\r\n\t *    certReq               BOOLEAN                  DEFAULT FALSE,\r\n\t *    extensions            [0] IMPLICIT Extensions  OPTIONAL  }\r\n\t *\r\n\t * TSAPolicyId ::= OBJECT IDENTIFIER\r\n\t * ```\r\n\t *\r\n\t * @param {Object} parameters Input parameters for the schema\r\n\t * @returns {Object} asn1js schema object\r\n\t */\r\n\tstatic schema(parameters = {})\r\n\t{\r\n\t\t/**\r\n\t\t * @type {Object}\r\n\t\t * @property {string} [blockName]\r\n\t\t * @property {string} [type]\r\n\t\t * @property {string} [setName]\r\n\t\t * @property {string} [values]\r\n\t\t */\r\n\t\tconst names = getParametersValue(parameters, \"names\", {});\r\n\t\t\r\n\t\treturn (new asn1js.Sequence({\r\n\t\t\tname: (names.blockName || \"TimeStampReq\"),\r\n\t\t\tvalue: [\r\n\t\t\t\tnew asn1js.Integer({ name: (names.version || \"TimeStampReq.version\") }),\r\n\t\t\t\tMessageImprint.schema(names.messageImprint || {\r\n\t\t\t\t\tnames: {\r\n\t\t\t\t\t\tblockName: \"TimeStampReq.messageImprint\"\r\n\t\t\t\t\t}\r\n\t\t\t\t}),\r\n\t\t\t\tnew asn1js.ObjectIdentifier({\r\n\t\t\t\t\tname: (names.reqPolicy || \"TimeStampReq.reqPolicy\"),\r\n\t\t\t\t\toptional: true\r\n\t\t\t\t}),\r\n\t\t\t\tnew asn1js.Integer({\r\n\t\t\t\t\tname: (names.nonce || \"TimeStampReq.nonce\"),\r\n\t\t\t\t\toptional: true\r\n\t\t\t\t}),\r\n\t\t\t\tnew asn1js.Boolean({\r\n\t\t\t\t\tname: (names.certReq || \"TimeStampReq.certReq\"),\r\n\t\t\t\t\toptional: true\r\n\t\t\t\t}),\r\n\t\t\t\tnew asn1js.Constructed({\r\n\t\t\t\t\toptional: true,\r\n\t\t\t\t\tidBlock: {\r\n\t\t\t\t\t\ttagClass: 3, // CONTEXT-SPECIFIC\r\n\t\t\t\t\t\ttagNumber: 0 // [0]\r\n\t\t\t\t\t},\r\n\t\t\t\t\tvalue: [new asn1js.Repeated({\r\n\t\t\t\t\t\tname: (names.extensions || \"TimeStampReq.extensions\"),\r\n\t\t\t\t\t\tvalue: Extension.schema()\r\n\t\t\t\t\t})]\r\n\t\t\t\t}) // IMPLICIT SEQUENCE value\r\n\t\t\t]\r\n\t\t}));\r\n\t}\r\n\t//**********************************************************************************\r\n\t/**\r\n\t * Convert parsed asn1js object into current class\r\n\t * @param {!Object} schema\r\n\t */\r\n\tfromSchema(schema)\r\n\t{\r\n\t\t//region Clear input data first\r\n\t\tclearProps(schema, [\r\n\t\t\t\"TimeStampReq.version\",\r\n\t\t\t\"TimeStampReq.messageImprint\",\r\n\t\t\t\"TimeStampReq.reqPolicy\",\r\n\t\t\t\"TimeStampReq.nonce\",\r\n\t\t\t\"TimeStampReq.certReq\",\r\n\t\t\t\"TimeStampReq.extensions\"\r\n\t\t]);\r\n\t\t//endregion\r\n\t\t\r\n\t\t//region Check the schema is valid\r\n\t\tconst asn1 = asn1js.compareSchema(schema,\r\n\t\t\tschema,\r\n\t\t\tTimeStampReq.schema()\r\n\t\t);\r\n\r\n\t\tif(asn1.verified === false)\r\n\t\t\tthrow new Error(\"Object's schema was not verified against input data for TimeStampReq\");\r\n\t\t//endregion\r\n\r\n\t\t//region Get internal properties from parsed schema\r\n\t\tthis.version = asn1.result[\"TimeStampReq.version\"].valueBlock.valueDec;\r\n\t\tthis.messageImprint = new MessageImprint({ schema: asn1.result[\"TimeStampReq.messageImprint\"] });\r\n\t\tif(\"TimeStampReq.reqPolicy\" in asn1.result)\r\n\t\t\tthis.reqPolicy = asn1.result[\"TimeStampReq.reqPolicy\"].valueBlock.toString();\r\n\t\tif(\"TimeStampReq.nonce\" in asn1.result)\r\n\t\t\tthis.nonce = asn1.result[\"TimeStampReq.nonce\"];\r\n\t\tif(\"TimeStampReq.certReq\" in asn1.result)\r\n\t\t\tthis.certReq = asn1.result[\"TimeStampReq.certReq\"].valueBlock.value;\r\n\t\tif(\"TimeStampReq.extensions\" in asn1.result)\r\n\t\t\tthis.extensions = Array.from(asn1.result[\"TimeStampReq.extensions\"], element => new Extension({ schema: element }));\r\n\t\t//endregion\r\n\t}\r\n\t//**********************************************************************************\r\n\t/**\r\n\t * Convert current object to asn1js object and set correct values\r\n\t * @returns {Object} asn1js object\r\n\t */\r\n\ttoSchema()\r\n\t{\r\n\t\t//region Create array for output sequence\r\n\t\tconst outputArray = [];\r\n\r\n\t\toutputArray.push(new asn1js.Integer({ value: this.version }));\r\n\t\toutputArray.push(this.messageImprint.toSchema());\r\n\t\tif(\"reqPolicy\" in this)\r\n\t\t\toutputArray.push(new asn1js.ObjectIdentifier({ value: this.reqPolicy }));\r\n\t\tif(\"nonce\" in this)\r\n\t\t\toutputArray.push(this.nonce);\r\n\t\tif((\"certReq\" in this) && (TimeStampReq.compareWithDefault(\"certReq\", this.certReq) === false))\r\n\t\t\toutputArray.push(new asn1js.Boolean({ value: this.certReq }));\r\n\r\n\t\t//region Create array of extensions\r\n\t\tif(\"extensions\" in this)\r\n\t\t{\r\n\t\t\toutputArray.push(new asn1js.Constructed({\r\n\t\t\t\tidBlock: {\r\n\t\t\t\t\ttagClass: 3, // CONTEXT-SPECIFIC\r\n\t\t\t\t\ttagNumber: 0 // [0]\r\n\t\t\t\t},\r\n\t\t\t\tvalue: Array.from(this.extensions, element => element.toSchema())\r\n\t\t\t}));\r\n\t\t}\r\n\t\t//endregion\r\n\t\t//endregion\r\n\r\n\t\t//region Construct and return new ASN.1 schema for this object\r\n\t\treturn (new asn1js.Sequence({\r\n\t\t\tvalue: outputArray\r\n\t\t}));\r\n\t\t//endregion\r\n\t}\r\n\t//**********************************************************************************\r\n\t/**\r\n\t * Convertion for the class to JSON object\r\n\t * @returns {Object}\r\n\t */\r\n\ttoJSON()\r\n\t{\r\n\t\tconst _object = {\r\n\t\t\tversion: this.version,\r\n\t\t\tmessageImprint: this.messageImprint.toJSON()\r\n\t\t};\r\n\r\n\t\tif(\"reqPolicy\" in this)\r\n\t\t\t_object.reqPolicy = this.reqPolicy;\r\n\r\n\t\tif(\"nonce\" in this)\r\n\t\t\t_object.nonce = this.nonce.toJSON();\r\n\r\n\t\tif((\"certReq\" in this) && (TimeStampReq.compareWithDefault(\"certReq\", this.certReq) === false))\r\n\t\t\t_object.certReq = this.certReq;\r\n\r\n\t\tif(\"extensions\" in this)\r\n\t\t\t_object.extensions = Array.from(this.extensions, element => element.toJSON());\r\n\r\n\t\treturn _object;\r\n\t}\r\n\t//**********************************************************************************\r\n}\r\n//**************************************************************************************\r\n"],"file":"TimeStampReq.js"}