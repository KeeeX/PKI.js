{"version":3,"sources":["../src/PFX.js"],"names":["PFX","parameters","version","defaultValues","authSafe","macData","parsedValue","fromSchema","schema","asn1","asn1js","compareSchema","names","blockName","verified","Error","result","valueBlock","valueDec","ContentInfo","MacData","outputArray","Integer","value","toSchema","push","Sequence","output","toJSON","Object","Promise","reject","sequence","resolve","crypto","integrityMode","saltBuffer","ArrayBuffer","saltView","Uint8Array","data","authenticatedSafe","toBER","contentType","content","OctetString","valueHex","engine","subtle","name","then","stampDataWithPassword","password","hashAlgorithm","hmacHashAlgorithm","salt","iterationCount","iterations","contentToStamp","mac","DigestInfo","digestAlgorithm","AlgorithmIdentifier","algorithmId","digest","macSalt","error","toBeSigned","cmsSigned","SignedData","encapContentInfo","EncapsulatedContentInfo","eContentType","eContent","certificates","signingCertificate","signedAttr","Attribute","type","values","ObjectIdentifier","UTCTime","valueDate","Date","signerInfos","SignerInfo","sid","IssuerAndSerialNumber","issuer","serialNumber","signedAttrs","SignedAndUnsignedAttributes","attributes","sign","privateKey","checkIntegrity","authSafeContent","isConstructed","contentValue","fromBER","offset","AuthenticatedSafe","verifyDataStampedWithPassword","contentToVerify","signatureToVerify","idBlock","i","length","verify","signer","checkChain","memberName","memberValue","compareWithDefault","keys","optional"],"mappings":"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","sourcesContent":["import * as asn1js from \"asn1js\";\r\nimport { getParametersValue, utilConcatBuf, clearProps } from \"pvutils\";\r\nimport { getCrypto, getEngine, getRandomValues, getOIDByAlgorithm, getAlgorithmByOID } from \"./common.js\";\r\nimport ContentInfo from \"./ContentInfo.js\";\r\nimport MacData from \"./MacData.js\";\r\nimport DigestInfo from \"./DigestInfo.js\";\r\nimport AlgorithmIdentifier from \"./AlgorithmIdentifier.js\";\r\nimport SignedData from \"./SignedData.js\";\r\nimport EncapsulatedContentInfo from \"./EncapsulatedContentInfo.js\";\r\nimport Attribute from \"./Attribute.js\";\r\nimport SignerInfo from \"./SignerInfo.js\";\r\nimport IssuerAndSerialNumber from \"./IssuerAndSerialNumber.js\";\r\nimport SignedAndUnsignedAttributes from \"./SignedAndUnsignedAttributes.js\";\r\nimport AuthenticatedSafe from \"./AuthenticatedSafe.js\";\r\n//**************************************************************************************\r\n/**\r\n * Class from RFC7292\r\n */\r\nexport default class PFX \r\n{\r\n\t//**********************************************************************************\r\n\t/**\r\n\t * Constructor for PFX class\r\n\t * @param {Object} [parameters={}]\r\n\t * @param {Object} [parameters.schema] asn1js parsed value to initialize the class from\r\n\t */\r\n\tconstructor(parameters = {})\r\n\t{\r\n\t\t//region Internal properties of the object\r\n\t\t/**\r\n\t\t * @type {number}\r\n\t\t * @desc version\r\n\t\t */\r\n\t\tthis.version = getParametersValue(parameters, \"version\", PFX.defaultValues(\"version\"));\r\n\t\t/**\r\n\t\t * @type {ContentInfo}\r\n\t\t * @desc authSafe\r\n\t\t */\r\n\t\tthis.authSafe = getParametersValue(parameters, \"authSafe\", PFX.defaultValues(\"authSafe\"));\r\n\t\t\r\n\t\tif(\"macData\" in parameters)\r\n\t\t\t/**\r\n\t\t\t * @type {MacData}\r\n\t\t\t * @desc macData\r\n\t\t\t */\r\n\t\t\tthis.macData = getParametersValue(parameters, \"macData\", PFX.defaultValues(\"macData\"));\r\n\t\t\r\n\t\tif(\"parsedValue\" in parameters)\r\n\t\t\t/**\r\n\t\t\t * @type {*}\r\n\t\t\t * @desc parsedValue\r\n\t\t\t */\r\n\t\t\tthis.parsedValue = getParametersValue(parameters, \"parsedValue\", PFX.defaultValues(\"parsedValue\"));\r\n\t\t//endregion\r\n\t\t\r\n\t\t//region If input argument array contains \"schema\" for this object\r\n\t\tif(\"schema\" in parameters)\r\n\t\t\tthis.fromSchema(parameters.schema);\r\n\t\t//endregion\r\n\t}\r\n\t//**********************************************************************************\r\n\t/**\r\n\t * Return default values for all class members\r\n\t * @param {string} memberName String name for a class member\r\n\t */\r\n\tstatic defaultValues(memberName)\r\n\t{\r\n\t\tswitch(memberName)\r\n\t\t{\r\n\t\t\tcase \"version\":\r\n\t\t\t\treturn 3;\r\n\t\t\tcase \"authSafe\":\r\n\t\t\t\treturn (new ContentInfo());\r\n\t\t\tcase \"macData\":\r\n\t\t\t\treturn (new MacData());\r\n\t\t\tcase \"parsedValue\":\r\n\t\t\t\treturn {};\r\n\t\t\tdefault:\r\n\t\t\t\tthrow new Error(`Invalid member name for PFX class: ${memberName}`);\r\n\t\t}\r\n\t}\r\n\t//**********************************************************************************\r\n\t/**\r\n\t * Compare values with default values for all class members\r\n\t * @param {string} memberName String name for a class member\r\n\t * @param {*} memberValue Value to compare with default value\r\n\t */\r\n\tstatic compareWithDefault(memberName, memberValue)\r\n\t{\r\n\t\tswitch(memberName)\r\n\t\t{\r\n\t\t\tcase \"version\":\r\n\t\t\t\treturn (memberValue === PFX.defaultValues(memberName));\r\n\t\t\tcase \"authSafe\":\r\n\t\t\t\treturn ((ContentInfo.compareWithDefault(\"contentType\", memberValue.contentType)) &&\r\n\t\t\t\t(ContentInfo.compareWithDefault(\"content\", memberValue.content)));\r\n\t\t\tcase \"macData\":\r\n\t\t\t\treturn ((MacData.compareWithDefault(\"mac\", memberValue.mac)) &&\r\n\t\t\t\t(MacData.compareWithDefault(\"macSalt\", memberValue.macSalt)) &&\r\n\t\t\t\t(MacData.compareWithDefault(\"iterations\", memberValue.iterations)));\r\n\t\t\tcase \"parsedValue\":\r\n\t\t\t\treturn ((memberValue instanceof Object) && (Object.keys(memberValue).length === 0));\r\n\t\t\tdefault:\r\n\t\t\t\tthrow new Error(`Invalid member name for PFX class: ${memberName}`);\r\n\t\t}\r\n\t}\r\n\t//**********************************************************************************\r\n\t/**\r\n\t * Return value of pre-defined ASN.1 schema for current class\r\n\t *\r\n\t * ASN.1 schema:\r\n\t * ```asn1\r\n\t * PFX ::= SEQUENCE {\r\n\t *    version\t\tINTEGER {v3(3)}(v3,...),\r\n\t *    authSafe\tContentInfo,\r\n\t *    macData    \tMacData OPTIONAL\r\n\t * }\r\n\t * ```\r\n\t *\r\n\t * @param {Object} parameters Input parameters for the schema\r\n\t * @returns {Object} asn1js schema object\r\n\t */\r\n\tstatic schema(parameters = {})\r\n\t{\r\n\t\t/**\r\n\t\t * @type {Object}\r\n\t\t * @property {string} [blockName]\r\n\t\t * @property {string} [version]\r\n\t\t * @property {string} [authSafe]\r\n\t\t * @property {string} [macData]\r\n\t\t */\r\n\t\tconst names = getParametersValue(parameters, \"names\", {});\r\n\t\t\r\n\t\treturn (new asn1js.Sequence({\r\n\t\t\tname: (names.blockName || \"\"),\r\n\t\t\tvalue: [\r\n\t\t\t\tnew asn1js.Integer({ name: (names.version || \"version\") }),\r\n\t\t\t\tContentInfo.schema(names.authSafe || {\r\n\t\t\t\t\tnames: {\r\n\t\t\t\t\t\tblockName: \"authSafe\"\r\n\t\t\t\t\t}\r\n\t\t\t\t}),\r\n\t\t\t\tMacData.schema(names.macData || {\r\n\t\t\t\t\tnames: {\r\n\t\t\t\t\t\tblockName: \"macData\",\r\n\t\t\t\t\t\toptional: true\r\n\t\t\t\t\t}\r\n\t\t\t\t})\r\n\t\t\t]\r\n\t\t}));\r\n\t}\r\n\t//**********************************************************************************\r\n\t/**\r\n\t * Convert parsed asn1js object into current class\r\n\t * @param {!Object} schema\r\n\t */\r\n\tfromSchema(schema)\r\n\t{\r\n\t\t//region Clear input data first\r\n\t\tclearProps(schema, [\r\n\t\t\t\"version\",\r\n\t\t\t\"authSafe\",\r\n\t\t\t\"macData\"\r\n\t\t]);\r\n\t\t//endregion\r\n\t\t\r\n\t\t//region Check the schema is valid\r\n\t\tconst asn1 = asn1js.compareSchema(schema,\r\n\t\t\tschema,\r\n\t\t\tPFX.schema({\r\n\t\t\t\tnames: {\r\n\t\t\t\t\tversion: \"version\",\r\n\t\t\t\t\tauthSafe: {\r\n\t\t\t\t\t\tnames: {\r\n\t\t\t\t\t\t\tblockName: \"authSafe\"\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t},\r\n\t\t\t\t\tmacData: {\r\n\t\t\t\t\t\tnames: {\r\n\t\t\t\t\t\t\tblockName: \"macData\"\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t})\r\n\t\t);\r\n\t\t\r\n\t\tif(asn1.verified === false)\r\n\t\t\tthrow new Error(\"Object's schema was not verified against input data for PFX\");\r\n\t\t//endregion\r\n\t\t\r\n\t\t//region Get internal properties from parsed schema\r\n\t\tthis.version = asn1.result.version.valueBlock.valueDec;\r\n\t\tthis.authSafe = new ContentInfo({ schema: asn1.result.authSafe });\r\n\t\t\r\n\t\tif(\"macData\" in asn1.result)\r\n\t\t\tthis.macData = new MacData({ schema: asn1.result.macData });\r\n\t\t//endregion\r\n\t}\r\n\t//**********************************************************************************\r\n\t/**\r\n\t * Convert current object to asn1js object and set correct values\r\n\t * @returns {Object} asn1js object\r\n\t */\r\n\ttoSchema()\r\n\t{\r\n\t\t//region Construct and return new ASN.1 schema for this object\r\n\t\tconst outputArray = [\r\n\t\t\tnew asn1js.Integer({ value: this.version }),\r\n\t\t\tthis.authSafe.toSchema()\r\n\t\t];\r\n\t\t\r\n\t\tif(\"macData\" in this)\r\n\t\t\toutputArray.push(this.macData.toSchema());\r\n\t\t\r\n\t\treturn (new asn1js.Sequence({\r\n\t\t\tvalue: outputArray\r\n\t\t}));\r\n\t\t//endregion\r\n\t}\r\n\t//**********************************************************************************\r\n\t/**\r\n\t * Convertion for the class to JSON object\r\n\t * @returns {Object}\r\n\t */\r\n\ttoJSON()\r\n\t{\r\n\t\tconst output = {\r\n\t\t\tversion: this.version,\r\n\t\t\tauthSafe: this.authSafe.toJSON()\r\n\t\t};\r\n\t\t\r\n\t\tif(\"macData\" in this)\r\n\t\t\toutput.macData = this.macData.toJSON();\r\n\t\t\r\n\t\treturn output;\r\n\t}\r\n\t//**********************************************************************************\r\n\t/**\r\n\t * Making ContentInfo from \"parsedValue\" object\r\n\t * @param {Object} parameters Parameters, specific to each \"integrity mode\"\r\n\t */\r\n\tmakeInternalValues(parameters = {})\r\n\t{\r\n\t\t//region Check mandatory parameter\r\n\t\tif((parameters instanceof Object) === false)\r\n\t\t\treturn Promise.reject(\"The \\\"parameters\\\" must has \\\"Object\\\" type\");\r\n\t\t\r\n\t\tif((\"parsedValue\" in this) === false)\r\n\t\t\treturn Promise.reject(\"Please call \\\"parseValues\\\" function first in order to make \\\"parsedValue\\\" data\");\r\n\t\t\r\n\t\tif((\"integrityMode\" in this.parsedValue) === false)\r\n\t\t\treturn Promise.reject(\"Absent mandatory parameter \\\"integrityMode\\\" inside \\\"parsedValue\\\"\");\r\n\t\t//endregion\r\n\t\t\r\n\t\t//region Initial variables\r\n\t\tlet sequence = Promise.resolve();\r\n\t\t//endregion\r\n\t\t\r\n\t\t//region Get a \"crypto\" extension\r\n\t\tconst crypto = getCrypto();\r\n\t\tif(typeof crypto === \"undefined\")\r\n\t\t\treturn Promise.reject(\"Unable to create WebCrypto object\");\r\n\t\t//endregion\r\n\t\t\r\n\t\t//region Makes values for each particular integrity mode\r\n\t\t//region Check that we do have neccessary fields in \"parsedValue\" object\r\n\t\tif((\"authenticatedSafe\" in this.parsedValue) === false)\r\n\t\t\treturn Promise.reject(\"Absent mandatory parameter \\\"authenticatedSafe\\\" in \\\"parsedValue\\\"\");\r\n\t\t//endregion\r\n\t\t\r\n\t\tswitch(this.parsedValue.integrityMode)\r\n\t\t{\r\n\t\t\t//region HMAC-based integrity\r\n\t\t\tcase 0:\r\n\t\t\t\t{\r\n\t\t\t\t\t//region Check additional mandatory parameters\r\n\t\t\t\t\tif((\"iterations\" in parameters) === false)\r\n\t\t\t\t\t\treturn Promise.reject(\"Absent mandatory parameter \\\"iterations\\\"\");\r\n\t\t\t\t\r\n\t\t\t\t\tif((\"pbkdf2HashAlgorithm\" in parameters) === false)\r\n\t\t\t\t\t\treturn Promise.reject(\"Absent mandatory parameter \\\"pbkdf2HashAlgorithm\\\"\");\r\n\t\t\t\t\r\n\t\t\t\t\tif((\"hmacHashAlgorithm\" in parameters) === false)\r\n\t\t\t\t\t\treturn Promise.reject(\"Absent mandatory parameter \\\"hmacHashAlgorithm\\\"\");\r\n\t\t\t\t\r\n\t\t\t\t\tif((\"password\" in parameters) === false)\r\n\t\t\t\t\t\treturn Promise.reject(\"Absent mandatory parameter \\\"password\\\"\");\r\n\t\t\t\t\t//endregion\r\n\t\t\t\t\r\n\t\t\t\t\t//region Initial variables\r\n\t\t\t\t\tconst saltBuffer = new ArrayBuffer(64);\r\n\t\t\t\t\tconst saltView = new Uint8Array(saltBuffer);\r\n\t\t\t\t\r\n\t\t\t\t\tgetRandomValues(saltView);\r\n\t\t\t\t\t\r\n\t\t\t\t\tconst data = this.parsedValue.authenticatedSafe.toSchema().toBER(false);\r\n\r\n\t\t\t\t\tthis.authSafe = new ContentInfo({\r\n\t\t\t\t\t\tcontentType: \"1.2.840.113549.1.7.1\",\r\n\t\t\t\t\t\tcontent: new asn1js.OctetString({ valueHex: data })\r\n\t\t\t\t\t});\r\n\t\t\t\t\t//endregion\r\n\t\t\t\t\t\r\n\t\t\t\t\t//region Call current crypto engine for making HMAC-based data stamp\r\n\t\t\t\t\tconst engine = getEngine();\r\n\t\t\t\t\t\r\n\t\t\t\t\tif((\"stampDataWithPassword\" in engine.subtle) === false)\r\n\t\t\t\t\t\treturn Promise.reject(`No support for \"stampDataWithPassword\" in current engine \"${engine.name}\"`);\r\n\t\t\t\t\t\r\n\t\t\t\t\tsequence = sequence.then(() =>\r\n\t\t\t\t\t\tengine.subtle.stampDataWithPassword({\r\n\t\t\t\t\t\t\tpassword: parameters.password,\r\n\t\t\t\t\t\t\thashAlgorithm: parameters.hmacHashAlgorithm,\r\n\t\t\t\t\t\t\tsalt: saltBuffer,\r\n\t\t\t\t\t\t\titerationCount: parameters.iterations,\r\n\t\t\t\t\t\t\tcontentToStamp: data\r\n\t\t\t\t\t\t})\r\n\t\t\t\t\t);\r\n\t\t\t\t\t//endregion\r\n\t\t\t\t\t\r\n\t\t\t\t\t//region Make \"MacData\" values\r\n\t\t\t\t\tsequence = sequence.then(\r\n\t\t\t\t\t\tresult =>\r\n\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\tthis.macData = new MacData({\r\n\t\t\t\t\t\t\t\tmac: new DigestInfo({\r\n\t\t\t\t\t\t\t\t\tdigestAlgorithm: new AlgorithmIdentifier({\r\n\t\t\t\t\t\t\t\t\t\talgorithmId: getOIDByAlgorithm({ name: parameters.hmacHashAlgorithm })\r\n\t\t\t\t\t\t\t\t\t}),\r\n\t\t\t\t\t\t\t\t\tdigest: new asn1js.OctetString({ valueHex: result })\r\n\t\t\t\t\t\t\t\t}),\r\n\t\t\t\t\t\t\t\tmacSalt: new asn1js.OctetString({ valueHex: saltBuffer }),\r\n\t\t\t\t\t\t\t\titerations: parameters.iterations\r\n\t\t\t\t\t\t\t});\r\n\t\t\t\t\t\t},\r\n\t\t\t\t\t\terror => Promise.reject(error)\r\n\t\t\t\t\t);\r\n\t\t\t\t\t//endregion\r\n\t\t\t\t\t//endregion\r\n\t\t\t\t}\r\n\t\t\t\tbreak;\r\n\t\t\t//endregion\r\n\t\t\t//region publicKey-based integrity\r\n\t\t\tcase 1:\r\n\t\t\t\t{\r\n\t\t\t\t\t//region Check additional mandatory parameters\r\n\t\t\t\t\tif((\"signingCertificate\" in parameters) === false)\r\n\t\t\t\t\t\treturn Promise.reject(\"Absent mandatory parameter \\\"signingCertificate\\\"\");\r\n\t\t\t\t\r\n\t\t\t\t\tif((\"privateKey\" in parameters) === false)\r\n\t\t\t\t\t\treturn Promise.reject(\"Absent mandatory parameter \\\"privateKey\\\"\");\r\n\t\t\t\t\r\n\t\t\t\t\tif((\"hashAlgorithm\" in parameters) === false)\r\n\t\t\t\t\t\treturn Promise.reject(\"Absent mandatory parameter \\\"hashAlgorithm\\\"\");\r\n\t\t\t\t\t//endregion\r\n\t\t\t\t\r\n\t\t\t\t\t//region Making data to be signed\r\n\t\t\t\t\t// NOTE: all internal data for \"authenticatedSafe\" must be already prepared.\r\n\t\t\t\t\t// Thus user must call \"makeValues\" for all internal \"SafeContent\" value with appropriate parameters.\r\n\t\t\t\t\t// Or user can choose to use values from initial parsing of existing PKCS#12 data.\r\n\t\t\t\t\r\n\t\t\t\t\tconst toBeSigned = this.parsedValue.authenticatedSafe.toSchema().toBER(false);\r\n\t\t\t\t\t//endregion\r\n\t\t\t\t\t\r\n\t\t\t\t\t//region Initial variables\r\n\t\t\t\t\tconst cmsSigned = new SignedData({\r\n\t\t\t\t\t\tversion: 1,\r\n\t\t\t\t\t\tencapContentInfo: new EncapsulatedContentInfo({\r\n\t\t\t\t\t\t\teContentType: \"1.2.840.113549.1.7.1\", // \"data\" content type\r\n\t\t\t\t\t\t\teContent: new asn1js.OctetString({ valueHex: toBeSigned })\r\n\t\t\t\t\t\t}),\r\n\t\t\t\t\t\tcertificates: [parameters.signingCertificate]\r\n\t\t\t\t\t});\r\n\t\t\t\t\t//endregion\r\n\t\t\t\t\t\r\n\t\t\t\t\t//region Making additional attributes for CMS Signed Data\r\n\t\t\t\t\t//region Create a message digest\r\n\t\t\t\t\tsequence = sequence.then(\r\n\t\t\t\t\t\t() => crypto.digest({ name: parameters.hashAlgorithm }, new Uint8Array(toBeSigned))\r\n\t\t\t\t\t);\r\n\t\t\t\t\t//endregion\r\n\t\t\t\t\r\n\t\t\t\t\t//region Combine all signed extensions\r\n\t\t\t\t\tsequence = sequence.then(\r\n\t\t\t\t\t\tresult =>\r\n\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\t//region Initial variables\r\n\t\t\t\t\t\t\tconst signedAttr = [];\r\n\t\t\t\t\t\t\t//endregion\r\n\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\t//region contentType\r\n\t\t\t\t\t\t\tsignedAttr.push(new Attribute({\r\n\t\t\t\t\t\t\t\ttype: \"1.2.840.113549.1.9.3\",\r\n\t\t\t\t\t\t\t\tvalues: [\r\n\t\t\t\t\t\t\t\t\tnew asn1js.ObjectIdentifier({ value: \"1.2.840.113549.1.7.1\" })\r\n\t\t\t\t\t\t\t\t]\r\n\t\t\t\t\t\t\t}));\r\n\t\t\t\t\t\t\t//endregion\r\n\t\t\t\t\t\t\t//region signingTime\r\n\t\t\t\t\t\t\tsignedAttr.push(new Attribute({\r\n\t\t\t\t\t\t\t\ttype: \"1.2.840.113549.1.9.5\",\r\n\t\t\t\t\t\t\t\tvalues: [\r\n\t\t\t\t\t\t\t\t\tnew asn1js.UTCTime({ valueDate: new Date() })\r\n\t\t\t\t\t\t\t\t]\r\n\t\t\t\t\t\t\t}));\r\n\t\t\t\t\t\t\t//endregion\r\n\t\t\t\t\t\t\t//region messageDigest\r\n\t\t\t\t\t\t\tsignedAttr.push(new Attribute({\r\n\t\t\t\t\t\t\t\ttype: \"1.2.840.113549.1.9.4\",\r\n\t\t\t\t\t\t\t\tvalues: [\r\n\t\t\t\t\t\t\t\t\tnew asn1js.OctetString({ valueHex: result })\r\n\t\t\t\t\t\t\t\t]\r\n\t\t\t\t\t\t\t}));\r\n\t\t\t\t\t\t\t//endregion\r\n\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\t//region Making final value for \"SignerInfo\" type\r\n\t\t\t\t\t\t\tcmsSigned.signerInfos.push(new SignerInfo({\r\n\t\t\t\t\t\t\t\tversion: 1,\r\n\t\t\t\t\t\t\t\tsid: new IssuerAndSerialNumber({\r\n\t\t\t\t\t\t\t\t\tissuer: parameters.signingCertificate.issuer,\r\n\t\t\t\t\t\t\t\t\tserialNumber: parameters.signingCertificate.serialNumber\r\n\t\t\t\t\t\t\t\t}),\r\n\t\t\t\t\t\t\t\tsignedAttrs: new SignedAndUnsignedAttributes({\r\n\t\t\t\t\t\t\t\t\ttype: 0,\r\n\t\t\t\t\t\t\t\t\tattributes: signedAttr\r\n\t\t\t\t\t\t\t\t})\r\n\t\t\t\t\t\t\t}));\r\n\t\t\t\t\t\t\t//endregion\r\n\t\t\t\t\t\t},\r\n\t\t\t\t\t\terror => Promise.reject(`Error during making digest for message: ${error}`)\r\n\t\t\t\t\t);\r\n\t\t\t\t\t//endregion\r\n\t\t\t\t\t//endregion\r\n\t\t\t\t\r\n\t\t\t\t\t//region Signing CMS Signed Data\r\n\t\t\t\t\tsequence = sequence.then(\r\n\t\t\t\t\t\t() => cmsSigned.sign(parameters.privateKey, 0, parameters.hashAlgorithm)\r\n\t\t\t\t\t);\r\n\t\t\t\t\t//endregion\r\n\t\t\t\t\r\n\t\t\t\t\t//region Making final CMS_CONTENT_INFO type\r\n\t\t\t\t\tsequence = sequence.then(\r\n\t\t\t\t\t\t() =>\r\n\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\tthis.authSafe = new ContentInfo({\r\n\t\t\t\t\t\t\t\tcontentType: \"1.2.840.113549.1.7.2\",\r\n\t\t\t\t\t\t\t\tcontent: cmsSigned.toSchema(true)\r\n\t\t\t\t\t\t\t});\r\n\t\t\t\t\t\t},\r\n\t\t\t\t\t\terror => Promise.reject(`Error during making signature: ${error}`)\r\n\t\t\t\t\t);\r\n\t\t\t\t\t//endregion\r\n\t\t\t\t}\r\n\t\t\t\tbreak;\r\n\t\t\t//endregion\r\n\t\t\t//region default\r\n\t\t\tdefault:\r\n\t\t\t\treturn Promise.reject(`Parameter \"integrityMode\" has unknown value: ${parameters.integrityMode}`);\r\n\t\t\t//endregion\r\n\t\t}\r\n\t\t//endregion\r\n\t\t\r\n\t\treturn sequence;\r\n\t}\r\n\t//**********************************************************************************\r\n\tparseInternalValues(parameters)\r\n\t{\r\n\t\t//region Check input data from \"parameters\" \r\n\t\tif((parameters instanceof Object) === false)\r\n\t\t\treturn Promise.reject(\"The \\\"parameters\\\" must has \\\"Object\\\" type\");\r\n\t\t\r\n\t\tif((\"checkIntegrity\" in parameters) === false)\r\n\t\t\tparameters.checkIntegrity = true;\r\n\t\t//endregion \r\n\t\t\r\n\t\t//region Initial variables \r\n\t\tlet sequence = Promise.resolve();\r\n\t\t//endregion \r\n\t\t\r\n\t\t//region Get a \"crypto\" extension \r\n\t\tconst crypto = getCrypto();\r\n\t\tif(typeof crypto === \"undefined\")\r\n\t\t\treturn Promise.reject(\"Unable to create WebCrypto object\");\r\n\t\t//endregion \r\n\t\t\r\n\t\t//region Create value for \"this.parsedValue.authenticatedSafe\" and check integrity \r\n\t\tthis.parsedValue = {};\r\n\t\t\r\n\t\tswitch(this.authSafe.contentType)\r\n\t\t{\r\n\t\t\t//region data \r\n\t\t\tcase \"1.2.840.113549.1.7.1\":\r\n\t\t\t\t{\r\n\t\t\t\t\t//region Check additional mandatory parameters\r\n\t\t\t\t\tif((\"password\" in parameters) === false)\r\n\t\t\t\t\t\treturn Promise.reject(\"Absent mandatory parameter \\\"password\\\"\");\r\n\t\t\t\t\t//endregion\r\n\t\t\t\t\r\n\t\t\t\t\t//region Integrity based on HMAC\r\n\t\t\t\t\tthis.parsedValue.integrityMode = 0;\r\n\t\t\t\t\t//endregion\r\n\t\t\t\t\r\n\t\t\t\t\t//region Check that we do have OCTETSTRING as \"content\"\r\n\t\t\t\t\tif((this.authSafe.content instanceof asn1js.OctetString) === false)\r\n\t\t\t\t\t\treturn Promise.reject(\"Wrong type of \\\"this.authSafe.content\\\"\");\r\n\t\t\t\t\t//endregion\r\n\t\t\t\t\t\r\n\t\t\t\t\t//region Check we have \"constructive encoding\" for AuthSafe content\r\n\t\t\t\t\tlet authSafeContent = new ArrayBuffer(0);\r\n\t\t\t\t\t\r\n\t\t\t\t\tif(this.authSafe.content.valueBlock.isConstructed)\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\tfor(const contentValue of this.authSafe.content.valueBlock.value)\r\n\t\t\t\t\t\t\tauthSafeContent = utilConcatBuf(authSafeContent, contentValue.valueBlock.valueHex);\r\n\t\t\t\t\t}\r\n\t\t\t\t\telse\r\n\t\t\t\t\t\tauthSafeContent = this.authSafe.content.valueBlock.valueHex;\r\n\t\t\t\t\t//endregion\r\n\t\t\t\t\t\r\n\t\t\t\t\t//region Parse internal ASN.1 data\r\n\t\t\t\t\tconst asn1 = asn1js.fromBER(authSafeContent);\r\n\t\t\t\t\tif(asn1.offset === (-1))\r\n\t\t\t\t\t\treturn Promise.reject(\"Error during parsing of ASN.1 data inside \\\"this.authSafe.content\\\"\");\r\n\t\t\t\t\t//endregion\r\n\t\t\t\t\r\n\t\t\t\t\t//region Set \"authenticatedSafe\" value\r\n\t\t\t\t\tthis.parsedValue.authenticatedSafe = new AuthenticatedSafe({ schema: asn1.result });\r\n\t\t\t\t\t//endregion\r\n\t\t\t\t\r\n\t\t\t\t\t//region Check integrity\r\n\t\t\t\t\tif(parameters.checkIntegrity)\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\t//region Check that \"MacData\" exists\r\n\t\t\t\t\t\tif((\"macData\" in this) === false)\r\n\t\t\t\t\t\t\treturn Promise.reject(\"Absent \\\"macData\\\" value, can not check PKCS#12 data integrity\");\r\n\t\t\t\t\t\t//endregion\r\n\t\t\t\t\t\t\r\n\t\t\t\t\t\t//region Initial variables\r\n\t\t\t\t\t\tconst hashAlgorithm = getAlgorithmByOID(this.macData.mac.digestAlgorithm.algorithmId);\r\n\t\t\t\t\t\tif((\"name\" in hashAlgorithm) === false)\r\n\t\t\t\t\t\t\treturn Promise.reject(`Unsupported digest algorithm: ${this.macData.mac.digestAlgorithm.algorithmId}`);\r\n\t\t\t\t\t\t//endregion\r\n\t\t\t\t\t\t\r\n\t\t\t\t\t\t//region Call current crypto engine for verifying HMAC-based data stamp\r\n\t\t\t\t\t\tconst engine = getEngine();\r\n\t\t\t\t\t\t\r\n\t\t\t\t\t\tsequence = sequence.then(() =>\r\n\t\t\t\t\t\t\tengine.subtle.verifyDataStampedWithPassword({\r\n\t\t\t\t\t\t\t\tpassword: parameters.password,\r\n\t\t\t\t\t\t\t\thashAlgorithm: hashAlgorithm.name,\r\n\t\t\t\t\t\t\t\tsalt: this.macData.macSalt.valueBlock.valueHex,\r\n\t\t\t\t\t\t\t\titerationCount: this.macData.iterations,\r\n\t\t\t\t\t\t\t\tcontentToVerify: authSafeContent,\r\n\t\t\t\t\t\t\t\tsignatureToVerify: this.macData.mac.digest.valueBlock.valueHex\r\n\t\t\t\t\t\t\t})\r\n\t\t\t\t\t\t);\r\n\t\t\t\t\t\t//endregion\r\n\r\n\t\t\t\t\t\t//region Verify HMAC signature\r\n\t\t\t\t\t\tsequence = sequence.then(\r\n\t\t\t\t\t\t\tresult =>\r\n\t\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\t\tif(result === false)\r\n\t\t\t\t\t\t\t\t\treturn Promise.reject(\"Integrity for the PKCS#12 data is broken!\");\r\n\t\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\t\treturn Promise.resolve();\r\n\t\t\t\t\t\t\t},\r\n\t\t\t\t\t\t\terror => Promise.reject(error)\r\n\t\t\t\t\t\t);\r\n\t\t\t\t\t\t//endregion\r\n\t\t\t\t\t}\r\n\t\t\t\t\t//endregion\r\n\t\t\t\t}\r\n\t\t\t\tbreak;\r\n\t\t\t//endregion \r\n\t\t\t//region signedData \r\n\t\t\tcase \"1.2.840.113549.1.7.2\":\r\n\t\t\t\t{\r\n\t\t\t\t\t//region Integrity based on signature using public key\r\n\t\t\t\t\tthis.parsedValue.integrityMode = 1;\r\n\t\t\t\t\t//endregion\r\n\t\t\t\t\r\n\t\t\t\t\t//region Parse CMS Signed Data\r\n\t\t\t\t\tconst cmsSigned = new SignedData({ schema: this.authSafe.content });\r\n\t\t\t\t\t//endregion\r\n\t\t\t\t\r\n\t\t\t\t\t//region Check that we do have OCTETSTRING as \"content\"\r\n\t\t\t\t\tif((\"eContent\" in cmsSigned.encapContentInfo) === false)\r\n\t\t\t\t\t\treturn Promise.reject(\"Absent of attached data in \\\"cmsSigned.encapContentInfo\\\"\");\r\n\t\t\t\t\r\n\t\t\t\t\tif((cmsSigned.encapContentInfo.eContent instanceof asn1js.OctetString) === false)\r\n\t\t\t\t\t\treturn Promise.reject(\"Wrong type of \\\"cmsSigned.encapContentInfo.eContent\\\"\");\r\n\t\t\t\t\t//endregion\r\n\t\t\t\t\r\n\t\t\t\t\t//region Create correct data block for verification\r\n\t\t\t\t\tlet data = new ArrayBuffer(0);\r\n\t\t\t\t\r\n\t\t\t\t\tif(cmsSigned.encapContentInfo.eContent.idBlock.isConstructed === false)\r\n\t\t\t\t\t\tdata = cmsSigned.encapContentInfo.eContent.valueBlock.valueHex;\r\n\t\t\t\t\telse\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\tfor(let i = 0; i < cmsSigned.encapContentInfo.eContent.valueBlock.value.length; i++)\r\n\t\t\t\t\t\t\tdata = utilConcatBuf(data, cmsSigned.encapContentInfo.eContent.valueBlock.value[i].valueBlock.valueHex);\r\n\t\t\t\t\t}\r\n\t\t\t\t\t//endregion\r\n\t\t\t\t\r\n\t\t\t\t\t//region Parse internal ASN.1 data\r\n\t\t\t\t\tconst asn1 = asn1js.fromBER(data);\r\n\t\t\t\t\tif(asn1.offset === (-1))\r\n\t\t\t\t\t\treturn Promise.reject(\"Error during parsing of ASN.1 data inside \\\"this.authSafe.content\\\"\");\r\n\t\t\t\t\t//endregion\r\n\t\t\t\t\r\n\t\t\t\t\t//region Set \"authenticatedSafe\" value\r\n\t\t\t\t\tthis.parsedValue.authenticatedSafe = new AuthenticatedSafe({ schema: asn1.result });\r\n\t\t\t\t\t//endregion\r\n\t\t\t\t\r\n\t\t\t\t\t//region Check integrity\r\n\t\t\t\t\tsequence = sequence.then(\r\n\t\t\t\t\t\t() => cmsSigned.verify({ signer: 0, checkChain: false })\r\n\t\t\t\t\t).then(\r\n\t\t\t\t\t\tresult =>\r\n\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\tif(result === false)\r\n\t\t\t\t\t\t\t\treturn Promise.reject(\"Integrity for the PKCS#12 data is broken!\");\r\n\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\treturn Promise.resolve();\r\n\t\t\t\t\t\t},\r\n\t\t\t\t\t\terror => Promise.reject(`Error during integrity verification: ${error}`)\r\n\t\t\t\t\t);\r\n\t\t\t\t\t//endregion\r\n\t\t\t\t}\r\n\t\t\t\tbreak;\r\n\t\t\t//endregion   \r\n\t\t\t//region default \r\n\t\t\tdefault:\r\n\t\t\t\treturn Promise.reject(`Incorrect value for \"this.authSafe.contentType\": ${this.authSafe.contentType}`);\r\n\t\t\t//endregion \r\n\t\t}\r\n\t\t//endregion \r\n\t\t\r\n\t\t//region Return result of the function \r\n\t\treturn sequence.then(\r\n\t\t\t() => this,\r\n\t\t\terror => Promise.reject(`Error during parsing: ${error}`)\r\n\t\t);\r\n\t\t//endregion   \r\n\t}\r\n\t//**********************************************************************************\r\n}\r\n//**************************************************************************************\r\n"],"file":"PFX.js"}