{"version":3,"sources":["../src/OtherRecipientInfo.js"],"names":["OtherRecipientInfo","parameters","oriType","defaultValues","oriValue","fromSchema","schema","asn1","asn1js","compareSchema","names","verified","Error","result","valueBlock","toString","Sequence","value","ObjectIdentifier","_object","compareWithDefault","toJSON","memberName","memberValue","Object","keys","length","name","blockName","Any"],"mappings":"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","sourcesContent":["import * as asn1js from \"asn1js\";\r\nimport { getParametersValue, clearProps } from \"pvutils\";\r\n//**************************************************************************************\r\n/**\r\n * Class from RFC5652\r\n */\r\nexport default class OtherRecipientInfo\r\n{\r\n\t//**********************************************************************************\r\n\t/**\r\n\t * Constructor for OtherRecipientInfo class\r\n\t * @param {Object} [parameters={}]\r\n\t * @param {Object} [parameters.schema] asn1js parsed value to initialize the class from\r\n\t */\r\n\tconstructor(parameters = {})\r\n\t{\r\n\t\t//region Internal properties of the object\r\n\t\t/**\r\n\t\t * @type {string}\r\n\t\t * @desc oriType\r\n\t\t */\r\n\t\tthis.oriType = getParametersValue(parameters, \"oriType\", OtherRecipientInfo.defaultValues(\"oriType\"));\r\n\t\t/**\r\n\t\t * @type {*}\r\n\t\t * @desc oriValue\r\n\t\t */\r\n\t\tthis.oriValue = getParametersValue(parameters, \"oriValue\", OtherRecipientInfo.defaultValues(\"oriValue\"));\r\n\t\t//endregion\r\n\r\n\t\t//region If input argument array contains \"schema\" for this object\r\n\t\tif(\"schema\" in parameters)\r\n\t\t\tthis.fromSchema(parameters.schema);\r\n\t\t//endregion\r\n\t}\r\n\t//**********************************************************************************\r\n\t/**\r\n\t * Return default values for all class members\r\n\t * @param {string} memberName String name for a class member\r\n\t */\r\n\tstatic defaultValues(memberName)\r\n\t{\r\n\t\tswitch(memberName)\r\n\t\t{\r\n\t\t\tcase \"oriType\":\r\n\t\t\t\treturn \"\";\r\n\t\t\tcase \"oriValue\":\r\n\t\t\t\treturn {};\r\n\t\t\tdefault:\r\n\t\t\t\tthrow new Error(`Invalid member name for OtherRecipientInfo class: ${memberName}`);\r\n\t\t}\r\n\t}\r\n\t//**********************************************************************************\r\n\t/**\r\n\t * Compare values with default values for all class members\r\n\t * @param {string} memberName String name for a class member\r\n\t * @param {*} memberValue Value to compare with default value\r\n\t */\r\n\tstatic compareWithDefault(memberName, memberValue)\r\n\t{\r\n\t\tswitch(memberName)\r\n\t\t{\r\n\t\t\tcase \"oriType\":\r\n\t\t\t\treturn (memberValue === \"\");\r\n\t\t\tcase \"oriValue\":\r\n\t\t\t\treturn (Object.keys(memberValue).length === 0);\r\n\t\t\tdefault:\r\n\t\t\t\tthrow new Error(`Invalid member name for OtherRecipientInfo class: ${memberName}`);\r\n\t\t}\r\n\t}\r\n\t//**********************************************************************************\r\n\t/**\r\n\t * Return value of pre-defined ASN.1 schema for current class\r\n\t *\r\n\t * ASN.1 schema:\r\n\t * ```asn1\r\n\t * OtherRecipientInfo ::= SEQUENCE {\r\n\t *    oriType OBJECT IDENTIFIER,\r\n\t *    oriValue ANY DEFINED BY oriType }\r\n\t * ```\r\n\t *\r\n\t * @param {Object} parameters Input parameters for the schema\r\n\t * @returns {Object} asn1js schema object\r\n\t */\r\n\tstatic schema(parameters = {})\r\n\t{\r\n\t\t/**\r\n\t\t * @type {Object}\r\n\t\t * @property {string} [blockName]\r\n\t\t * @property {string} [oriType]\r\n\t\t * @property {string} [oriValue]\r\n\t\t */\r\n\t\tconst names = getParametersValue(parameters, \"names\", {});\r\n\r\n\t\treturn (new asn1js.Sequence({\r\n\t\t\tname: (names.blockName || \"\"),\r\n\t\t\tvalue: [\r\n\t\t\t\tnew asn1js.ObjectIdentifier({ name: (names.oriType || \"\") }),\r\n\t\t\t\tnew asn1js.Any({ name: (names.oriValue || \"\") })\r\n\t\t\t]\r\n\t\t}));\r\n\t}\r\n\t//**********************************************************************************\r\n\t/**\r\n\t * Convert parsed asn1js object into current class\r\n\t * @param {!Object} schema\r\n\t */\r\n\tfromSchema(schema)\r\n\t{\r\n\t\t//region Clear input data first\r\n\t\tclearProps(schema, [\r\n\t\t\t\"oriType\",\r\n\t\t\t\"oriValue\"\r\n\t\t]);\r\n\t\t//endregion\r\n\t\t\r\n\t\t//region Check the schema is valid\r\n\t\tconst asn1 = asn1js.compareSchema(schema,\r\n\t\t\tschema,\r\n\t\t\tOtherRecipientInfo.schema({\r\n\t\t\t\tnames: {\r\n\t\t\t\t\toriType: \"oriType\",\r\n\t\t\t\t\toriValue: \"oriValue\"\r\n\t\t\t\t}\r\n\t\t\t})\r\n\t\t);\r\n\r\n\t\tif(asn1.verified === false)\r\n\t\t\tthrow new Error(\"Object's schema was not verified against input data for OtherRecipientInfo\");\r\n\t\t//endregion\r\n\r\n\t\t//region Get internal properties from parsed schema\r\n\t\tthis.oriType = asn1.result.oriType.valueBlock.toString();\r\n\t\tthis.oriValue = asn1.result.oriValue;\r\n\t\t//endregion\r\n\t}\r\n\t//**********************************************************************************\r\n\t/**\r\n\t * Convert current object to asn1js object and set correct values\r\n\t * @returns {Object} asn1js object\r\n\t */\r\n\ttoSchema()\r\n\t{\r\n\t\t//region Construct and return new ASN.1 schema for this object\r\n\t\treturn (new asn1js.Sequence({\r\n\t\t\tvalue: [\r\n\t\t\t\tnew asn1js.ObjectIdentifier({ value: this.oriType }),\r\n\t\t\t\tthis.oriValue\r\n\t\t\t]\r\n\t\t}));\r\n\t\t//endregion\r\n\t}\r\n\t//**********************************************************************************\r\n\t/**\r\n\t * Convertion for the class to JSON object\r\n\t * @returns {Object}\r\n\t */\r\n\ttoJSON()\r\n\t{\r\n\t\tconst _object = {\r\n\t\t\toriType: this.oriType\r\n\t\t};\r\n\r\n\t\tif(OtherRecipientInfo.compareWithDefault(\"oriValue\", this.oriValue) === false)\r\n\t\t\t_object.oriValue = this.oriValue.toJSON();\r\n\r\n\t\treturn _object;\r\n\t}\r\n\t//**********************************************************************************\r\n}\r\n//**************************************************************************************\r\n"],"file":"OtherRecipientInfo.js"}