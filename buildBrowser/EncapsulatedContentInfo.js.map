{"version":3,"sources":["../src/EncapsulatedContentInfo.js"],"names":["EncapsulatedContentInfo","parameters","eContentType","defaultValues","eContent","idBlock","tagClass","tagNumber","isConstructed","constrString","asn1js","OctetString","offset","length","valueBlock","valueHex","byteLength","pieceView","Uint8Array","_array","ArrayBuffer","_view","i","value","push","fromSchema","schema","asn1","compareSchema","names","verified","Error","result","toString","outputArray","ObjectIdentifier","compareWithDefault","Constructed","optional","Sequence","_object","toJSON","memberName","memberValue","isEqual","name","blockName","Any"],"mappings":"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","sourcesContent":["import * as asn1js from \"asn1js\";\r\nimport { getParametersValue, clearProps } from \"pvutils\";\r\n//**************************************************************************************\r\n/**\r\n * Class from RFC5652\r\n */\r\nexport default class EncapsulatedContentInfo\r\n{\r\n\t//**********************************************************************************\r\n\t/**\r\n\t * Constructor for EncapsulatedContentInfo class\r\n\t * @param {Object} [parameters={}]\r\n\t * @param {Object} [parameters.schema] asn1js parsed value to initialize the class from\r\n\t */\r\n\tconstructor(parameters = {})\r\n\t{\r\n\t\t//region Internal properties of the object\r\n\t\t/**\r\n\t\t * @type {string}\r\n\t\t * @desc eContentType\r\n\t\t */\r\n\t\tthis.eContentType = getParametersValue(parameters, \"eContentType\", EncapsulatedContentInfo.defaultValues(\"eContentType\"));\r\n\r\n\t\tif(\"eContent\" in parameters)\r\n\t\t{\r\n\t\t\t/**\r\n\t\t\t * @type {OctetString}\r\n\t\t\t * @desc eContent\r\n\t\t\t */\r\n\t\t\tthis.eContent = getParametersValue(parameters, \"eContent\", EncapsulatedContentInfo.defaultValues(\"eContent\"));\r\n\t\t\tif((this.eContent.idBlock.tagClass === 1) &&\r\n\t\t\t\t(this.eContent.idBlock.tagNumber === 4))\r\n\t\t\t{\r\n\t\t\t\t//region Divide OCTETSTRING value down to small pieces\r\n\t\t\t\tif(this.eContent.idBlock.isConstructed === false)\r\n\t\t\t\t{\r\n\t\t\t\t\tconst constrString = new asn1js.OctetString({\r\n\t\t\t\t\t\tidBlock: { isConstructed: true },\r\n\t\t\t\t\t\tisConstructed: true\r\n\t\t\t\t\t});\r\n\t\t\t\t\t\r\n\t\t\t\t\tlet offset = 0;\r\n\t\t\t\t\tlet length = this.eContent.valueBlock.valueHex.byteLength;\r\n\t\t\t\t\t\r\n\t\t\t\t\twhile(length > 0)\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\tconst pieceView = new Uint8Array(this.eContent.valueBlock.valueHex, offset, ((offset + 65536) > this.eContent.valueBlock.valueHex.byteLength) ? (this.eContent.valueBlock.valueHex.byteLength - offset) : 65536);\r\n\t\t\t\t\t\tconst _array = new ArrayBuffer(pieceView.length);\r\n\t\t\t\t\t\tconst _view = new Uint8Array(_array);\r\n\t\t\t\t\t\t\r\n\t\t\t\t\t\tfor(let i = 0; i < _view.length; i++)\r\n\t\t\t\t\t\t\t_view[i] = pieceView[i];\r\n\t\t\t\t\t\t\r\n\t\t\t\t\t\tconstrString.valueBlock.value.push(new asn1js.OctetString({ valueHex: _array }));\r\n\t\t\t\t\t\t\r\n\t\t\t\t\t\tlength -= pieceView.length;\r\n\t\t\t\t\t\toffset += pieceView.length;\r\n\t\t\t\t\t}\r\n\t\t\t\t\t\r\n\t\t\t\t\tthis.eContent = constrString;\r\n\t\t\t\t}\r\n\t\t\t\t//endregion\r\n\t\t\t}\r\n\t\t}\r\n\t\t//endregion\r\n\r\n\t\t//region If input argument array contains \"schema\" for this object\r\n\t\tif(\"schema\" in parameters)\r\n\t\t\tthis.fromSchema(parameters.schema);\r\n\t\t//endregion\r\n\t}\r\n\t//**********************************************************************************\r\n\t/**\r\n\t * Return default values for all class members\r\n\t * @param {string} memberName String name for a class member\r\n\t */\r\n\tstatic defaultValues(memberName)\r\n\t{\r\n\t\tswitch(memberName)\r\n\t\t{\r\n\t\t\tcase \"eContentType\":\r\n\t\t\t\treturn \"\";\r\n\t\t\tcase \"eContent\":\r\n\t\t\t\treturn new asn1js.OctetString();\r\n\t\t\tdefault:\r\n\t\t\t\tthrow new Error(`Invalid member name for EncapsulatedContentInfo class: ${memberName}`);\r\n\t\t}\r\n\t}\r\n\t//**********************************************************************************\r\n\t/**\r\n\t * Compare values with default values for all class members\r\n\t * @param {string} memberName String name for a class member\r\n\t * @param {*} memberValue Value to compare with default value\r\n\t */\r\n\tstatic compareWithDefault(memberName, memberValue)\r\n\t{\r\n\t\tswitch(memberName)\r\n\t\t{\r\n\t\t\tcase \"eContentType\":\r\n\t\t\t\treturn (memberValue === \"\");\r\n\t\t\tcase \"eContent\":\r\n\t\t\t\t{\r\n\t\t\t\t\tif((memberValue.idBlock.tagClass === 1) && (memberValue.idBlock.tagNumber === 4))\r\n\t\t\t\t\t\treturn (memberValue.isEqual(EncapsulatedContentInfo.defaultValues(\"eContent\")));\r\n\t\t\t\t\t\r\n\t\t\t\t\treturn false;\r\n\t\t\t\t}\r\n\t\t\tdefault:\r\n\t\t\t\tthrow new Error(`Invalid member name for EncapsulatedContentInfo class: ${memberName}`);\r\n\t\t}\r\n\t}\r\n\t//**********************************************************************************\r\n\t/**\r\n\t * Return value of pre-defined ASN.1 schema for current class\r\n\t *\r\n\t * ASN.1 schema:\r\n\t * ```asn1\r\n\t * EncapsulatedContentInfo ::= SEQUENCE {\r\n\t *    eContentType ContentType,\r\n\t *    eContent [0] EXPLICIT OCTET STRING OPTIONAL } * Changed it to ANY, as in PKCS#7\r\n\t * ```\r\n\t *\r\n\t * @param {Object} parameters Input parameters for the schema\r\n\t * @returns {Object} asn1js schema object\r\n\t */\r\n\tstatic schema(parameters = {})\r\n\t{\r\n\t\t/**\r\n\t\t * @type {Object}\r\n\t\t * @property {string} [blockName]\r\n\t\t * @property {string} [type]\r\n\t\t * @property {string} [setName]\r\n\t\t * @property {string} [values]\r\n\t\t */\r\n\t\tconst names = getParametersValue(parameters, \"names\", {});\r\n\t\t\r\n\t\treturn (new asn1js.Sequence({\r\n\t\t\tname: (names.blockName || \"\"),\r\n\t\t\tvalue: [\r\n\t\t\t\tnew asn1js.ObjectIdentifier({ name: (names.eContentType || \"\") }),\r\n\t\t\t\tnew asn1js.Constructed({\r\n\t\t\t\t\toptional: true,\r\n\t\t\t\t\tidBlock: {\r\n\t\t\t\t\t\ttagClass: 3, // CONTEXT-SPECIFIC\r\n\t\t\t\t\t\ttagNumber: 0 // [0]\r\n\t\t\t\t\t},\r\n\t\t\t\t\tvalue: [\r\n\t\t\t\t\t\tnew asn1js.Any({ name: (names.eContent || \"\") }) // In order to aling this with PKCS#7 and CMS as well\r\n\t\t\t\t\t]\r\n\t\t\t\t})\r\n\t\t\t]\r\n\t\t}));\r\n\t}\r\n\t//**********************************************************************************\r\n\t/**\r\n\t * Convert parsed asn1js object into current class\r\n\t * @param {!Object} schema\r\n\t */\r\n\tfromSchema(schema)\r\n\t{\r\n\t\t//region Clear input data first\r\n\t\tclearProps(schema, [\r\n\t\t\t\"eContentType\",\r\n\t\t\t\"eContent\"\r\n\t\t]);\r\n\t\t//endregion\r\n\t\t\r\n\t\t//region Check the schema is valid\r\n\t\tconst asn1 = asn1js.compareSchema(schema,\r\n\t\t\tschema,\r\n\t\t\tEncapsulatedContentInfo.schema({\r\n\t\t\t\tnames: {\r\n\t\t\t\t\teContentType: \"eContentType\",\r\n\t\t\t\t\teContent: \"eContent\"\r\n\t\t\t\t}\r\n\t\t\t})\r\n\t\t);\r\n\r\n\t\tif(asn1.verified === false)\r\n\t\t\tthrow new Error(\"Object's schema was not verified against input data for EncapsulatedContentInfo\");\r\n\t\t//endregion\r\n\r\n\t\t//region Get internal properties from parsed schema\r\n\t\tthis.eContentType = asn1.result.eContentType.valueBlock.toString();\r\n\t\tif(\"eContent\" in asn1.result)\r\n\t\t\tthis.eContent = asn1.result.eContent;\r\n\t\t//endregion\r\n\t}\r\n\t//**********************************************************************************\r\n\t/**\r\n\t * Convert current object to asn1js object and set correct values\r\n\t * @returns {Object} asn1js object\r\n\t */\r\n\ttoSchema()\r\n\t{\r\n\t\t//region Create array for output sequence \r\n\t\tconst outputArray = [];\r\n\t\t\r\n\t\toutputArray.push(new asn1js.ObjectIdentifier({ value: this.eContentType }));\r\n\t\tif(\"eContent\" in this)\r\n\t\t{\r\n\t\t\tif(EncapsulatedContentInfo.compareWithDefault(\"eContent\", this.eContent) === false)\r\n\t\t\t{\r\n\t\t\t\toutputArray.push(new asn1js.Constructed({\r\n\t\t\t\t\toptional: true,\r\n\t\t\t\t\tidBlock: {\r\n\t\t\t\t\t\ttagClass: 3, // CONTEXT-SPECIFIC\r\n\t\t\t\t\t\ttagNumber: 0 // [0]\r\n\t\t\t\t\t},\r\n\t\t\t\t\tvalue: [this.eContent]\r\n\t\t\t\t}));\r\n\t\t\t}\r\n\t\t}\r\n\t\t//endregion \r\n\t\t\r\n\t\t//region Construct and return new ASN.1 schema for this object \r\n\t\treturn (new asn1js.Sequence({\r\n\t\t\tvalue: outputArray\r\n\t\t}));\r\n\t\t//endregion \r\n\t}\r\n\t//**********************************************************************************\r\n\t/**\r\n\t * Convertion for the class to JSON object\r\n\t * @returns {Object}\r\n\t */\r\n\ttoJSON()\r\n\t{\r\n\t\tconst _object = {\r\n\t\t\teContentType: this.eContentType\r\n\t\t};\r\n\r\n\t\tif(\"eContent\" in this)\r\n\t\t{\r\n\t\t\tif(EncapsulatedContentInfo.compareWithDefault(\"eContent\", this.eContent) === false)\r\n\t\t\t\t_object.eContent = this.eContent.toJSON();\r\n\t\t}\r\n\r\n\t\treturn _object;\r\n\t}\r\n\t//**********************************************************************************\r\n}\r\n//**************************************************************************************\r\n"],"file":"EncapsulatedContentInfo.js"}